
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model Users
 * 
 */
export type Users = $Result.DefaultSelection<Prisma.$UsersPayload>
/**
 * Model Mechanic
 * 
 */
export type Mechanic = $Result.DefaultSelection<Prisma.$MechanicPayload>
/**
 * Model SolicitacaoServicos
 * 
 */
export type SolicitacaoServicos = $Result.DefaultSelection<Prisma.$SolicitacaoServicosPayload>
/**
 * Model AtribuicaoServicos
 * 
 */
export type AtribuicaoServicos = $Result.DefaultSelection<Prisma.$AtribuicaoServicosPayload>
/**
 * Model Message
 * 
 */
export type Message = $Result.DefaultSelection<Prisma.$MessagePayload>
/**
 * Model Rating
 * 
 */
export type Rating = $Result.DefaultSelection<Prisma.$RatingPayload>

/**
 * Enums
 */
export namespace $Enums {
  export const Role: {
  PRODUCER: 'PRODUCER',
  MECHANIC: 'MECHANIC'
};

export type Role = (typeof Role)[keyof typeof Role]


export const StatusAtribuicao: {
  PENDENTE: 'PENDENTE',
  ACEITA: 'ACEITA',
  RECUSADA: 'RECUSADA',
  CANCELADA: 'CANCELADA'
};

export type StatusAtribuicao = (typeof StatusAtribuicao)[keyof typeof StatusAtribuicao]


export const RequestStatus: {
  ABERTA: 'ABERTA',
  ATRIBUIDA: 'ATRIBUIDA',
  CANCELADA: 'CANCELADA',
  CONCLUIDA: 'CONCLUIDA'
};

export type RequestStatus = (typeof RequestStatus)[keyof typeof RequestStatus]

}

export type Role = $Enums.Role

export const Role: typeof $Enums.Role

export type StatusAtribuicao = $Enums.StatusAtribuicao

export const StatusAtribuicao: typeof $Enums.StatusAtribuicao

export type RequestStatus = $Enums.RequestStatus

export const RequestStatus: typeof $Enums.RequestStatus

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Users
 * const users = await prisma.users.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  const U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Users
   * const users = await prisma.users.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.users`: Exposes CRUD operations for the **Users** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.users.findMany()
    * ```
    */
  get users(): Prisma.UsersDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.mechanic`: Exposes CRUD operations for the **Mechanic** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Mechanics
    * const mechanics = await prisma.mechanic.findMany()
    * ```
    */
  get mechanic(): Prisma.MechanicDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.solicitacaoServicos`: Exposes CRUD operations for the **SolicitacaoServicos** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more SolicitacaoServicos
    * const solicitacaoServicos = await prisma.solicitacaoServicos.findMany()
    * ```
    */
  get solicitacaoServicos(): Prisma.SolicitacaoServicosDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.atribuicaoServicos`: Exposes CRUD operations for the **AtribuicaoServicos** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more AtribuicaoServicos
    * const atribuicaoServicos = await prisma.atribuicaoServicos.findMany()
    * ```
    */
  get atribuicaoServicos(): Prisma.AtribuicaoServicosDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.message`: Exposes CRUD operations for the **Message** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Messages
    * const messages = await prisma.message.findMany()
    * ```
    */
  get message(): Prisma.MessageDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.rating`: Exposes CRUD operations for the **Rating** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Ratings
    * const ratings = await prisma.rating.findMany()
    * ```
    */
  get rating(): Prisma.RatingDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.14.0
   * Query Engine version: 717184b7b35ea05dfa71a3236b7af656013e1e49
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    Users: 'Users',
    Mechanic: 'Mechanic',
    SolicitacaoServicos: 'SolicitacaoServicos',
    AtribuicaoServicos: 'AtribuicaoServicos',
    Message: 'Message',
    Rating: 'Rating'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "users" | "mechanic" | "solicitacaoServicos" | "atribuicaoServicos" | "message" | "rating"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      Users: {
        payload: Prisma.$UsersPayload<ExtArgs>
        fields: Prisma.UsersFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UsersFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsersPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UsersFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsersPayload>
          }
          findFirst: {
            args: Prisma.UsersFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsersPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UsersFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsersPayload>
          }
          findMany: {
            args: Prisma.UsersFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsersPayload>[]
          }
          create: {
            args: Prisma.UsersCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsersPayload>
          }
          createMany: {
            args: Prisma.UsersCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UsersCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsersPayload>[]
          }
          delete: {
            args: Prisma.UsersDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsersPayload>
          }
          update: {
            args: Prisma.UsersUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsersPayload>
          }
          deleteMany: {
            args: Prisma.UsersDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UsersUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.UsersUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsersPayload>[]
          }
          upsert: {
            args: Prisma.UsersUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsersPayload>
          }
          aggregate: {
            args: Prisma.UsersAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUsers>
          }
          groupBy: {
            args: Prisma.UsersGroupByArgs<ExtArgs>
            result: $Utils.Optional<UsersGroupByOutputType>[]
          }
          count: {
            args: Prisma.UsersCountArgs<ExtArgs>
            result: $Utils.Optional<UsersCountAggregateOutputType> | number
          }
        }
      }
      Mechanic: {
        payload: Prisma.$MechanicPayload<ExtArgs>
        fields: Prisma.MechanicFieldRefs
        operations: {
          findUnique: {
            args: Prisma.MechanicFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MechanicPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.MechanicFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MechanicPayload>
          }
          findFirst: {
            args: Prisma.MechanicFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MechanicPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.MechanicFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MechanicPayload>
          }
          findMany: {
            args: Prisma.MechanicFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MechanicPayload>[]
          }
          create: {
            args: Prisma.MechanicCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MechanicPayload>
          }
          createMany: {
            args: Prisma.MechanicCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.MechanicCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MechanicPayload>[]
          }
          delete: {
            args: Prisma.MechanicDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MechanicPayload>
          }
          update: {
            args: Prisma.MechanicUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MechanicPayload>
          }
          deleteMany: {
            args: Prisma.MechanicDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.MechanicUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.MechanicUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MechanicPayload>[]
          }
          upsert: {
            args: Prisma.MechanicUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MechanicPayload>
          }
          aggregate: {
            args: Prisma.MechanicAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMechanic>
          }
          groupBy: {
            args: Prisma.MechanicGroupByArgs<ExtArgs>
            result: $Utils.Optional<MechanicGroupByOutputType>[]
          }
          count: {
            args: Prisma.MechanicCountArgs<ExtArgs>
            result: $Utils.Optional<MechanicCountAggregateOutputType> | number
          }
        }
      }
      SolicitacaoServicos: {
        payload: Prisma.$SolicitacaoServicosPayload<ExtArgs>
        fields: Prisma.SolicitacaoServicosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SolicitacaoServicosFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SolicitacaoServicosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SolicitacaoServicosFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SolicitacaoServicosPayload>
          }
          findFirst: {
            args: Prisma.SolicitacaoServicosFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SolicitacaoServicosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SolicitacaoServicosFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SolicitacaoServicosPayload>
          }
          findMany: {
            args: Prisma.SolicitacaoServicosFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SolicitacaoServicosPayload>[]
          }
          create: {
            args: Prisma.SolicitacaoServicosCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SolicitacaoServicosPayload>
          }
          createMany: {
            args: Prisma.SolicitacaoServicosCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SolicitacaoServicosCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SolicitacaoServicosPayload>[]
          }
          delete: {
            args: Prisma.SolicitacaoServicosDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SolicitacaoServicosPayload>
          }
          update: {
            args: Prisma.SolicitacaoServicosUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SolicitacaoServicosPayload>
          }
          deleteMany: {
            args: Prisma.SolicitacaoServicosDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SolicitacaoServicosUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.SolicitacaoServicosUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SolicitacaoServicosPayload>[]
          }
          upsert: {
            args: Prisma.SolicitacaoServicosUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SolicitacaoServicosPayload>
          }
          aggregate: {
            args: Prisma.SolicitacaoServicosAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSolicitacaoServicos>
          }
          groupBy: {
            args: Prisma.SolicitacaoServicosGroupByArgs<ExtArgs>
            result: $Utils.Optional<SolicitacaoServicosGroupByOutputType>[]
          }
          count: {
            args: Prisma.SolicitacaoServicosCountArgs<ExtArgs>
            result: $Utils.Optional<SolicitacaoServicosCountAggregateOutputType> | number
          }
        }
      }
      AtribuicaoServicos: {
        payload: Prisma.$AtribuicaoServicosPayload<ExtArgs>
        fields: Prisma.AtribuicaoServicosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AtribuicaoServicosFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AtribuicaoServicosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AtribuicaoServicosFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AtribuicaoServicosPayload>
          }
          findFirst: {
            args: Prisma.AtribuicaoServicosFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AtribuicaoServicosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AtribuicaoServicosFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AtribuicaoServicosPayload>
          }
          findMany: {
            args: Prisma.AtribuicaoServicosFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AtribuicaoServicosPayload>[]
          }
          create: {
            args: Prisma.AtribuicaoServicosCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AtribuicaoServicosPayload>
          }
          createMany: {
            args: Prisma.AtribuicaoServicosCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AtribuicaoServicosCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AtribuicaoServicosPayload>[]
          }
          delete: {
            args: Prisma.AtribuicaoServicosDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AtribuicaoServicosPayload>
          }
          update: {
            args: Prisma.AtribuicaoServicosUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AtribuicaoServicosPayload>
          }
          deleteMany: {
            args: Prisma.AtribuicaoServicosDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AtribuicaoServicosUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.AtribuicaoServicosUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AtribuicaoServicosPayload>[]
          }
          upsert: {
            args: Prisma.AtribuicaoServicosUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AtribuicaoServicosPayload>
          }
          aggregate: {
            args: Prisma.AtribuicaoServicosAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAtribuicaoServicos>
          }
          groupBy: {
            args: Prisma.AtribuicaoServicosGroupByArgs<ExtArgs>
            result: $Utils.Optional<AtribuicaoServicosGroupByOutputType>[]
          }
          count: {
            args: Prisma.AtribuicaoServicosCountArgs<ExtArgs>
            result: $Utils.Optional<AtribuicaoServicosCountAggregateOutputType> | number
          }
        }
      }
      Message: {
        payload: Prisma.$MessagePayload<ExtArgs>
        fields: Prisma.MessageFieldRefs
        operations: {
          findUnique: {
            args: Prisma.MessageFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.MessageFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePayload>
          }
          findFirst: {
            args: Prisma.MessageFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.MessageFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePayload>
          }
          findMany: {
            args: Prisma.MessageFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePayload>[]
          }
          create: {
            args: Prisma.MessageCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePayload>
          }
          createMany: {
            args: Prisma.MessageCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.MessageCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePayload>[]
          }
          delete: {
            args: Prisma.MessageDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePayload>
          }
          update: {
            args: Prisma.MessageUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePayload>
          }
          deleteMany: {
            args: Prisma.MessageDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.MessageUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.MessageUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePayload>[]
          }
          upsert: {
            args: Prisma.MessageUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePayload>
          }
          aggregate: {
            args: Prisma.MessageAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMessage>
          }
          groupBy: {
            args: Prisma.MessageGroupByArgs<ExtArgs>
            result: $Utils.Optional<MessageGroupByOutputType>[]
          }
          count: {
            args: Prisma.MessageCountArgs<ExtArgs>
            result: $Utils.Optional<MessageCountAggregateOutputType> | number
          }
        }
      }
      Rating: {
        payload: Prisma.$RatingPayload<ExtArgs>
        fields: Prisma.RatingFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RatingFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RatingPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RatingFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RatingPayload>
          }
          findFirst: {
            args: Prisma.RatingFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RatingPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RatingFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RatingPayload>
          }
          findMany: {
            args: Prisma.RatingFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RatingPayload>[]
          }
          create: {
            args: Prisma.RatingCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RatingPayload>
          }
          createMany: {
            args: Prisma.RatingCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.RatingCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RatingPayload>[]
          }
          delete: {
            args: Prisma.RatingDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RatingPayload>
          }
          update: {
            args: Prisma.RatingUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RatingPayload>
          }
          deleteMany: {
            args: Prisma.RatingDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.RatingUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.RatingUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RatingPayload>[]
          }
          upsert: {
            args: Prisma.RatingUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RatingPayload>
          }
          aggregate: {
            args: Prisma.RatingAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRating>
          }
          groupBy: {
            args: Prisma.RatingGroupByArgs<ExtArgs>
            result: $Utils.Optional<RatingGroupByOutputType>[]
          }
          count: {
            args: Prisma.RatingCountArgs<ExtArgs>
            result: $Utils.Optional<RatingCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Shorthand for `emit: 'stdout'`
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events only
     * log: [
     *   { emit: 'event', level: 'query' },
     *   { emit: 'event', level: 'info' },
     *   { emit: 'event', level: 'warn' }
     *   { emit: 'event', level: 'error' }
     * ]
     * 
     * / Emit as events and log to stdout
     * og: [
     *  { emit: 'stdout', level: 'query' },
     *  { emit: 'stdout', level: 'info' },
     *  { emit: 'stdout', level: 'warn' }
     *  { emit: 'stdout', level: 'error' }
     * 
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    users?: UsersOmit
    mechanic?: MechanicOmit
    solicitacaoServicos?: SolicitacaoServicosOmit
    atribuicaoServicos?: AtribuicaoServicosOmit
    message?: MessageOmit
    rating?: RatingOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type CheckIsLogLevel<T> = T extends LogLevel ? T : never;

  export type GetLogType<T> = CheckIsLogLevel<
    T extends LogDefinition ? T['level'] : T
  >;

  export type GetEvents<T extends any[]> = T extends Array<LogLevel | LogDefinition>
    ? GetLogType<T[number]>
    : never;

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type UsersCountOutputType
   */

  export type UsersCountOutputType = {
    SolicitacaoServicos: number
    AtribuicaoServicos: number
    Message: number
    ratingsComoProdutor: number
  }

  export type UsersCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    SolicitacaoServicos?: boolean | UsersCountOutputTypeCountSolicitacaoServicosArgs
    AtribuicaoServicos?: boolean | UsersCountOutputTypeCountAtribuicaoServicosArgs
    Message?: boolean | UsersCountOutputTypeCountMessageArgs
    ratingsComoProdutor?: boolean | UsersCountOutputTypeCountRatingsComoProdutorArgs
  }

  // Custom InputTypes
  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsersCountOutputType
     */
    select?: UsersCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountSolicitacaoServicosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SolicitacaoServicosWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountAtribuicaoServicosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AtribuicaoServicosWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountMessageArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MessageWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountRatingsComoProdutorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RatingWhereInput
  }


  /**
   * Count Type MechanicCountOutputType
   */

  export type MechanicCountOutputType = {
    ratings: number
  }

  export type MechanicCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ratings?: boolean | MechanicCountOutputTypeCountRatingsArgs
  }

  // Custom InputTypes
  /**
   * MechanicCountOutputType without action
   */
  export type MechanicCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MechanicCountOutputType
     */
    select?: MechanicCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * MechanicCountOutputType without action
   */
  export type MechanicCountOutputTypeCountRatingsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RatingWhereInput
  }


  /**
   * Count Type SolicitacaoServicosCountOutputType
   */

  export type SolicitacaoServicosCountOutputType = {
    assignments: number
    messages: number
    Rating: number
  }

  export type SolicitacaoServicosCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    assignments?: boolean | SolicitacaoServicosCountOutputTypeCountAssignmentsArgs
    messages?: boolean | SolicitacaoServicosCountOutputTypeCountMessagesArgs
    Rating?: boolean | SolicitacaoServicosCountOutputTypeCountRatingArgs
  }

  // Custom InputTypes
  /**
   * SolicitacaoServicosCountOutputType without action
   */
  export type SolicitacaoServicosCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SolicitacaoServicosCountOutputType
     */
    select?: SolicitacaoServicosCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * SolicitacaoServicosCountOutputType without action
   */
  export type SolicitacaoServicosCountOutputTypeCountAssignmentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AtribuicaoServicosWhereInput
  }

  /**
   * SolicitacaoServicosCountOutputType without action
   */
  export type SolicitacaoServicosCountOutputTypeCountMessagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MessageWhereInput
  }

  /**
   * SolicitacaoServicosCountOutputType without action
   */
  export type SolicitacaoServicosCountOutputTypeCountRatingArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RatingWhereInput
  }


  /**
   * Models
   */

  /**
   * Model Users
   */

  export type AggregateUsers = {
    _count: UsersCountAggregateOutputType | null
    _min: UsersMinAggregateOutputType | null
    _max: UsersMaxAggregateOutputType | null
  }

  export type UsersMinAggregateOutputType = {
    id: string | null
    email: string | null
    password: string | null
    fullName: string | null
    role: $Enums.Role | null
    phone: string | null
    cpfCnpj: string | null
    stateReg: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UsersMaxAggregateOutputType = {
    id: string | null
    email: string | null
    password: string | null
    fullName: string | null
    role: $Enums.Role | null
    phone: string | null
    cpfCnpj: string | null
    stateReg: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UsersCountAggregateOutputType = {
    id: number
    email: number
    password: number
    fullName: number
    role: number
    phone: number
    cpfCnpj: number
    stateReg: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type UsersMinAggregateInputType = {
    id?: true
    email?: true
    password?: true
    fullName?: true
    role?: true
    phone?: true
    cpfCnpj?: true
    stateReg?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UsersMaxAggregateInputType = {
    id?: true
    email?: true
    password?: true
    fullName?: true
    role?: true
    phone?: true
    cpfCnpj?: true
    stateReg?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UsersCountAggregateInputType = {
    id?: true
    email?: true
    password?: true
    fullName?: true
    role?: true
    phone?: true
    cpfCnpj?: true
    stateReg?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type UsersAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Users to aggregate.
     */
    where?: UsersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UsersOrderByWithRelationInput | UsersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UsersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Users
    **/
    _count?: true | UsersCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UsersMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UsersMaxAggregateInputType
  }

  export type GetUsersAggregateType<T extends UsersAggregateArgs> = {
        [P in keyof T & keyof AggregateUsers]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUsers[P]>
      : GetScalarType<T[P], AggregateUsers[P]>
  }




  export type UsersGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UsersWhereInput
    orderBy?: UsersOrderByWithAggregationInput | UsersOrderByWithAggregationInput[]
    by: UsersScalarFieldEnum[] | UsersScalarFieldEnum
    having?: UsersScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UsersCountAggregateInputType | true
    _min?: UsersMinAggregateInputType
    _max?: UsersMaxAggregateInputType
  }

  export type UsersGroupByOutputType = {
    id: string
    email: string
    password: string
    fullName: string
    role: $Enums.Role
    phone: string | null
    cpfCnpj: string | null
    stateReg: string | null
    createdAt: Date
    updatedAt: Date
    _count: UsersCountAggregateOutputType | null
    _min: UsersMinAggregateOutputType | null
    _max: UsersMaxAggregateOutputType | null
  }

  type GetUsersGroupByPayload<T extends UsersGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UsersGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UsersGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UsersGroupByOutputType[P]>
            : GetScalarType<T[P], UsersGroupByOutputType[P]>
        }
      >
    >


  export type UsersSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    password?: boolean
    fullName?: boolean
    role?: boolean
    phone?: boolean
    cpfCnpj?: boolean
    stateReg?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    mechanic?: boolean | Users$mechanicArgs<ExtArgs>
    SolicitacaoServicos?: boolean | Users$SolicitacaoServicosArgs<ExtArgs>
    AtribuicaoServicos?: boolean | Users$AtribuicaoServicosArgs<ExtArgs>
    Message?: boolean | Users$MessageArgs<ExtArgs>
    ratingsComoProdutor?: boolean | Users$ratingsComoProdutorArgs<ExtArgs>
    _count?: boolean | UsersCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["users"]>

  export type UsersSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    password?: boolean
    fullName?: boolean
    role?: boolean
    phone?: boolean
    cpfCnpj?: boolean
    stateReg?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["users"]>

  export type UsersSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    password?: boolean
    fullName?: boolean
    role?: boolean
    phone?: boolean
    cpfCnpj?: boolean
    stateReg?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["users"]>

  export type UsersSelectScalar = {
    id?: boolean
    email?: boolean
    password?: boolean
    fullName?: boolean
    role?: boolean
    phone?: boolean
    cpfCnpj?: boolean
    stateReg?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type UsersOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "email" | "password" | "fullName" | "role" | "phone" | "cpfCnpj" | "stateReg" | "createdAt" | "updatedAt", ExtArgs["result"]["users"]>
  export type UsersInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    mechanic?: boolean | Users$mechanicArgs<ExtArgs>
    SolicitacaoServicos?: boolean | Users$SolicitacaoServicosArgs<ExtArgs>
    AtribuicaoServicos?: boolean | Users$AtribuicaoServicosArgs<ExtArgs>
    Message?: boolean | Users$MessageArgs<ExtArgs>
    ratingsComoProdutor?: boolean | Users$ratingsComoProdutorArgs<ExtArgs>
    _count?: boolean | UsersCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type UsersIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type UsersIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $UsersPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Users"
    objects: {
      mechanic: Prisma.$MechanicPayload<ExtArgs> | null
      SolicitacaoServicos: Prisma.$SolicitacaoServicosPayload<ExtArgs>[]
      AtribuicaoServicos: Prisma.$AtribuicaoServicosPayload<ExtArgs>[]
      Message: Prisma.$MessagePayload<ExtArgs>[]
      ratingsComoProdutor: Prisma.$RatingPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      email: string
      password: string
      fullName: string
      role: $Enums.Role
      phone: string | null
      cpfCnpj: string | null
      stateReg: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["users"]>
    composites: {}
  }

  type UsersGetPayload<S extends boolean | null | undefined | UsersDefaultArgs> = $Result.GetResult<Prisma.$UsersPayload, S>

  type UsersCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UsersFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UsersCountAggregateInputType | true
    }

  export interface UsersDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Users'], meta: { name: 'Users' } }
    /**
     * Find zero or one Users that matches the filter.
     * @param {UsersFindUniqueArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UsersFindUniqueArgs>(args: SelectSubset<T, UsersFindUniqueArgs<ExtArgs>>): Prisma__UsersClient<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Users that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UsersFindUniqueOrThrowArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UsersFindUniqueOrThrowArgs>(args: SelectSubset<T, UsersFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UsersClient<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersFindFirstArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UsersFindFirstArgs>(args?: SelectSubset<T, UsersFindFirstArgs<ExtArgs>>): Prisma__UsersClient<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Users that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersFindFirstOrThrowArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UsersFindFirstOrThrowArgs>(args?: SelectSubset<T, UsersFindFirstOrThrowArgs<ExtArgs>>): Prisma__UsersClient<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.users.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.users.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const usersWithIdOnly = await prisma.users.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UsersFindManyArgs>(args?: SelectSubset<T, UsersFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Users.
     * @param {UsersCreateArgs} args - Arguments to create a Users.
     * @example
     * // Create one Users
     * const Users = await prisma.users.create({
     *   data: {
     *     // ... data to create a Users
     *   }
     * })
     * 
     */
    create<T extends UsersCreateArgs>(args: SelectSubset<T, UsersCreateArgs<ExtArgs>>): Prisma__UsersClient<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Users.
     * @param {UsersCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const users = await prisma.users.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UsersCreateManyArgs>(args?: SelectSubset<T, UsersCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Users and returns the data saved in the database.
     * @param {UsersCreateManyAndReturnArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const users = await prisma.users.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Users and only return the `id`
     * const usersWithIdOnly = await prisma.users.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UsersCreateManyAndReturnArgs>(args?: SelectSubset<T, UsersCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Users.
     * @param {UsersDeleteArgs} args - Arguments to delete one Users.
     * @example
     * // Delete one Users
     * const Users = await prisma.users.delete({
     *   where: {
     *     // ... filter to delete one Users
     *   }
     * })
     * 
     */
    delete<T extends UsersDeleteArgs>(args: SelectSubset<T, UsersDeleteArgs<ExtArgs>>): Prisma__UsersClient<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Users.
     * @param {UsersUpdateArgs} args - Arguments to update one Users.
     * @example
     * // Update one Users
     * const users = await prisma.users.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UsersUpdateArgs>(args: SelectSubset<T, UsersUpdateArgs<ExtArgs>>): Prisma__UsersClient<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Users.
     * @param {UsersDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.users.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UsersDeleteManyArgs>(args?: SelectSubset<T, UsersDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const users = await prisma.users.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UsersUpdateManyArgs>(args: SelectSubset<T, UsersUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users and returns the data updated in the database.
     * @param {UsersUpdateManyAndReturnArgs} args - Arguments to update many Users.
     * @example
     * // Update many Users
     * const users = await prisma.users.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Users and only return the `id`
     * const usersWithIdOnly = await prisma.users.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends UsersUpdateManyAndReturnArgs>(args: SelectSubset<T, UsersUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Users.
     * @param {UsersUpsertArgs} args - Arguments to update or create a Users.
     * @example
     * // Update or create a Users
     * const users = await prisma.users.upsert({
     *   create: {
     *     // ... data to create a Users
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Users we want to update
     *   }
     * })
     */
    upsert<T extends UsersUpsertArgs>(args: SelectSubset<T, UsersUpsertArgs<ExtArgs>>): Prisma__UsersClient<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.users.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends UsersCountArgs>(
      args?: Subset<T, UsersCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UsersCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UsersAggregateArgs>(args: Subset<T, UsersAggregateArgs>): Prisma.PrismaPromise<GetUsersAggregateType<T>>

    /**
     * Group by Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UsersGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UsersGroupByArgs['orderBy'] }
        : { orderBy?: UsersGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UsersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUsersGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Users model
   */
  readonly fields: UsersFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Users.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UsersClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    mechanic<T extends Users$mechanicArgs<ExtArgs> = {}>(args?: Subset<T, Users$mechanicArgs<ExtArgs>>): Prisma__MechanicClient<$Result.GetResult<Prisma.$MechanicPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    SolicitacaoServicos<T extends Users$SolicitacaoServicosArgs<ExtArgs> = {}>(args?: Subset<T, Users$SolicitacaoServicosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SolicitacaoServicosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    AtribuicaoServicos<T extends Users$AtribuicaoServicosArgs<ExtArgs> = {}>(args?: Subset<T, Users$AtribuicaoServicosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AtribuicaoServicosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Message<T extends Users$MessageArgs<ExtArgs> = {}>(args?: Subset<T, Users$MessageArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    ratingsComoProdutor<T extends Users$ratingsComoProdutorArgs<ExtArgs> = {}>(args?: Subset<T, Users$ratingsComoProdutorArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RatingPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Users model
   */
  interface UsersFieldRefs {
    readonly id: FieldRef<"Users", 'String'>
    readonly email: FieldRef<"Users", 'String'>
    readonly password: FieldRef<"Users", 'String'>
    readonly fullName: FieldRef<"Users", 'String'>
    readonly role: FieldRef<"Users", 'Role'>
    readonly phone: FieldRef<"Users", 'String'>
    readonly cpfCnpj: FieldRef<"Users", 'String'>
    readonly stateReg: FieldRef<"Users", 'String'>
    readonly createdAt: FieldRef<"Users", 'DateTime'>
    readonly updatedAt: FieldRef<"Users", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Users findUnique
   */
  export type UsersFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Users
     */
    omit?: UsersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsersInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where: UsersWhereUniqueInput
  }

  /**
   * Users findUniqueOrThrow
   */
  export type UsersFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Users
     */
    omit?: UsersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsersInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where: UsersWhereUniqueInput
  }

  /**
   * Users findFirst
   */
  export type UsersFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Users
     */
    omit?: UsersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsersInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UsersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UsersOrderByWithRelationInput | UsersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UsersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }

  /**
   * Users findFirstOrThrow
   */
  export type UsersFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Users
     */
    omit?: UsersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsersInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UsersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UsersOrderByWithRelationInput | UsersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UsersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }

  /**
   * Users findMany
   */
  export type UsersFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Users
     */
    omit?: UsersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsersInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UsersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UsersOrderByWithRelationInput | UsersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Users.
     */
    cursor?: UsersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }

  /**
   * Users create
   */
  export type UsersCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Users
     */
    omit?: UsersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsersInclude<ExtArgs> | null
    /**
     * The data needed to create a Users.
     */
    data: XOR<UsersCreateInput, UsersUncheckedCreateInput>
  }

  /**
   * Users createMany
   */
  export type UsersCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Users.
     */
    data: UsersCreateManyInput | UsersCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Users createManyAndReturn
   */
  export type UsersCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Users
     */
    omit?: UsersOmit<ExtArgs> | null
    /**
     * The data used to create many Users.
     */
    data: UsersCreateManyInput | UsersCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Users update
   */
  export type UsersUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Users
     */
    omit?: UsersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsersInclude<ExtArgs> | null
    /**
     * The data needed to update a Users.
     */
    data: XOR<UsersUpdateInput, UsersUncheckedUpdateInput>
    /**
     * Choose, which Users to update.
     */
    where: UsersWhereUniqueInput
  }

  /**
   * Users updateMany
   */
  export type UsersUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Users.
     */
    data: XOR<UsersUpdateManyMutationInput, UsersUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UsersWhereInput
    /**
     * Limit how many Users to update.
     */
    limit?: number
  }

  /**
   * Users updateManyAndReturn
   */
  export type UsersUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Users
     */
    omit?: UsersOmit<ExtArgs> | null
    /**
     * The data used to update Users.
     */
    data: XOR<UsersUpdateManyMutationInput, UsersUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UsersWhereInput
    /**
     * Limit how many Users to update.
     */
    limit?: number
  }

  /**
   * Users upsert
   */
  export type UsersUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Users
     */
    omit?: UsersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsersInclude<ExtArgs> | null
    /**
     * The filter to search for the Users to update in case it exists.
     */
    where: UsersWhereUniqueInput
    /**
     * In case the Users found by the `where` argument doesn't exist, create a new Users with this data.
     */
    create: XOR<UsersCreateInput, UsersUncheckedCreateInput>
    /**
     * In case the Users was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UsersUpdateInput, UsersUncheckedUpdateInput>
  }

  /**
   * Users delete
   */
  export type UsersDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Users
     */
    omit?: UsersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsersInclude<ExtArgs> | null
    /**
     * Filter which Users to delete.
     */
    where: UsersWhereUniqueInput
  }

  /**
   * Users deleteMany
   */
  export type UsersDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Users to delete
     */
    where?: UsersWhereInput
    /**
     * Limit how many Users to delete.
     */
    limit?: number
  }

  /**
   * Users.mechanic
   */
  export type Users$mechanicArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mechanic
     */
    select?: MechanicSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mechanic
     */
    omit?: MechanicOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MechanicInclude<ExtArgs> | null
    where?: MechanicWhereInput
  }

  /**
   * Users.SolicitacaoServicos
   */
  export type Users$SolicitacaoServicosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SolicitacaoServicos
     */
    select?: SolicitacaoServicosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SolicitacaoServicos
     */
    omit?: SolicitacaoServicosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SolicitacaoServicosInclude<ExtArgs> | null
    where?: SolicitacaoServicosWhereInput
    orderBy?: SolicitacaoServicosOrderByWithRelationInput | SolicitacaoServicosOrderByWithRelationInput[]
    cursor?: SolicitacaoServicosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SolicitacaoServicosScalarFieldEnum | SolicitacaoServicosScalarFieldEnum[]
  }

  /**
   * Users.AtribuicaoServicos
   */
  export type Users$AtribuicaoServicosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AtribuicaoServicos
     */
    select?: AtribuicaoServicosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AtribuicaoServicos
     */
    omit?: AtribuicaoServicosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AtribuicaoServicosInclude<ExtArgs> | null
    where?: AtribuicaoServicosWhereInput
    orderBy?: AtribuicaoServicosOrderByWithRelationInput | AtribuicaoServicosOrderByWithRelationInput[]
    cursor?: AtribuicaoServicosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AtribuicaoServicosScalarFieldEnum | AtribuicaoServicosScalarFieldEnum[]
  }

  /**
   * Users.Message
   */
  export type Users$MessageArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Message
     */
    omit?: MessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    where?: MessageWhereInput
    orderBy?: MessageOrderByWithRelationInput | MessageOrderByWithRelationInput[]
    cursor?: MessageWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MessageScalarFieldEnum | MessageScalarFieldEnum[]
  }

  /**
   * Users.ratingsComoProdutor
   */
  export type Users$ratingsComoProdutorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Rating
     */
    select?: RatingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Rating
     */
    omit?: RatingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RatingInclude<ExtArgs> | null
    where?: RatingWhereInput
    orderBy?: RatingOrderByWithRelationInput | RatingOrderByWithRelationInput[]
    cursor?: RatingWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RatingScalarFieldEnum | RatingScalarFieldEnum[]
  }

  /**
   * Users without action
   */
  export type UsersDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Users
     */
    omit?: UsersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsersInclude<ExtArgs> | null
  }


  /**
   * Model Mechanic
   */

  export type AggregateMechanic = {
    _count: MechanicCountAggregateOutputType | null
    _avg: MechanicAvgAggregateOutputType | null
    _sum: MechanicSumAggregateOutputType | null
    _min: MechanicMinAggregateOutputType | null
    _max: MechanicMaxAggregateOutputType | null
  }

  export type MechanicAvgAggregateOutputType = {
    lat: number | null
    lng: number | null
  }

  export type MechanicSumAggregateOutputType = {
    lat: number | null
    lng: number | null
  }

  export type MechanicMinAggregateOutputType = {
    userId: string | null
    specialty: string | null
    photoUrl: string | null
    isAvailable: boolean | null
    lat: number | null
    lng: number | null
    updatedAt: Date | null
  }

  export type MechanicMaxAggregateOutputType = {
    userId: string | null
    specialty: string | null
    photoUrl: string | null
    isAvailable: boolean | null
    lat: number | null
    lng: number | null
    updatedAt: Date | null
  }

  export type MechanicCountAggregateOutputType = {
    userId: number
    specialty: number
    photoUrl: number
    isAvailable: number
    lat: number
    lng: number
    updatedAt: number
    _all: number
  }


  export type MechanicAvgAggregateInputType = {
    lat?: true
    lng?: true
  }

  export type MechanicSumAggregateInputType = {
    lat?: true
    lng?: true
  }

  export type MechanicMinAggregateInputType = {
    userId?: true
    specialty?: true
    photoUrl?: true
    isAvailable?: true
    lat?: true
    lng?: true
    updatedAt?: true
  }

  export type MechanicMaxAggregateInputType = {
    userId?: true
    specialty?: true
    photoUrl?: true
    isAvailable?: true
    lat?: true
    lng?: true
    updatedAt?: true
  }

  export type MechanicCountAggregateInputType = {
    userId?: true
    specialty?: true
    photoUrl?: true
    isAvailable?: true
    lat?: true
    lng?: true
    updatedAt?: true
    _all?: true
  }

  export type MechanicAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Mechanic to aggregate.
     */
    where?: MechanicWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Mechanics to fetch.
     */
    orderBy?: MechanicOrderByWithRelationInput | MechanicOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: MechanicWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Mechanics from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Mechanics.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Mechanics
    **/
    _count?: true | MechanicCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: MechanicAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: MechanicSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MechanicMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MechanicMaxAggregateInputType
  }

  export type GetMechanicAggregateType<T extends MechanicAggregateArgs> = {
        [P in keyof T & keyof AggregateMechanic]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMechanic[P]>
      : GetScalarType<T[P], AggregateMechanic[P]>
  }




  export type MechanicGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MechanicWhereInput
    orderBy?: MechanicOrderByWithAggregationInput | MechanicOrderByWithAggregationInput[]
    by: MechanicScalarFieldEnum[] | MechanicScalarFieldEnum
    having?: MechanicScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MechanicCountAggregateInputType | true
    _avg?: MechanicAvgAggregateInputType
    _sum?: MechanicSumAggregateInputType
    _min?: MechanicMinAggregateInputType
    _max?: MechanicMaxAggregateInputType
  }

  export type MechanicGroupByOutputType = {
    userId: string
    specialty: string
    photoUrl: string
    isAvailable: boolean
    lat: number | null
    lng: number | null
    updatedAt: Date
    _count: MechanicCountAggregateOutputType | null
    _avg: MechanicAvgAggregateOutputType | null
    _sum: MechanicSumAggregateOutputType | null
    _min: MechanicMinAggregateOutputType | null
    _max: MechanicMaxAggregateOutputType | null
  }

  type GetMechanicGroupByPayload<T extends MechanicGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MechanicGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MechanicGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MechanicGroupByOutputType[P]>
            : GetScalarType<T[P], MechanicGroupByOutputType[P]>
        }
      >
    >


  export type MechanicSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    userId?: boolean
    specialty?: boolean
    photoUrl?: boolean
    isAvailable?: boolean
    lat?: boolean
    lng?: boolean
    updatedAt?: boolean
    user?: boolean | UsersDefaultArgs<ExtArgs>
    ratings?: boolean | Mechanic$ratingsArgs<ExtArgs>
    _count?: boolean | MechanicCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["mechanic"]>

  export type MechanicSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    userId?: boolean
    specialty?: boolean
    photoUrl?: boolean
    isAvailable?: boolean
    lat?: boolean
    lng?: boolean
    updatedAt?: boolean
    user?: boolean | UsersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["mechanic"]>

  export type MechanicSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    userId?: boolean
    specialty?: boolean
    photoUrl?: boolean
    isAvailable?: boolean
    lat?: boolean
    lng?: boolean
    updatedAt?: boolean
    user?: boolean | UsersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["mechanic"]>

  export type MechanicSelectScalar = {
    userId?: boolean
    specialty?: boolean
    photoUrl?: boolean
    isAvailable?: boolean
    lat?: boolean
    lng?: boolean
    updatedAt?: boolean
  }

  export type MechanicOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"userId" | "specialty" | "photoUrl" | "isAvailable" | "lat" | "lng" | "updatedAt", ExtArgs["result"]["mechanic"]>
  export type MechanicInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UsersDefaultArgs<ExtArgs>
    ratings?: boolean | Mechanic$ratingsArgs<ExtArgs>
    _count?: boolean | MechanicCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type MechanicIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UsersDefaultArgs<ExtArgs>
  }
  export type MechanicIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UsersDefaultArgs<ExtArgs>
  }

  export type $MechanicPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Mechanic"
    objects: {
      user: Prisma.$UsersPayload<ExtArgs>
      ratings: Prisma.$RatingPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      userId: string
      specialty: string
      photoUrl: string
      isAvailable: boolean
      lat: number | null
      lng: number | null
      updatedAt: Date
    }, ExtArgs["result"]["mechanic"]>
    composites: {}
  }

  type MechanicGetPayload<S extends boolean | null | undefined | MechanicDefaultArgs> = $Result.GetResult<Prisma.$MechanicPayload, S>

  type MechanicCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<MechanicFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: MechanicCountAggregateInputType | true
    }

  export interface MechanicDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Mechanic'], meta: { name: 'Mechanic' } }
    /**
     * Find zero or one Mechanic that matches the filter.
     * @param {MechanicFindUniqueArgs} args - Arguments to find a Mechanic
     * @example
     * // Get one Mechanic
     * const mechanic = await prisma.mechanic.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends MechanicFindUniqueArgs>(args: SelectSubset<T, MechanicFindUniqueArgs<ExtArgs>>): Prisma__MechanicClient<$Result.GetResult<Prisma.$MechanicPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Mechanic that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {MechanicFindUniqueOrThrowArgs} args - Arguments to find a Mechanic
     * @example
     * // Get one Mechanic
     * const mechanic = await prisma.mechanic.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends MechanicFindUniqueOrThrowArgs>(args: SelectSubset<T, MechanicFindUniqueOrThrowArgs<ExtArgs>>): Prisma__MechanicClient<$Result.GetResult<Prisma.$MechanicPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Mechanic that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MechanicFindFirstArgs} args - Arguments to find a Mechanic
     * @example
     * // Get one Mechanic
     * const mechanic = await prisma.mechanic.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends MechanicFindFirstArgs>(args?: SelectSubset<T, MechanicFindFirstArgs<ExtArgs>>): Prisma__MechanicClient<$Result.GetResult<Prisma.$MechanicPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Mechanic that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MechanicFindFirstOrThrowArgs} args - Arguments to find a Mechanic
     * @example
     * // Get one Mechanic
     * const mechanic = await prisma.mechanic.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends MechanicFindFirstOrThrowArgs>(args?: SelectSubset<T, MechanicFindFirstOrThrowArgs<ExtArgs>>): Prisma__MechanicClient<$Result.GetResult<Prisma.$MechanicPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Mechanics that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MechanicFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Mechanics
     * const mechanics = await prisma.mechanic.findMany()
     * 
     * // Get first 10 Mechanics
     * const mechanics = await prisma.mechanic.findMany({ take: 10 })
     * 
     * // Only select the `userId`
     * const mechanicWithUserIdOnly = await prisma.mechanic.findMany({ select: { userId: true } })
     * 
     */
    findMany<T extends MechanicFindManyArgs>(args?: SelectSubset<T, MechanicFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MechanicPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Mechanic.
     * @param {MechanicCreateArgs} args - Arguments to create a Mechanic.
     * @example
     * // Create one Mechanic
     * const Mechanic = await prisma.mechanic.create({
     *   data: {
     *     // ... data to create a Mechanic
     *   }
     * })
     * 
     */
    create<T extends MechanicCreateArgs>(args: SelectSubset<T, MechanicCreateArgs<ExtArgs>>): Prisma__MechanicClient<$Result.GetResult<Prisma.$MechanicPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Mechanics.
     * @param {MechanicCreateManyArgs} args - Arguments to create many Mechanics.
     * @example
     * // Create many Mechanics
     * const mechanic = await prisma.mechanic.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends MechanicCreateManyArgs>(args?: SelectSubset<T, MechanicCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Mechanics and returns the data saved in the database.
     * @param {MechanicCreateManyAndReturnArgs} args - Arguments to create many Mechanics.
     * @example
     * // Create many Mechanics
     * const mechanic = await prisma.mechanic.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Mechanics and only return the `userId`
     * const mechanicWithUserIdOnly = await prisma.mechanic.createManyAndReturn({
     *   select: { userId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends MechanicCreateManyAndReturnArgs>(args?: SelectSubset<T, MechanicCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MechanicPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Mechanic.
     * @param {MechanicDeleteArgs} args - Arguments to delete one Mechanic.
     * @example
     * // Delete one Mechanic
     * const Mechanic = await prisma.mechanic.delete({
     *   where: {
     *     // ... filter to delete one Mechanic
     *   }
     * })
     * 
     */
    delete<T extends MechanicDeleteArgs>(args: SelectSubset<T, MechanicDeleteArgs<ExtArgs>>): Prisma__MechanicClient<$Result.GetResult<Prisma.$MechanicPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Mechanic.
     * @param {MechanicUpdateArgs} args - Arguments to update one Mechanic.
     * @example
     * // Update one Mechanic
     * const mechanic = await prisma.mechanic.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends MechanicUpdateArgs>(args: SelectSubset<T, MechanicUpdateArgs<ExtArgs>>): Prisma__MechanicClient<$Result.GetResult<Prisma.$MechanicPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Mechanics.
     * @param {MechanicDeleteManyArgs} args - Arguments to filter Mechanics to delete.
     * @example
     * // Delete a few Mechanics
     * const { count } = await prisma.mechanic.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends MechanicDeleteManyArgs>(args?: SelectSubset<T, MechanicDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Mechanics.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MechanicUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Mechanics
     * const mechanic = await prisma.mechanic.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends MechanicUpdateManyArgs>(args: SelectSubset<T, MechanicUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Mechanics and returns the data updated in the database.
     * @param {MechanicUpdateManyAndReturnArgs} args - Arguments to update many Mechanics.
     * @example
     * // Update many Mechanics
     * const mechanic = await prisma.mechanic.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Mechanics and only return the `userId`
     * const mechanicWithUserIdOnly = await prisma.mechanic.updateManyAndReturn({
     *   select: { userId: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends MechanicUpdateManyAndReturnArgs>(args: SelectSubset<T, MechanicUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MechanicPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Mechanic.
     * @param {MechanicUpsertArgs} args - Arguments to update or create a Mechanic.
     * @example
     * // Update or create a Mechanic
     * const mechanic = await prisma.mechanic.upsert({
     *   create: {
     *     // ... data to create a Mechanic
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Mechanic we want to update
     *   }
     * })
     */
    upsert<T extends MechanicUpsertArgs>(args: SelectSubset<T, MechanicUpsertArgs<ExtArgs>>): Prisma__MechanicClient<$Result.GetResult<Prisma.$MechanicPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Mechanics.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MechanicCountArgs} args - Arguments to filter Mechanics to count.
     * @example
     * // Count the number of Mechanics
     * const count = await prisma.mechanic.count({
     *   where: {
     *     // ... the filter for the Mechanics we want to count
     *   }
     * })
    **/
    count<T extends MechanicCountArgs>(
      args?: Subset<T, MechanicCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MechanicCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Mechanic.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MechanicAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MechanicAggregateArgs>(args: Subset<T, MechanicAggregateArgs>): Prisma.PrismaPromise<GetMechanicAggregateType<T>>

    /**
     * Group by Mechanic.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MechanicGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MechanicGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MechanicGroupByArgs['orderBy'] }
        : { orderBy?: MechanicGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MechanicGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMechanicGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Mechanic model
   */
  readonly fields: MechanicFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Mechanic.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__MechanicClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UsersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsersDefaultArgs<ExtArgs>>): Prisma__UsersClient<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    ratings<T extends Mechanic$ratingsArgs<ExtArgs> = {}>(args?: Subset<T, Mechanic$ratingsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RatingPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Mechanic model
   */
  interface MechanicFieldRefs {
    readonly userId: FieldRef<"Mechanic", 'String'>
    readonly specialty: FieldRef<"Mechanic", 'String'>
    readonly photoUrl: FieldRef<"Mechanic", 'String'>
    readonly isAvailable: FieldRef<"Mechanic", 'Boolean'>
    readonly lat: FieldRef<"Mechanic", 'Float'>
    readonly lng: FieldRef<"Mechanic", 'Float'>
    readonly updatedAt: FieldRef<"Mechanic", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Mechanic findUnique
   */
  export type MechanicFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mechanic
     */
    select?: MechanicSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mechanic
     */
    omit?: MechanicOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MechanicInclude<ExtArgs> | null
    /**
     * Filter, which Mechanic to fetch.
     */
    where: MechanicWhereUniqueInput
  }

  /**
   * Mechanic findUniqueOrThrow
   */
  export type MechanicFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mechanic
     */
    select?: MechanicSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mechanic
     */
    omit?: MechanicOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MechanicInclude<ExtArgs> | null
    /**
     * Filter, which Mechanic to fetch.
     */
    where: MechanicWhereUniqueInput
  }

  /**
   * Mechanic findFirst
   */
  export type MechanicFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mechanic
     */
    select?: MechanicSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mechanic
     */
    omit?: MechanicOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MechanicInclude<ExtArgs> | null
    /**
     * Filter, which Mechanic to fetch.
     */
    where?: MechanicWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Mechanics to fetch.
     */
    orderBy?: MechanicOrderByWithRelationInput | MechanicOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Mechanics.
     */
    cursor?: MechanicWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Mechanics from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Mechanics.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Mechanics.
     */
    distinct?: MechanicScalarFieldEnum | MechanicScalarFieldEnum[]
  }

  /**
   * Mechanic findFirstOrThrow
   */
  export type MechanicFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mechanic
     */
    select?: MechanicSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mechanic
     */
    omit?: MechanicOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MechanicInclude<ExtArgs> | null
    /**
     * Filter, which Mechanic to fetch.
     */
    where?: MechanicWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Mechanics to fetch.
     */
    orderBy?: MechanicOrderByWithRelationInput | MechanicOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Mechanics.
     */
    cursor?: MechanicWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Mechanics from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Mechanics.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Mechanics.
     */
    distinct?: MechanicScalarFieldEnum | MechanicScalarFieldEnum[]
  }

  /**
   * Mechanic findMany
   */
  export type MechanicFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mechanic
     */
    select?: MechanicSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mechanic
     */
    omit?: MechanicOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MechanicInclude<ExtArgs> | null
    /**
     * Filter, which Mechanics to fetch.
     */
    where?: MechanicWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Mechanics to fetch.
     */
    orderBy?: MechanicOrderByWithRelationInput | MechanicOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Mechanics.
     */
    cursor?: MechanicWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Mechanics from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Mechanics.
     */
    skip?: number
    distinct?: MechanicScalarFieldEnum | MechanicScalarFieldEnum[]
  }

  /**
   * Mechanic create
   */
  export type MechanicCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mechanic
     */
    select?: MechanicSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mechanic
     */
    omit?: MechanicOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MechanicInclude<ExtArgs> | null
    /**
     * The data needed to create a Mechanic.
     */
    data: XOR<MechanicCreateInput, MechanicUncheckedCreateInput>
  }

  /**
   * Mechanic createMany
   */
  export type MechanicCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Mechanics.
     */
    data: MechanicCreateManyInput | MechanicCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Mechanic createManyAndReturn
   */
  export type MechanicCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mechanic
     */
    select?: MechanicSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Mechanic
     */
    omit?: MechanicOmit<ExtArgs> | null
    /**
     * The data used to create many Mechanics.
     */
    data: MechanicCreateManyInput | MechanicCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MechanicIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Mechanic update
   */
  export type MechanicUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mechanic
     */
    select?: MechanicSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mechanic
     */
    omit?: MechanicOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MechanicInclude<ExtArgs> | null
    /**
     * The data needed to update a Mechanic.
     */
    data: XOR<MechanicUpdateInput, MechanicUncheckedUpdateInput>
    /**
     * Choose, which Mechanic to update.
     */
    where: MechanicWhereUniqueInput
  }

  /**
   * Mechanic updateMany
   */
  export type MechanicUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Mechanics.
     */
    data: XOR<MechanicUpdateManyMutationInput, MechanicUncheckedUpdateManyInput>
    /**
     * Filter which Mechanics to update
     */
    where?: MechanicWhereInput
    /**
     * Limit how many Mechanics to update.
     */
    limit?: number
  }

  /**
   * Mechanic updateManyAndReturn
   */
  export type MechanicUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mechanic
     */
    select?: MechanicSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Mechanic
     */
    omit?: MechanicOmit<ExtArgs> | null
    /**
     * The data used to update Mechanics.
     */
    data: XOR<MechanicUpdateManyMutationInput, MechanicUncheckedUpdateManyInput>
    /**
     * Filter which Mechanics to update
     */
    where?: MechanicWhereInput
    /**
     * Limit how many Mechanics to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MechanicIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Mechanic upsert
   */
  export type MechanicUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mechanic
     */
    select?: MechanicSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mechanic
     */
    omit?: MechanicOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MechanicInclude<ExtArgs> | null
    /**
     * The filter to search for the Mechanic to update in case it exists.
     */
    where: MechanicWhereUniqueInput
    /**
     * In case the Mechanic found by the `where` argument doesn't exist, create a new Mechanic with this data.
     */
    create: XOR<MechanicCreateInput, MechanicUncheckedCreateInput>
    /**
     * In case the Mechanic was found with the provided `where` argument, update it with this data.
     */
    update: XOR<MechanicUpdateInput, MechanicUncheckedUpdateInput>
  }

  /**
   * Mechanic delete
   */
  export type MechanicDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mechanic
     */
    select?: MechanicSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mechanic
     */
    omit?: MechanicOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MechanicInclude<ExtArgs> | null
    /**
     * Filter which Mechanic to delete.
     */
    where: MechanicWhereUniqueInput
  }

  /**
   * Mechanic deleteMany
   */
  export type MechanicDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Mechanics to delete
     */
    where?: MechanicWhereInput
    /**
     * Limit how many Mechanics to delete.
     */
    limit?: number
  }

  /**
   * Mechanic.ratings
   */
  export type Mechanic$ratingsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Rating
     */
    select?: RatingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Rating
     */
    omit?: RatingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RatingInclude<ExtArgs> | null
    where?: RatingWhereInput
    orderBy?: RatingOrderByWithRelationInput | RatingOrderByWithRelationInput[]
    cursor?: RatingWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RatingScalarFieldEnum | RatingScalarFieldEnum[]
  }

  /**
   * Mechanic without action
   */
  export type MechanicDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mechanic
     */
    select?: MechanicSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mechanic
     */
    omit?: MechanicOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MechanicInclude<ExtArgs> | null
  }


  /**
   * Model SolicitacaoServicos
   */

  export type AggregateSolicitacaoServicos = {
    _count: SolicitacaoServicosCountAggregateOutputType | null
    _avg: SolicitacaoServicosAvgAggregateOutputType | null
    _sum: SolicitacaoServicosSumAggregateOutputType | null
    _min: SolicitacaoServicosMinAggregateOutputType | null
    _max: SolicitacaoServicosMaxAggregateOutputType | null
  }

  export type SolicitacaoServicosAvgAggregateOutputType = {
    locationLat: number | null
    locationLng: number | null
  }

  export type SolicitacaoServicosSumAggregateOutputType = {
    locationLat: number | null
    locationLng: number | null
  }

  export type SolicitacaoServicosMinAggregateOutputType = {
    id: string | null
    producerId: string | null
    description: string | null
    machineType: string | null
    locationLat: number | null
    locationLng: number | null
    scheduledFor: Date | null
    status: $Enums.RequestStatus | null
    createdAt: Date | null
  }

  export type SolicitacaoServicosMaxAggregateOutputType = {
    id: string | null
    producerId: string | null
    description: string | null
    machineType: string | null
    locationLat: number | null
    locationLng: number | null
    scheduledFor: Date | null
    status: $Enums.RequestStatus | null
    createdAt: Date | null
  }

  export type SolicitacaoServicosCountAggregateOutputType = {
    id: number
    producerId: number
    description: number
    machineType: number
    locationLat: number
    locationLng: number
    scheduledFor: number
    status: number
    createdAt: number
    _all: number
  }


  export type SolicitacaoServicosAvgAggregateInputType = {
    locationLat?: true
    locationLng?: true
  }

  export type SolicitacaoServicosSumAggregateInputType = {
    locationLat?: true
    locationLng?: true
  }

  export type SolicitacaoServicosMinAggregateInputType = {
    id?: true
    producerId?: true
    description?: true
    machineType?: true
    locationLat?: true
    locationLng?: true
    scheduledFor?: true
    status?: true
    createdAt?: true
  }

  export type SolicitacaoServicosMaxAggregateInputType = {
    id?: true
    producerId?: true
    description?: true
    machineType?: true
    locationLat?: true
    locationLng?: true
    scheduledFor?: true
    status?: true
    createdAt?: true
  }

  export type SolicitacaoServicosCountAggregateInputType = {
    id?: true
    producerId?: true
    description?: true
    machineType?: true
    locationLat?: true
    locationLng?: true
    scheduledFor?: true
    status?: true
    createdAt?: true
    _all?: true
  }

  export type SolicitacaoServicosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SolicitacaoServicos to aggregate.
     */
    where?: SolicitacaoServicosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SolicitacaoServicos to fetch.
     */
    orderBy?: SolicitacaoServicosOrderByWithRelationInput | SolicitacaoServicosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SolicitacaoServicosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SolicitacaoServicos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SolicitacaoServicos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned SolicitacaoServicos
    **/
    _count?: true | SolicitacaoServicosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SolicitacaoServicosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SolicitacaoServicosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SolicitacaoServicosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SolicitacaoServicosMaxAggregateInputType
  }

  export type GetSolicitacaoServicosAggregateType<T extends SolicitacaoServicosAggregateArgs> = {
        [P in keyof T & keyof AggregateSolicitacaoServicos]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSolicitacaoServicos[P]>
      : GetScalarType<T[P], AggregateSolicitacaoServicos[P]>
  }




  export type SolicitacaoServicosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SolicitacaoServicosWhereInput
    orderBy?: SolicitacaoServicosOrderByWithAggregationInput | SolicitacaoServicosOrderByWithAggregationInput[]
    by: SolicitacaoServicosScalarFieldEnum[] | SolicitacaoServicosScalarFieldEnum
    having?: SolicitacaoServicosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SolicitacaoServicosCountAggregateInputType | true
    _avg?: SolicitacaoServicosAvgAggregateInputType
    _sum?: SolicitacaoServicosSumAggregateInputType
    _min?: SolicitacaoServicosMinAggregateInputType
    _max?: SolicitacaoServicosMaxAggregateInputType
  }

  export type SolicitacaoServicosGroupByOutputType = {
    id: string
    producerId: string
    description: string
    machineType: string | null
    locationLat: number | null
    locationLng: number | null
    scheduledFor: Date | null
    status: $Enums.RequestStatus
    createdAt: Date
    _count: SolicitacaoServicosCountAggregateOutputType | null
    _avg: SolicitacaoServicosAvgAggregateOutputType | null
    _sum: SolicitacaoServicosSumAggregateOutputType | null
    _min: SolicitacaoServicosMinAggregateOutputType | null
    _max: SolicitacaoServicosMaxAggregateOutputType | null
  }

  type GetSolicitacaoServicosGroupByPayload<T extends SolicitacaoServicosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SolicitacaoServicosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SolicitacaoServicosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SolicitacaoServicosGroupByOutputType[P]>
            : GetScalarType<T[P], SolicitacaoServicosGroupByOutputType[P]>
        }
      >
    >


  export type SolicitacaoServicosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    producerId?: boolean
    description?: boolean
    machineType?: boolean
    locationLat?: boolean
    locationLng?: boolean
    scheduledFor?: boolean
    status?: boolean
    createdAt?: boolean
    producer?: boolean | UsersDefaultArgs<ExtArgs>
    assignments?: boolean | SolicitacaoServicos$assignmentsArgs<ExtArgs>
    messages?: boolean | SolicitacaoServicos$messagesArgs<ExtArgs>
    Rating?: boolean | SolicitacaoServicos$RatingArgs<ExtArgs>
    _count?: boolean | SolicitacaoServicosCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["solicitacaoServicos"]>

  export type SolicitacaoServicosSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    producerId?: boolean
    description?: boolean
    machineType?: boolean
    locationLat?: boolean
    locationLng?: boolean
    scheduledFor?: boolean
    status?: boolean
    createdAt?: boolean
    producer?: boolean | UsersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["solicitacaoServicos"]>

  export type SolicitacaoServicosSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    producerId?: boolean
    description?: boolean
    machineType?: boolean
    locationLat?: boolean
    locationLng?: boolean
    scheduledFor?: boolean
    status?: boolean
    createdAt?: boolean
    producer?: boolean | UsersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["solicitacaoServicos"]>

  export type SolicitacaoServicosSelectScalar = {
    id?: boolean
    producerId?: boolean
    description?: boolean
    machineType?: boolean
    locationLat?: boolean
    locationLng?: boolean
    scheduledFor?: boolean
    status?: boolean
    createdAt?: boolean
  }

  export type SolicitacaoServicosOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "producerId" | "description" | "machineType" | "locationLat" | "locationLng" | "scheduledFor" | "status" | "createdAt", ExtArgs["result"]["solicitacaoServicos"]>
  export type SolicitacaoServicosInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    producer?: boolean | UsersDefaultArgs<ExtArgs>
    assignments?: boolean | SolicitacaoServicos$assignmentsArgs<ExtArgs>
    messages?: boolean | SolicitacaoServicos$messagesArgs<ExtArgs>
    Rating?: boolean | SolicitacaoServicos$RatingArgs<ExtArgs>
    _count?: boolean | SolicitacaoServicosCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type SolicitacaoServicosIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    producer?: boolean | UsersDefaultArgs<ExtArgs>
  }
  export type SolicitacaoServicosIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    producer?: boolean | UsersDefaultArgs<ExtArgs>
  }

  export type $SolicitacaoServicosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "SolicitacaoServicos"
    objects: {
      producer: Prisma.$UsersPayload<ExtArgs>
      assignments: Prisma.$AtribuicaoServicosPayload<ExtArgs>[]
      messages: Prisma.$MessagePayload<ExtArgs>[]
      Rating: Prisma.$RatingPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      producerId: string
      description: string
      machineType: string | null
      locationLat: number | null
      locationLng: number | null
      scheduledFor: Date | null
      status: $Enums.RequestStatus
      createdAt: Date
    }, ExtArgs["result"]["solicitacaoServicos"]>
    composites: {}
  }

  type SolicitacaoServicosGetPayload<S extends boolean | null | undefined | SolicitacaoServicosDefaultArgs> = $Result.GetResult<Prisma.$SolicitacaoServicosPayload, S>

  type SolicitacaoServicosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SolicitacaoServicosFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SolicitacaoServicosCountAggregateInputType | true
    }

  export interface SolicitacaoServicosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['SolicitacaoServicos'], meta: { name: 'SolicitacaoServicos' } }
    /**
     * Find zero or one SolicitacaoServicos that matches the filter.
     * @param {SolicitacaoServicosFindUniqueArgs} args - Arguments to find a SolicitacaoServicos
     * @example
     * // Get one SolicitacaoServicos
     * const solicitacaoServicos = await prisma.solicitacaoServicos.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SolicitacaoServicosFindUniqueArgs>(args: SelectSubset<T, SolicitacaoServicosFindUniqueArgs<ExtArgs>>): Prisma__SolicitacaoServicosClient<$Result.GetResult<Prisma.$SolicitacaoServicosPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one SolicitacaoServicos that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SolicitacaoServicosFindUniqueOrThrowArgs} args - Arguments to find a SolicitacaoServicos
     * @example
     * // Get one SolicitacaoServicos
     * const solicitacaoServicos = await prisma.solicitacaoServicos.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SolicitacaoServicosFindUniqueOrThrowArgs>(args: SelectSubset<T, SolicitacaoServicosFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SolicitacaoServicosClient<$Result.GetResult<Prisma.$SolicitacaoServicosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SolicitacaoServicos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SolicitacaoServicosFindFirstArgs} args - Arguments to find a SolicitacaoServicos
     * @example
     * // Get one SolicitacaoServicos
     * const solicitacaoServicos = await prisma.solicitacaoServicos.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SolicitacaoServicosFindFirstArgs>(args?: SelectSubset<T, SolicitacaoServicosFindFirstArgs<ExtArgs>>): Prisma__SolicitacaoServicosClient<$Result.GetResult<Prisma.$SolicitacaoServicosPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SolicitacaoServicos that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SolicitacaoServicosFindFirstOrThrowArgs} args - Arguments to find a SolicitacaoServicos
     * @example
     * // Get one SolicitacaoServicos
     * const solicitacaoServicos = await prisma.solicitacaoServicos.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SolicitacaoServicosFindFirstOrThrowArgs>(args?: SelectSubset<T, SolicitacaoServicosFindFirstOrThrowArgs<ExtArgs>>): Prisma__SolicitacaoServicosClient<$Result.GetResult<Prisma.$SolicitacaoServicosPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more SolicitacaoServicos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SolicitacaoServicosFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all SolicitacaoServicos
     * const solicitacaoServicos = await prisma.solicitacaoServicos.findMany()
     * 
     * // Get first 10 SolicitacaoServicos
     * const solicitacaoServicos = await prisma.solicitacaoServicos.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const solicitacaoServicosWithIdOnly = await prisma.solicitacaoServicos.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SolicitacaoServicosFindManyArgs>(args?: SelectSubset<T, SolicitacaoServicosFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SolicitacaoServicosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a SolicitacaoServicos.
     * @param {SolicitacaoServicosCreateArgs} args - Arguments to create a SolicitacaoServicos.
     * @example
     * // Create one SolicitacaoServicos
     * const SolicitacaoServicos = await prisma.solicitacaoServicos.create({
     *   data: {
     *     // ... data to create a SolicitacaoServicos
     *   }
     * })
     * 
     */
    create<T extends SolicitacaoServicosCreateArgs>(args: SelectSubset<T, SolicitacaoServicosCreateArgs<ExtArgs>>): Prisma__SolicitacaoServicosClient<$Result.GetResult<Prisma.$SolicitacaoServicosPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many SolicitacaoServicos.
     * @param {SolicitacaoServicosCreateManyArgs} args - Arguments to create many SolicitacaoServicos.
     * @example
     * // Create many SolicitacaoServicos
     * const solicitacaoServicos = await prisma.solicitacaoServicos.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SolicitacaoServicosCreateManyArgs>(args?: SelectSubset<T, SolicitacaoServicosCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many SolicitacaoServicos and returns the data saved in the database.
     * @param {SolicitacaoServicosCreateManyAndReturnArgs} args - Arguments to create many SolicitacaoServicos.
     * @example
     * // Create many SolicitacaoServicos
     * const solicitacaoServicos = await prisma.solicitacaoServicos.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many SolicitacaoServicos and only return the `id`
     * const solicitacaoServicosWithIdOnly = await prisma.solicitacaoServicos.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SolicitacaoServicosCreateManyAndReturnArgs>(args?: SelectSubset<T, SolicitacaoServicosCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SolicitacaoServicosPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a SolicitacaoServicos.
     * @param {SolicitacaoServicosDeleteArgs} args - Arguments to delete one SolicitacaoServicos.
     * @example
     * // Delete one SolicitacaoServicos
     * const SolicitacaoServicos = await prisma.solicitacaoServicos.delete({
     *   where: {
     *     // ... filter to delete one SolicitacaoServicos
     *   }
     * })
     * 
     */
    delete<T extends SolicitacaoServicosDeleteArgs>(args: SelectSubset<T, SolicitacaoServicosDeleteArgs<ExtArgs>>): Prisma__SolicitacaoServicosClient<$Result.GetResult<Prisma.$SolicitacaoServicosPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one SolicitacaoServicos.
     * @param {SolicitacaoServicosUpdateArgs} args - Arguments to update one SolicitacaoServicos.
     * @example
     * // Update one SolicitacaoServicos
     * const solicitacaoServicos = await prisma.solicitacaoServicos.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SolicitacaoServicosUpdateArgs>(args: SelectSubset<T, SolicitacaoServicosUpdateArgs<ExtArgs>>): Prisma__SolicitacaoServicosClient<$Result.GetResult<Prisma.$SolicitacaoServicosPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more SolicitacaoServicos.
     * @param {SolicitacaoServicosDeleteManyArgs} args - Arguments to filter SolicitacaoServicos to delete.
     * @example
     * // Delete a few SolicitacaoServicos
     * const { count } = await prisma.solicitacaoServicos.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SolicitacaoServicosDeleteManyArgs>(args?: SelectSubset<T, SolicitacaoServicosDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SolicitacaoServicos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SolicitacaoServicosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many SolicitacaoServicos
     * const solicitacaoServicos = await prisma.solicitacaoServicos.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SolicitacaoServicosUpdateManyArgs>(args: SelectSubset<T, SolicitacaoServicosUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SolicitacaoServicos and returns the data updated in the database.
     * @param {SolicitacaoServicosUpdateManyAndReturnArgs} args - Arguments to update many SolicitacaoServicos.
     * @example
     * // Update many SolicitacaoServicos
     * const solicitacaoServicos = await prisma.solicitacaoServicos.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more SolicitacaoServicos and only return the `id`
     * const solicitacaoServicosWithIdOnly = await prisma.solicitacaoServicos.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends SolicitacaoServicosUpdateManyAndReturnArgs>(args: SelectSubset<T, SolicitacaoServicosUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SolicitacaoServicosPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one SolicitacaoServicos.
     * @param {SolicitacaoServicosUpsertArgs} args - Arguments to update or create a SolicitacaoServicos.
     * @example
     * // Update or create a SolicitacaoServicos
     * const solicitacaoServicos = await prisma.solicitacaoServicos.upsert({
     *   create: {
     *     // ... data to create a SolicitacaoServicos
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the SolicitacaoServicos we want to update
     *   }
     * })
     */
    upsert<T extends SolicitacaoServicosUpsertArgs>(args: SelectSubset<T, SolicitacaoServicosUpsertArgs<ExtArgs>>): Prisma__SolicitacaoServicosClient<$Result.GetResult<Prisma.$SolicitacaoServicosPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of SolicitacaoServicos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SolicitacaoServicosCountArgs} args - Arguments to filter SolicitacaoServicos to count.
     * @example
     * // Count the number of SolicitacaoServicos
     * const count = await prisma.solicitacaoServicos.count({
     *   where: {
     *     // ... the filter for the SolicitacaoServicos we want to count
     *   }
     * })
    **/
    count<T extends SolicitacaoServicosCountArgs>(
      args?: Subset<T, SolicitacaoServicosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SolicitacaoServicosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a SolicitacaoServicos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SolicitacaoServicosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SolicitacaoServicosAggregateArgs>(args: Subset<T, SolicitacaoServicosAggregateArgs>): Prisma.PrismaPromise<GetSolicitacaoServicosAggregateType<T>>

    /**
     * Group by SolicitacaoServicos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SolicitacaoServicosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SolicitacaoServicosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SolicitacaoServicosGroupByArgs['orderBy'] }
        : { orderBy?: SolicitacaoServicosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SolicitacaoServicosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSolicitacaoServicosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the SolicitacaoServicos model
   */
  readonly fields: SolicitacaoServicosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for SolicitacaoServicos.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SolicitacaoServicosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    producer<T extends UsersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsersDefaultArgs<ExtArgs>>): Prisma__UsersClient<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    assignments<T extends SolicitacaoServicos$assignmentsArgs<ExtArgs> = {}>(args?: Subset<T, SolicitacaoServicos$assignmentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AtribuicaoServicosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    messages<T extends SolicitacaoServicos$messagesArgs<ExtArgs> = {}>(args?: Subset<T, SolicitacaoServicos$messagesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Rating<T extends SolicitacaoServicos$RatingArgs<ExtArgs> = {}>(args?: Subset<T, SolicitacaoServicos$RatingArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RatingPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the SolicitacaoServicos model
   */
  interface SolicitacaoServicosFieldRefs {
    readonly id: FieldRef<"SolicitacaoServicos", 'String'>
    readonly producerId: FieldRef<"SolicitacaoServicos", 'String'>
    readonly description: FieldRef<"SolicitacaoServicos", 'String'>
    readonly machineType: FieldRef<"SolicitacaoServicos", 'String'>
    readonly locationLat: FieldRef<"SolicitacaoServicos", 'Float'>
    readonly locationLng: FieldRef<"SolicitacaoServicos", 'Float'>
    readonly scheduledFor: FieldRef<"SolicitacaoServicos", 'DateTime'>
    readonly status: FieldRef<"SolicitacaoServicos", 'RequestStatus'>
    readonly createdAt: FieldRef<"SolicitacaoServicos", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * SolicitacaoServicos findUnique
   */
  export type SolicitacaoServicosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SolicitacaoServicos
     */
    select?: SolicitacaoServicosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SolicitacaoServicos
     */
    omit?: SolicitacaoServicosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SolicitacaoServicosInclude<ExtArgs> | null
    /**
     * Filter, which SolicitacaoServicos to fetch.
     */
    where: SolicitacaoServicosWhereUniqueInput
  }

  /**
   * SolicitacaoServicos findUniqueOrThrow
   */
  export type SolicitacaoServicosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SolicitacaoServicos
     */
    select?: SolicitacaoServicosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SolicitacaoServicos
     */
    omit?: SolicitacaoServicosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SolicitacaoServicosInclude<ExtArgs> | null
    /**
     * Filter, which SolicitacaoServicos to fetch.
     */
    where: SolicitacaoServicosWhereUniqueInput
  }

  /**
   * SolicitacaoServicos findFirst
   */
  export type SolicitacaoServicosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SolicitacaoServicos
     */
    select?: SolicitacaoServicosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SolicitacaoServicos
     */
    omit?: SolicitacaoServicosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SolicitacaoServicosInclude<ExtArgs> | null
    /**
     * Filter, which SolicitacaoServicos to fetch.
     */
    where?: SolicitacaoServicosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SolicitacaoServicos to fetch.
     */
    orderBy?: SolicitacaoServicosOrderByWithRelationInput | SolicitacaoServicosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SolicitacaoServicos.
     */
    cursor?: SolicitacaoServicosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SolicitacaoServicos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SolicitacaoServicos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SolicitacaoServicos.
     */
    distinct?: SolicitacaoServicosScalarFieldEnum | SolicitacaoServicosScalarFieldEnum[]
  }

  /**
   * SolicitacaoServicos findFirstOrThrow
   */
  export type SolicitacaoServicosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SolicitacaoServicos
     */
    select?: SolicitacaoServicosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SolicitacaoServicos
     */
    omit?: SolicitacaoServicosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SolicitacaoServicosInclude<ExtArgs> | null
    /**
     * Filter, which SolicitacaoServicos to fetch.
     */
    where?: SolicitacaoServicosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SolicitacaoServicos to fetch.
     */
    orderBy?: SolicitacaoServicosOrderByWithRelationInput | SolicitacaoServicosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SolicitacaoServicos.
     */
    cursor?: SolicitacaoServicosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SolicitacaoServicos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SolicitacaoServicos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SolicitacaoServicos.
     */
    distinct?: SolicitacaoServicosScalarFieldEnum | SolicitacaoServicosScalarFieldEnum[]
  }

  /**
   * SolicitacaoServicos findMany
   */
  export type SolicitacaoServicosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SolicitacaoServicos
     */
    select?: SolicitacaoServicosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SolicitacaoServicos
     */
    omit?: SolicitacaoServicosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SolicitacaoServicosInclude<ExtArgs> | null
    /**
     * Filter, which SolicitacaoServicos to fetch.
     */
    where?: SolicitacaoServicosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SolicitacaoServicos to fetch.
     */
    orderBy?: SolicitacaoServicosOrderByWithRelationInput | SolicitacaoServicosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing SolicitacaoServicos.
     */
    cursor?: SolicitacaoServicosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SolicitacaoServicos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SolicitacaoServicos.
     */
    skip?: number
    distinct?: SolicitacaoServicosScalarFieldEnum | SolicitacaoServicosScalarFieldEnum[]
  }

  /**
   * SolicitacaoServicos create
   */
  export type SolicitacaoServicosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SolicitacaoServicos
     */
    select?: SolicitacaoServicosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SolicitacaoServicos
     */
    omit?: SolicitacaoServicosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SolicitacaoServicosInclude<ExtArgs> | null
    /**
     * The data needed to create a SolicitacaoServicos.
     */
    data: XOR<SolicitacaoServicosCreateInput, SolicitacaoServicosUncheckedCreateInput>
  }

  /**
   * SolicitacaoServicos createMany
   */
  export type SolicitacaoServicosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many SolicitacaoServicos.
     */
    data: SolicitacaoServicosCreateManyInput | SolicitacaoServicosCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * SolicitacaoServicos createManyAndReturn
   */
  export type SolicitacaoServicosCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SolicitacaoServicos
     */
    select?: SolicitacaoServicosSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SolicitacaoServicos
     */
    omit?: SolicitacaoServicosOmit<ExtArgs> | null
    /**
     * The data used to create many SolicitacaoServicos.
     */
    data: SolicitacaoServicosCreateManyInput | SolicitacaoServicosCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SolicitacaoServicosIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * SolicitacaoServicos update
   */
  export type SolicitacaoServicosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SolicitacaoServicos
     */
    select?: SolicitacaoServicosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SolicitacaoServicos
     */
    omit?: SolicitacaoServicosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SolicitacaoServicosInclude<ExtArgs> | null
    /**
     * The data needed to update a SolicitacaoServicos.
     */
    data: XOR<SolicitacaoServicosUpdateInput, SolicitacaoServicosUncheckedUpdateInput>
    /**
     * Choose, which SolicitacaoServicos to update.
     */
    where: SolicitacaoServicosWhereUniqueInput
  }

  /**
   * SolicitacaoServicos updateMany
   */
  export type SolicitacaoServicosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update SolicitacaoServicos.
     */
    data: XOR<SolicitacaoServicosUpdateManyMutationInput, SolicitacaoServicosUncheckedUpdateManyInput>
    /**
     * Filter which SolicitacaoServicos to update
     */
    where?: SolicitacaoServicosWhereInput
    /**
     * Limit how many SolicitacaoServicos to update.
     */
    limit?: number
  }

  /**
   * SolicitacaoServicos updateManyAndReturn
   */
  export type SolicitacaoServicosUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SolicitacaoServicos
     */
    select?: SolicitacaoServicosSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SolicitacaoServicos
     */
    omit?: SolicitacaoServicosOmit<ExtArgs> | null
    /**
     * The data used to update SolicitacaoServicos.
     */
    data: XOR<SolicitacaoServicosUpdateManyMutationInput, SolicitacaoServicosUncheckedUpdateManyInput>
    /**
     * Filter which SolicitacaoServicos to update
     */
    where?: SolicitacaoServicosWhereInput
    /**
     * Limit how many SolicitacaoServicos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SolicitacaoServicosIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * SolicitacaoServicos upsert
   */
  export type SolicitacaoServicosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SolicitacaoServicos
     */
    select?: SolicitacaoServicosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SolicitacaoServicos
     */
    omit?: SolicitacaoServicosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SolicitacaoServicosInclude<ExtArgs> | null
    /**
     * The filter to search for the SolicitacaoServicos to update in case it exists.
     */
    where: SolicitacaoServicosWhereUniqueInput
    /**
     * In case the SolicitacaoServicos found by the `where` argument doesn't exist, create a new SolicitacaoServicos with this data.
     */
    create: XOR<SolicitacaoServicosCreateInput, SolicitacaoServicosUncheckedCreateInput>
    /**
     * In case the SolicitacaoServicos was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SolicitacaoServicosUpdateInput, SolicitacaoServicosUncheckedUpdateInput>
  }

  /**
   * SolicitacaoServicos delete
   */
  export type SolicitacaoServicosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SolicitacaoServicos
     */
    select?: SolicitacaoServicosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SolicitacaoServicos
     */
    omit?: SolicitacaoServicosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SolicitacaoServicosInclude<ExtArgs> | null
    /**
     * Filter which SolicitacaoServicos to delete.
     */
    where: SolicitacaoServicosWhereUniqueInput
  }

  /**
   * SolicitacaoServicos deleteMany
   */
  export type SolicitacaoServicosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SolicitacaoServicos to delete
     */
    where?: SolicitacaoServicosWhereInput
    /**
     * Limit how many SolicitacaoServicos to delete.
     */
    limit?: number
  }

  /**
   * SolicitacaoServicos.assignments
   */
  export type SolicitacaoServicos$assignmentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AtribuicaoServicos
     */
    select?: AtribuicaoServicosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AtribuicaoServicos
     */
    omit?: AtribuicaoServicosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AtribuicaoServicosInclude<ExtArgs> | null
    where?: AtribuicaoServicosWhereInput
    orderBy?: AtribuicaoServicosOrderByWithRelationInput | AtribuicaoServicosOrderByWithRelationInput[]
    cursor?: AtribuicaoServicosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AtribuicaoServicosScalarFieldEnum | AtribuicaoServicosScalarFieldEnum[]
  }

  /**
   * SolicitacaoServicos.messages
   */
  export type SolicitacaoServicos$messagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Message
     */
    omit?: MessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    where?: MessageWhereInput
    orderBy?: MessageOrderByWithRelationInput | MessageOrderByWithRelationInput[]
    cursor?: MessageWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MessageScalarFieldEnum | MessageScalarFieldEnum[]
  }

  /**
   * SolicitacaoServicos.Rating
   */
  export type SolicitacaoServicos$RatingArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Rating
     */
    select?: RatingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Rating
     */
    omit?: RatingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RatingInclude<ExtArgs> | null
    where?: RatingWhereInput
    orderBy?: RatingOrderByWithRelationInput | RatingOrderByWithRelationInput[]
    cursor?: RatingWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RatingScalarFieldEnum | RatingScalarFieldEnum[]
  }

  /**
   * SolicitacaoServicos without action
   */
  export type SolicitacaoServicosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SolicitacaoServicos
     */
    select?: SolicitacaoServicosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SolicitacaoServicos
     */
    omit?: SolicitacaoServicosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SolicitacaoServicosInclude<ExtArgs> | null
  }


  /**
   * Model AtribuicaoServicos
   */

  export type AggregateAtribuicaoServicos = {
    _count: AtribuicaoServicosCountAggregateOutputType | null
    _min: AtribuicaoServicosMinAggregateOutputType | null
    _max: AtribuicaoServicosMaxAggregateOutputType | null
  }

  export type AtribuicaoServicosMinAggregateOutputType = {
    id: string | null
    solicitacaoServicoId: string | null
    mechanicId: string | null
    status: $Enums.StatusAtribuicao | null
    decidedAt: Date | null
    createdAt: Date | null
  }

  export type AtribuicaoServicosMaxAggregateOutputType = {
    id: string | null
    solicitacaoServicoId: string | null
    mechanicId: string | null
    status: $Enums.StatusAtribuicao | null
    decidedAt: Date | null
    createdAt: Date | null
  }

  export type AtribuicaoServicosCountAggregateOutputType = {
    id: number
    solicitacaoServicoId: number
    mechanicId: number
    status: number
    decidedAt: number
    createdAt: number
    _all: number
  }


  export type AtribuicaoServicosMinAggregateInputType = {
    id?: true
    solicitacaoServicoId?: true
    mechanicId?: true
    status?: true
    decidedAt?: true
    createdAt?: true
  }

  export type AtribuicaoServicosMaxAggregateInputType = {
    id?: true
    solicitacaoServicoId?: true
    mechanicId?: true
    status?: true
    decidedAt?: true
    createdAt?: true
  }

  export type AtribuicaoServicosCountAggregateInputType = {
    id?: true
    solicitacaoServicoId?: true
    mechanicId?: true
    status?: true
    decidedAt?: true
    createdAt?: true
    _all?: true
  }

  export type AtribuicaoServicosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AtribuicaoServicos to aggregate.
     */
    where?: AtribuicaoServicosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AtribuicaoServicos to fetch.
     */
    orderBy?: AtribuicaoServicosOrderByWithRelationInput | AtribuicaoServicosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AtribuicaoServicosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AtribuicaoServicos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AtribuicaoServicos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned AtribuicaoServicos
    **/
    _count?: true | AtribuicaoServicosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AtribuicaoServicosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AtribuicaoServicosMaxAggregateInputType
  }

  export type GetAtribuicaoServicosAggregateType<T extends AtribuicaoServicosAggregateArgs> = {
        [P in keyof T & keyof AggregateAtribuicaoServicos]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAtribuicaoServicos[P]>
      : GetScalarType<T[P], AggregateAtribuicaoServicos[P]>
  }




  export type AtribuicaoServicosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AtribuicaoServicosWhereInput
    orderBy?: AtribuicaoServicosOrderByWithAggregationInput | AtribuicaoServicosOrderByWithAggregationInput[]
    by: AtribuicaoServicosScalarFieldEnum[] | AtribuicaoServicosScalarFieldEnum
    having?: AtribuicaoServicosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AtribuicaoServicosCountAggregateInputType | true
    _min?: AtribuicaoServicosMinAggregateInputType
    _max?: AtribuicaoServicosMaxAggregateInputType
  }

  export type AtribuicaoServicosGroupByOutputType = {
    id: string
    solicitacaoServicoId: string
    mechanicId: string
    status: $Enums.StatusAtribuicao
    decidedAt: Date | null
    createdAt: Date
    _count: AtribuicaoServicosCountAggregateOutputType | null
    _min: AtribuicaoServicosMinAggregateOutputType | null
    _max: AtribuicaoServicosMaxAggregateOutputType | null
  }

  type GetAtribuicaoServicosGroupByPayload<T extends AtribuicaoServicosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AtribuicaoServicosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AtribuicaoServicosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AtribuicaoServicosGroupByOutputType[P]>
            : GetScalarType<T[P], AtribuicaoServicosGroupByOutputType[P]>
        }
      >
    >


  export type AtribuicaoServicosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    solicitacaoServicoId?: boolean
    mechanicId?: boolean
    status?: boolean
    decidedAt?: boolean
    createdAt?: boolean
    solicitacaoServico?: boolean | SolicitacaoServicosDefaultArgs<ExtArgs>
    mechanic?: boolean | UsersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["atribuicaoServicos"]>

  export type AtribuicaoServicosSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    solicitacaoServicoId?: boolean
    mechanicId?: boolean
    status?: boolean
    decidedAt?: boolean
    createdAt?: boolean
    solicitacaoServico?: boolean | SolicitacaoServicosDefaultArgs<ExtArgs>
    mechanic?: boolean | UsersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["atribuicaoServicos"]>

  export type AtribuicaoServicosSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    solicitacaoServicoId?: boolean
    mechanicId?: boolean
    status?: boolean
    decidedAt?: boolean
    createdAt?: boolean
    solicitacaoServico?: boolean | SolicitacaoServicosDefaultArgs<ExtArgs>
    mechanic?: boolean | UsersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["atribuicaoServicos"]>

  export type AtribuicaoServicosSelectScalar = {
    id?: boolean
    solicitacaoServicoId?: boolean
    mechanicId?: boolean
    status?: boolean
    decidedAt?: boolean
    createdAt?: boolean
  }

  export type AtribuicaoServicosOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "solicitacaoServicoId" | "mechanicId" | "status" | "decidedAt" | "createdAt", ExtArgs["result"]["atribuicaoServicos"]>
  export type AtribuicaoServicosInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    solicitacaoServico?: boolean | SolicitacaoServicosDefaultArgs<ExtArgs>
    mechanic?: boolean | UsersDefaultArgs<ExtArgs>
  }
  export type AtribuicaoServicosIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    solicitacaoServico?: boolean | SolicitacaoServicosDefaultArgs<ExtArgs>
    mechanic?: boolean | UsersDefaultArgs<ExtArgs>
  }
  export type AtribuicaoServicosIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    solicitacaoServico?: boolean | SolicitacaoServicosDefaultArgs<ExtArgs>
    mechanic?: boolean | UsersDefaultArgs<ExtArgs>
  }

  export type $AtribuicaoServicosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "AtribuicaoServicos"
    objects: {
      solicitacaoServico: Prisma.$SolicitacaoServicosPayload<ExtArgs>
      mechanic: Prisma.$UsersPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      solicitacaoServicoId: string
      mechanicId: string
      status: $Enums.StatusAtribuicao
      decidedAt: Date | null
      createdAt: Date
    }, ExtArgs["result"]["atribuicaoServicos"]>
    composites: {}
  }

  type AtribuicaoServicosGetPayload<S extends boolean | null | undefined | AtribuicaoServicosDefaultArgs> = $Result.GetResult<Prisma.$AtribuicaoServicosPayload, S>

  type AtribuicaoServicosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<AtribuicaoServicosFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AtribuicaoServicosCountAggregateInputType | true
    }

  export interface AtribuicaoServicosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['AtribuicaoServicos'], meta: { name: 'AtribuicaoServicos' } }
    /**
     * Find zero or one AtribuicaoServicos that matches the filter.
     * @param {AtribuicaoServicosFindUniqueArgs} args - Arguments to find a AtribuicaoServicos
     * @example
     * // Get one AtribuicaoServicos
     * const atribuicaoServicos = await prisma.atribuicaoServicos.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AtribuicaoServicosFindUniqueArgs>(args: SelectSubset<T, AtribuicaoServicosFindUniqueArgs<ExtArgs>>): Prisma__AtribuicaoServicosClient<$Result.GetResult<Prisma.$AtribuicaoServicosPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one AtribuicaoServicos that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {AtribuicaoServicosFindUniqueOrThrowArgs} args - Arguments to find a AtribuicaoServicos
     * @example
     * // Get one AtribuicaoServicos
     * const atribuicaoServicos = await prisma.atribuicaoServicos.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AtribuicaoServicosFindUniqueOrThrowArgs>(args: SelectSubset<T, AtribuicaoServicosFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AtribuicaoServicosClient<$Result.GetResult<Prisma.$AtribuicaoServicosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first AtribuicaoServicos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AtribuicaoServicosFindFirstArgs} args - Arguments to find a AtribuicaoServicos
     * @example
     * // Get one AtribuicaoServicos
     * const atribuicaoServicos = await prisma.atribuicaoServicos.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AtribuicaoServicosFindFirstArgs>(args?: SelectSubset<T, AtribuicaoServicosFindFirstArgs<ExtArgs>>): Prisma__AtribuicaoServicosClient<$Result.GetResult<Prisma.$AtribuicaoServicosPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first AtribuicaoServicos that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AtribuicaoServicosFindFirstOrThrowArgs} args - Arguments to find a AtribuicaoServicos
     * @example
     * // Get one AtribuicaoServicos
     * const atribuicaoServicos = await prisma.atribuicaoServicos.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AtribuicaoServicosFindFirstOrThrowArgs>(args?: SelectSubset<T, AtribuicaoServicosFindFirstOrThrowArgs<ExtArgs>>): Prisma__AtribuicaoServicosClient<$Result.GetResult<Prisma.$AtribuicaoServicosPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more AtribuicaoServicos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AtribuicaoServicosFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all AtribuicaoServicos
     * const atribuicaoServicos = await prisma.atribuicaoServicos.findMany()
     * 
     * // Get first 10 AtribuicaoServicos
     * const atribuicaoServicos = await prisma.atribuicaoServicos.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const atribuicaoServicosWithIdOnly = await prisma.atribuicaoServicos.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AtribuicaoServicosFindManyArgs>(args?: SelectSubset<T, AtribuicaoServicosFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AtribuicaoServicosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a AtribuicaoServicos.
     * @param {AtribuicaoServicosCreateArgs} args - Arguments to create a AtribuicaoServicos.
     * @example
     * // Create one AtribuicaoServicos
     * const AtribuicaoServicos = await prisma.atribuicaoServicos.create({
     *   data: {
     *     // ... data to create a AtribuicaoServicos
     *   }
     * })
     * 
     */
    create<T extends AtribuicaoServicosCreateArgs>(args: SelectSubset<T, AtribuicaoServicosCreateArgs<ExtArgs>>): Prisma__AtribuicaoServicosClient<$Result.GetResult<Prisma.$AtribuicaoServicosPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many AtribuicaoServicos.
     * @param {AtribuicaoServicosCreateManyArgs} args - Arguments to create many AtribuicaoServicos.
     * @example
     * // Create many AtribuicaoServicos
     * const atribuicaoServicos = await prisma.atribuicaoServicos.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AtribuicaoServicosCreateManyArgs>(args?: SelectSubset<T, AtribuicaoServicosCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many AtribuicaoServicos and returns the data saved in the database.
     * @param {AtribuicaoServicosCreateManyAndReturnArgs} args - Arguments to create many AtribuicaoServicos.
     * @example
     * // Create many AtribuicaoServicos
     * const atribuicaoServicos = await prisma.atribuicaoServicos.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many AtribuicaoServicos and only return the `id`
     * const atribuicaoServicosWithIdOnly = await prisma.atribuicaoServicos.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AtribuicaoServicosCreateManyAndReturnArgs>(args?: SelectSubset<T, AtribuicaoServicosCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AtribuicaoServicosPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a AtribuicaoServicos.
     * @param {AtribuicaoServicosDeleteArgs} args - Arguments to delete one AtribuicaoServicos.
     * @example
     * // Delete one AtribuicaoServicos
     * const AtribuicaoServicos = await prisma.atribuicaoServicos.delete({
     *   where: {
     *     // ... filter to delete one AtribuicaoServicos
     *   }
     * })
     * 
     */
    delete<T extends AtribuicaoServicosDeleteArgs>(args: SelectSubset<T, AtribuicaoServicosDeleteArgs<ExtArgs>>): Prisma__AtribuicaoServicosClient<$Result.GetResult<Prisma.$AtribuicaoServicosPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one AtribuicaoServicos.
     * @param {AtribuicaoServicosUpdateArgs} args - Arguments to update one AtribuicaoServicos.
     * @example
     * // Update one AtribuicaoServicos
     * const atribuicaoServicos = await prisma.atribuicaoServicos.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AtribuicaoServicosUpdateArgs>(args: SelectSubset<T, AtribuicaoServicosUpdateArgs<ExtArgs>>): Prisma__AtribuicaoServicosClient<$Result.GetResult<Prisma.$AtribuicaoServicosPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more AtribuicaoServicos.
     * @param {AtribuicaoServicosDeleteManyArgs} args - Arguments to filter AtribuicaoServicos to delete.
     * @example
     * // Delete a few AtribuicaoServicos
     * const { count } = await prisma.atribuicaoServicos.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AtribuicaoServicosDeleteManyArgs>(args?: SelectSubset<T, AtribuicaoServicosDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AtribuicaoServicos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AtribuicaoServicosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many AtribuicaoServicos
     * const atribuicaoServicos = await prisma.atribuicaoServicos.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AtribuicaoServicosUpdateManyArgs>(args: SelectSubset<T, AtribuicaoServicosUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AtribuicaoServicos and returns the data updated in the database.
     * @param {AtribuicaoServicosUpdateManyAndReturnArgs} args - Arguments to update many AtribuicaoServicos.
     * @example
     * // Update many AtribuicaoServicos
     * const atribuicaoServicos = await prisma.atribuicaoServicos.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more AtribuicaoServicos and only return the `id`
     * const atribuicaoServicosWithIdOnly = await prisma.atribuicaoServicos.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends AtribuicaoServicosUpdateManyAndReturnArgs>(args: SelectSubset<T, AtribuicaoServicosUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AtribuicaoServicosPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one AtribuicaoServicos.
     * @param {AtribuicaoServicosUpsertArgs} args - Arguments to update or create a AtribuicaoServicos.
     * @example
     * // Update or create a AtribuicaoServicos
     * const atribuicaoServicos = await prisma.atribuicaoServicos.upsert({
     *   create: {
     *     // ... data to create a AtribuicaoServicos
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the AtribuicaoServicos we want to update
     *   }
     * })
     */
    upsert<T extends AtribuicaoServicosUpsertArgs>(args: SelectSubset<T, AtribuicaoServicosUpsertArgs<ExtArgs>>): Prisma__AtribuicaoServicosClient<$Result.GetResult<Prisma.$AtribuicaoServicosPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of AtribuicaoServicos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AtribuicaoServicosCountArgs} args - Arguments to filter AtribuicaoServicos to count.
     * @example
     * // Count the number of AtribuicaoServicos
     * const count = await prisma.atribuicaoServicos.count({
     *   where: {
     *     // ... the filter for the AtribuicaoServicos we want to count
     *   }
     * })
    **/
    count<T extends AtribuicaoServicosCountArgs>(
      args?: Subset<T, AtribuicaoServicosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AtribuicaoServicosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a AtribuicaoServicos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AtribuicaoServicosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AtribuicaoServicosAggregateArgs>(args: Subset<T, AtribuicaoServicosAggregateArgs>): Prisma.PrismaPromise<GetAtribuicaoServicosAggregateType<T>>

    /**
     * Group by AtribuicaoServicos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AtribuicaoServicosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AtribuicaoServicosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AtribuicaoServicosGroupByArgs['orderBy'] }
        : { orderBy?: AtribuicaoServicosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AtribuicaoServicosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAtribuicaoServicosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the AtribuicaoServicos model
   */
  readonly fields: AtribuicaoServicosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for AtribuicaoServicos.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AtribuicaoServicosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    solicitacaoServico<T extends SolicitacaoServicosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SolicitacaoServicosDefaultArgs<ExtArgs>>): Prisma__SolicitacaoServicosClient<$Result.GetResult<Prisma.$SolicitacaoServicosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    mechanic<T extends UsersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsersDefaultArgs<ExtArgs>>): Prisma__UsersClient<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the AtribuicaoServicos model
   */
  interface AtribuicaoServicosFieldRefs {
    readonly id: FieldRef<"AtribuicaoServicos", 'String'>
    readonly solicitacaoServicoId: FieldRef<"AtribuicaoServicos", 'String'>
    readonly mechanicId: FieldRef<"AtribuicaoServicos", 'String'>
    readonly status: FieldRef<"AtribuicaoServicos", 'StatusAtribuicao'>
    readonly decidedAt: FieldRef<"AtribuicaoServicos", 'DateTime'>
    readonly createdAt: FieldRef<"AtribuicaoServicos", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * AtribuicaoServicos findUnique
   */
  export type AtribuicaoServicosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AtribuicaoServicos
     */
    select?: AtribuicaoServicosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AtribuicaoServicos
     */
    omit?: AtribuicaoServicosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AtribuicaoServicosInclude<ExtArgs> | null
    /**
     * Filter, which AtribuicaoServicos to fetch.
     */
    where: AtribuicaoServicosWhereUniqueInput
  }

  /**
   * AtribuicaoServicos findUniqueOrThrow
   */
  export type AtribuicaoServicosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AtribuicaoServicos
     */
    select?: AtribuicaoServicosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AtribuicaoServicos
     */
    omit?: AtribuicaoServicosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AtribuicaoServicosInclude<ExtArgs> | null
    /**
     * Filter, which AtribuicaoServicos to fetch.
     */
    where: AtribuicaoServicosWhereUniqueInput
  }

  /**
   * AtribuicaoServicos findFirst
   */
  export type AtribuicaoServicosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AtribuicaoServicos
     */
    select?: AtribuicaoServicosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AtribuicaoServicos
     */
    omit?: AtribuicaoServicosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AtribuicaoServicosInclude<ExtArgs> | null
    /**
     * Filter, which AtribuicaoServicos to fetch.
     */
    where?: AtribuicaoServicosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AtribuicaoServicos to fetch.
     */
    orderBy?: AtribuicaoServicosOrderByWithRelationInput | AtribuicaoServicosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AtribuicaoServicos.
     */
    cursor?: AtribuicaoServicosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AtribuicaoServicos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AtribuicaoServicos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AtribuicaoServicos.
     */
    distinct?: AtribuicaoServicosScalarFieldEnum | AtribuicaoServicosScalarFieldEnum[]
  }

  /**
   * AtribuicaoServicos findFirstOrThrow
   */
  export type AtribuicaoServicosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AtribuicaoServicos
     */
    select?: AtribuicaoServicosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AtribuicaoServicos
     */
    omit?: AtribuicaoServicosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AtribuicaoServicosInclude<ExtArgs> | null
    /**
     * Filter, which AtribuicaoServicos to fetch.
     */
    where?: AtribuicaoServicosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AtribuicaoServicos to fetch.
     */
    orderBy?: AtribuicaoServicosOrderByWithRelationInput | AtribuicaoServicosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AtribuicaoServicos.
     */
    cursor?: AtribuicaoServicosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AtribuicaoServicos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AtribuicaoServicos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AtribuicaoServicos.
     */
    distinct?: AtribuicaoServicosScalarFieldEnum | AtribuicaoServicosScalarFieldEnum[]
  }

  /**
   * AtribuicaoServicos findMany
   */
  export type AtribuicaoServicosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AtribuicaoServicos
     */
    select?: AtribuicaoServicosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AtribuicaoServicos
     */
    omit?: AtribuicaoServicosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AtribuicaoServicosInclude<ExtArgs> | null
    /**
     * Filter, which AtribuicaoServicos to fetch.
     */
    where?: AtribuicaoServicosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AtribuicaoServicos to fetch.
     */
    orderBy?: AtribuicaoServicosOrderByWithRelationInput | AtribuicaoServicosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing AtribuicaoServicos.
     */
    cursor?: AtribuicaoServicosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AtribuicaoServicos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AtribuicaoServicos.
     */
    skip?: number
    distinct?: AtribuicaoServicosScalarFieldEnum | AtribuicaoServicosScalarFieldEnum[]
  }

  /**
   * AtribuicaoServicos create
   */
  export type AtribuicaoServicosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AtribuicaoServicos
     */
    select?: AtribuicaoServicosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AtribuicaoServicos
     */
    omit?: AtribuicaoServicosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AtribuicaoServicosInclude<ExtArgs> | null
    /**
     * The data needed to create a AtribuicaoServicos.
     */
    data: XOR<AtribuicaoServicosCreateInput, AtribuicaoServicosUncheckedCreateInput>
  }

  /**
   * AtribuicaoServicos createMany
   */
  export type AtribuicaoServicosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many AtribuicaoServicos.
     */
    data: AtribuicaoServicosCreateManyInput | AtribuicaoServicosCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * AtribuicaoServicos createManyAndReturn
   */
  export type AtribuicaoServicosCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AtribuicaoServicos
     */
    select?: AtribuicaoServicosSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the AtribuicaoServicos
     */
    omit?: AtribuicaoServicosOmit<ExtArgs> | null
    /**
     * The data used to create many AtribuicaoServicos.
     */
    data: AtribuicaoServicosCreateManyInput | AtribuicaoServicosCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AtribuicaoServicosIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * AtribuicaoServicos update
   */
  export type AtribuicaoServicosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AtribuicaoServicos
     */
    select?: AtribuicaoServicosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AtribuicaoServicos
     */
    omit?: AtribuicaoServicosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AtribuicaoServicosInclude<ExtArgs> | null
    /**
     * The data needed to update a AtribuicaoServicos.
     */
    data: XOR<AtribuicaoServicosUpdateInput, AtribuicaoServicosUncheckedUpdateInput>
    /**
     * Choose, which AtribuicaoServicos to update.
     */
    where: AtribuicaoServicosWhereUniqueInput
  }

  /**
   * AtribuicaoServicos updateMany
   */
  export type AtribuicaoServicosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update AtribuicaoServicos.
     */
    data: XOR<AtribuicaoServicosUpdateManyMutationInput, AtribuicaoServicosUncheckedUpdateManyInput>
    /**
     * Filter which AtribuicaoServicos to update
     */
    where?: AtribuicaoServicosWhereInput
    /**
     * Limit how many AtribuicaoServicos to update.
     */
    limit?: number
  }

  /**
   * AtribuicaoServicos updateManyAndReturn
   */
  export type AtribuicaoServicosUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AtribuicaoServicos
     */
    select?: AtribuicaoServicosSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the AtribuicaoServicos
     */
    omit?: AtribuicaoServicosOmit<ExtArgs> | null
    /**
     * The data used to update AtribuicaoServicos.
     */
    data: XOR<AtribuicaoServicosUpdateManyMutationInput, AtribuicaoServicosUncheckedUpdateManyInput>
    /**
     * Filter which AtribuicaoServicos to update
     */
    where?: AtribuicaoServicosWhereInput
    /**
     * Limit how many AtribuicaoServicos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AtribuicaoServicosIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * AtribuicaoServicos upsert
   */
  export type AtribuicaoServicosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AtribuicaoServicos
     */
    select?: AtribuicaoServicosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AtribuicaoServicos
     */
    omit?: AtribuicaoServicosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AtribuicaoServicosInclude<ExtArgs> | null
    /**
     * The filter to search for the AtribuicaoServicos to update in case it exists.
     */
    where: AtribuicaoServicosWhereUniqueInput
    /**
     * In case the AtribuicaoServicos found by the `where` argument doesn't exist, create a new AtribuicaoServicos with this data.
     */
    create: XOR<AtribuicaoServicosCreateInput, AtribuicaoServicosUncheckedCreateInput>
    /**
     * In case the AtribuicaoServicos was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AtribuicaoServicosUpdateInput, AtribuicaoServicosUncheckedUpdateInput>
  }

  /**
   * AtribuicaoServicos delete
   */
  export type AtribuicaoServicosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AtribuicaoServicos
     */
    select?: AtribuicaoServicosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AtribuicaoServicos
     */
    omit?: AtribuicaoServicosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AtribuicaoServicosInclude<ExtArgs> | null
    /**
     * Filter which AtribuicaoServicos to delete.
     */
    where: AtribuicaoServicosWhereUniqueInput
  }

  /**
   * AtribuicaoServicos deleteMany
   */
  export type AtribuicaoServicosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AtribuicaoServicos to delete
     */
    where?: AtribuicaoServicosWhereInput
    /**
     * Limit how many AtribuicaoServicos to delete.
     */
    limit?: number
  }

  /**
   * AtribuicaoServicos without action
   */
  export type AtribuicaoServicosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AtribuicaoServicos
     */
    select?: AtribuicaoServicosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AtribuicaoServicos
     */
    omit?: AtribuicaoServicosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AtribuicaoServicosInclude<ExtArgs> | null
  }


  /**
   * Model Message
   */

  export type AggregateMessage = {
    _count: MessageCountAggregateOutputType | null
    _min: MessageMinAggregateOutputType | null
    _max: MessageMaxAggregateOutputType | null
  }

  export type MessageMinAggregateOutputType = {
    id: string | null
    solicitacaoServicoId: string | null
    senderId: string | null
    content: string | null
    createdAt: Date | null
  }

  export type MessageMaxAggregateOutputType = {
    id: string | null
    solicitacaoServicoId: string | null
    senderId: string | null
    content: string | null
    createdAt: Date | null
  }

  export type MessageCountAggregateOutputType = {
    id: number
    solicitacaoServicoId: number
    senderId: number
    content: number
    createdAt: number
    _all: number
  }


  export type MessageMinAggregateInputType = {
    id?: true
    solicitacaoServicoId?: true
    senderId?: true
    content?: true
    createdAt?: true
  }

  export type MessageMaxAggregateInputType = {
    id?: true
    solicitacaoServicoId?: true
    senderId?: true
    content?: true
    createdAt?: true
  }

  export type MessageCountAggregateInputType = {
    id?: true
    solicitacaoServicoId?: true
    senderId?: true
    content?: true
    createdAt?: true
    _all?: true
  }

  export type MessageAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Message to aggregate.
     */
    where?: MessageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Messages to fetch.
     */
    orderBy?: MessageOrderByWithRelationInput | MessageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: MessageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Messages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Messages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Messages
    **/
    _count?: true | MessageCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MessageMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MessageMaxAggregateInputType
  }

  export type GetMessageAggregateType<T extends MessageAggregateArgs> = {
        [P in keyof T & keyof AggregateMessage]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMessage[P]>
      : GetScalarType<T[P], AggregateMessage[P]>
  }




  export type MessageGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MessageWhereInput
    orderBy?: MessageOrderByWithAggregationInput | MessageOrderByWithAggregationInput[]
    by: MessageScalarFieldEnum[] | MessageScalarFieldEnum
    having?: MessageScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MessageCountAggregateInputType | true
    _min?: MessageMinAggregateInputType
    _max?: MessageMaxAggregateInputType
  }

  export type MessageGroupByOutputType = {
    id: string
    solicitacaoServicoId: string
    senderId: string
    content: string
    createdAt: Date
    _count: MessageCountAggregateOutputType | null
    _min: MessageMinAggregateOutputType | null
    _max: MessageMaxAggregateOutputType | null
  }

  type GetMessageGroupByPayload<T extends MessageGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MessageGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MessageGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MessageGroupByOutputType[P]>
            : GetScalarType<T[P], MessageGroupByOutputType[P]>
        }
      >
    >


  export type MessageSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    solicitacaoServicoId?: boolean
    senderId?: boolean
    content?: boolean
    createdAt?: boolean
    solicitacaoServico?: boolean | SolicitacaoServicosDefaultArgs<ExtArgs>
    sender?: boolean | UsersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["message"]>

  export type MessageSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    solicitacaoServicoId?: boolean
    senderId?: boolean
    content?: boolean
    createdAt?: boolean
    solicitacaoServico?: boolean | SolicitacaoServicosDefaultArgs<ExtArgs>
    sender?: boolean | UsersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["message"]>

  export type MessageSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    solicitacaoServicoId?: boolean
    senderId?: boolean
    content?: boolean
    createdAt?: boolean
    solicitacaoServico?: boolean | SolicitacaoServicosDefaultArgs<ExtArgs>
    sender?: boolean | UsersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["message"]>

  export type MessageSelectScalar = {
    id?: boolean
    solicitacaoServicoId?: boolean
    senderId?: boolean
    content?: boolean
    createdAt?: boolean
  }

  export type MessageOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "solicitacaoServicoId" | "senderId" | "content" | "createdAt", ExtArgs["result"]["message"]>
  export type MessageInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    solicitacaoServico?: boolean | SolicitacaoServicosDefaultArgs<ExtArgs>
    sender?: boolean | UsersDefaultArgs<ExtArgs>
  }
  export type MessageIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    solicitacaoServico?: boolean | SolicitacaoServicosDefaultArgs<ExtArgs>
    sender?: boolean | UsersDefaultArgs<ExtArgs>
  }
  export type MessageIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    solicitacaoServico?: boolean | SolicitacaoServicosDefaultArgs<ExtArgs>
    sender?: boolean | UsersDefaultArgs<ExtArgs>
  }

  export type $MessagePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Message"
    objects: {
      solicitacaoServico: Prisma.$SolicitacaoServicosPayload<ExtArgs>
      sender: Prisma.$UsersPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      solicitacaoServicoId: string
      senderId: string
      content: string
      createdAt: Date
    }, ExtArgs["result"]["message"]>
    composites: {}
  }

  type MessageGetPayload<S extends boolean | null | undefined | MessageDefaultArgs> = $Result.GetResult<Prisma.$MessagePayload, S>

  type MessageCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<MessageFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: MessageCountAggregateInputType | true
    }

  export interface MessageDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Message'], meta: { name: 'Message' } }
    /**
     * Find zero or one Message that matches the filter.
     * @param {MessageFindUniqueArgs} args - Arguments to find a Message
     * @example
     * // Get one Message
     * const message = await prisma.message.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends MessageFindUniqueArgs>(args: SelectSubset<T, MessageFindUniqueArgs<ExtArgs>>): Prisma__MessageClient<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Message that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {MessageFindUniqueOrThrowArgs} args - Arguments to find a Message
     * @example
     * // Get one Message
     * const message = await prisma.message.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends MessageFindUniqueOrThrowArgs>(args: SelectSubset<T, MessageFindUniqueOrThrowArgs<ExtArgs>>): Prisma__MessageClient<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Message that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MessageFindFirstArgs} args - Arguments to find a Message
     * @example
     * // Get one Message
     * const message = await prisma.message.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends MessageFindFirstArgs>(args?: SelectSubset<T, MessageFindFirstArgs<ExtArgs>>): Prisma__MessageClient<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Message that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MessageFindFirstOrThrowArgs} args - Arguments to find a Message
     * @example
     * // Get one Message
     * const message = await prisma.message.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends MessageFindFirstOrThrowArgs>(args?: SelectSubset<T, MessageFindFirstOrThrowArgs<ExtArgs>>): Prisma__MessageClient<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Messages that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MessageFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Messages
     * const messages = await prisma.message.findMany()
     * 
     * // Get first 10 Messages
     * const messages = await prisma.message.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const messageWithIdOnly = await prisma.message.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends MessageFindManyArgs>(args?: SelectSubset<T, MessageFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Message.
     * @param {MessageCreateArgs} args - Arguments to create a Message.
     * @example
     * // Create one Message
     * const Message = await prisma.message.create({
     *   data: {
     *     // ... data to create a Message
     *   }
     * })
     * 
     */
    create<T extends MessageCreateArgs>(args: SelectSubset<T, MessageCreateArgs<ExtArgs>>): Prisma__MessageClient<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Messages.
     * @param {MessageCreateManyArgs} args - Arguments to create many Messages.
     * @example
     * // Create many Messages
     * const message = await prisma.message.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends MessageCreateManyArgs>(args?: SelectSubset<T, MessageCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Messages and returns the data saved in the database.
     * @param {MessageCreateManyAndReturnArgs} args - Arguments to create many Messages.
     * @example
     * // Create many Messages
     * const message = await prisma.message.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Messages and only return the `id`
     * const messageWithIdOnly = await prisma.message.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends MessageCreateManyAndReturnArgs>(args?: SelectSubset<T, MessageCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Message.
     * @param {MessageDeleteArgs} args - Arguments to delete one Message.
     * @example
     * // Delete one Message
     * const Message = await prisma.message.delete({
     *   where: {
     *     // ... filter to delete one Message
     *   }
     * })
     * 
     */
    delete<T extends MessageDeleteArgs>(args: SelectSubset<T, MessageDeleteArgs<ExtArgs>>): Prisma__MessageClient<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Message.
     * @param {MessageUpdateArgs} args - Arguments to update one Message.
     * @example
     * // Update one Message
     * const message = await prisma.message.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends MessageUpdateArgs>(args: SelectSubset<T, MessageUpdateArgs<ExtArgs>>): Prisma__MessageClient<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Messages.
     * @param {MessageDeleteManyArgs} args - Arguments to filter Messages to delete.
     * @example
     * // Delete a few Messages
     * const { count } = await prisma.message.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends MessageDeleteManyArgs>(args?: SelectSubset<T, MessageDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Messages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MessageUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Messages
     * const message = await prisma.message.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends MessageUpdateManyArgs>(args: SelectSubset<T, MessageUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Messages and returns the data updated in the database.
     * @param {MessageUpdateManyAndReturnArgs} args - Arguments to update many Messages.
     * @example
     * // Update many Messages
     * const message = await prisma.message.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Messages and only return the `id`
     * const messageWithIdOnly = await prisma.message.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends MessageUpdateManyAndReturnArgs>(args: SelectSubset<T, MessageUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Message.
     * @param {MessageUpsertArgs} args - Arguments to update or create a Message.
     * @example
     * // Update or create a Message
     * const message = await prisma.message.upsert({
     *   create: {
     *     // ... data to create a Message
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Message we want to update
     *   }
     * })
     */
    upsert<T extends MessageUpsertArgs>(args: SelectSubset<T, MessageUpsertArgs<ExtArgs>>): Prisma__MessageClient<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Messages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MessageCountArgs} args - Arguments to filter Messages to count.
     * @example
     * // Count the number of Messages
     * const count = await prisma.message.count({
     *   where: {
     *     // ... the filter for the Messages we want to count
     *   }
     * })
    **/
    count<T extends MessageCountArgs>(
      args?: Subset<T, MessageCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MessageCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Message.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MessageAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MessageAggregateArgs>(args: Subset<T, MessageAggregateArgs>): Prisma.PrismaPromise<GetMessageAggregateType<T>>

    /**
     * Group by Message.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MessageGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MessageGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MessageGroupByArgs['orderBy'] }
        : { orderBy?: MessageGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MessageGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMessageGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Message model
   */
  readonly fields: MessageFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Message.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__MessageClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    solicitacaoServico<T extends SolicitacaoServicosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SolicitacaoServicosDefaultArgs<ExtArgs>>): Prisma__SolicitacaoServicosClient<$Result.GetResult<Prisma.$SolicitacaoServicosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    sender<T extends UsersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsersDefaultArgs<ExtArgs>>): Prisma__UsersClient<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Message model
   */
  interface MessageFieldRefs {
    readonly id: FieldRef<"Message", 'String'>
    readonly solicitacaoServicoId: FieldRef<"Message", 'String'>
    readonly senderId: FieldRef<"Message", 'String'>
    readonly content: FieldRef<"Message", 'String'>
    readonly createdAt: FieldRef<"Message", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Message findUnique
   */
  export type MessageFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Message
     */
    omit?: MessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    /**
     * Filter, which Message to fetch.
     */
    where: MessageWhereUniqueInput
  }

  /**
   * Message findUniqueOrThrow
   */
  export type MessageFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Message
     */
    omit?: MessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    /**
     * Filter, which Message to fetch.
     */
    where: MessageWhereUniqueInput
  }

  /**
   * Message findFirst
   */
  export type MessageFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Message
     */
    omit?: MessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    /**
     * Filter, which Message to fetch.
     */
    where?: MessageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Messages to fetch.
     */
    orderBy?: MessageOrderByWithRelationInput | MessageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Messages.
     */
    cursor?: MessageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Messages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Messages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Messages.
     */
    distinct?: MessageScalarFieldEnum | MessageScalarFieldEnum[]
  }

  /**
   * Message findFirstOrThrow
   */
  export type MessageFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Message
     */
    omit?: MessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    /**
     * Filter, which Message to fetch.
     */
    where?: MessageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Messages to fetch.
     */
    orderBy?: MessageOrderByWithRelationInput | MessageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Messages.
     */
    cursor?: MessageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Messages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Messages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Messages.
     */
    distinct?: MessageScalarFieldEnum | MessageScalarFieldEnum[]
  }

  /**
   * Message findMany
   */
  export type MessageFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Message
     */
    omit?: MessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    /**
     * Filter, which Messages to fetch.
     */
    where?: MessageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Messages to fetch.
     */
    orderBy?: MessageOrderByWithRelationInput | MessageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Messages.
     */
    cursor?: MessageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Messages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Messages.
     */
    skip?: number
    distinct?: MessageScalarFieldEnum | MessageScalarFieldEnum[]
  }

  /**
   * Message create
   */
  export type MessageCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Message
     */
    omit?: MessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    /**
     * The data needed to create a Message.
     */
    data: XOR<MessageCreateInput, MessageUncheckedCreateInput>
  }

  /**
   * Message createMany
   */
  export type MessageCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Messages.
     */
    data: MessageCreateManyInput | MessageCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Message createManyAndReturn
   */
  export type MessageCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Message
     */
    omit?: MessageOmit<ExtArgs> | null
    /**
     * The data used to create many Messages.
     */
    data: MessageCreateManyInput | MessageCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Message update
   */
  export type MessageUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Message
     */
    omit?: MessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    /**
     * The data needed to update a Message.
     */
    data: XOR<MessageUpdateInput, MessageUncheckedUpdateInput>
    /**
     * Choose, which Message to update.
     */
    where: MessageWhereUniqueInput
  }

  /**
   * Message updateMany
   */
  export type MessageUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Messages.
     */
    data: XOR<MessageUpdateManyMutationInput, MessageUncheckedUpdateManyInput>
    /**
     * Filter which Messages to update
     */
    where?: MessageWhereInput
    /**
     * Limit how many Messages to update.
     */
    limit?: number
  }

  /**
   * Message updateManyAndReturn
   */
  export type MessageUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Message
     */
    omit?: MessageOmit<ExtArgs> | null
    /**
     * The data used to update Messages.
     */
    data: XOR<MessageUpdateManyMutationInput, MessageUncheckedUpdateManyInput>
    /**
     * Filter which Messages to update
     */
    where?: MessageWhereInput
    /**
     * Limit how many Messages to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Message upsert
   */
  export type MessageUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Message
     */
    omit?: MessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    /**
     * The filter to search for the Message to update in case it exists.
     */
    where: MessageWhereUniqueInput
    /**
     * In case the Message found by the `where` argument doesn't exist, create a new Message with this data.
     */
    create: XOR<MessageCreateInput, MessageUncheckedCreateInput>
    /**
     * In case the Message was found with the provided `where` argument, update it with this data.
     */
    update: XOR<MessageUpdateInput, MessageUncheckedUpdateInput>
  }

  /**
   * Message delete
   */
  export type MessageDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Message
     */
    omit?: MessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    /**
     * Filter which Message to delete.
     */
    where: MessageWhereUniqueInput
  }

  /**
   * Message deleteMany
   */
  export type MessageDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Messages to delete
     */
    where?: MessageWhereInput
    /**
     * Limit how many Messages to delete.
     */
    limit?: number
  }

  /**
   * Message without action
   */
  export type MessageDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Message
     */
    omit?: MessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
  }


  /**
   * Model Rating
   */

  export type AggregateRating = {
    _count: RatingCountAggregateOutputType | null
    _avg: RatingAvgAggregateOutputType | null
    _sum: RatingSumAggregateOutputType | null
    _min: RatingMinAggregateOutputType | null
    _max: RatingMaxAggregateOutputType | null
  }

  export type RatingAvgAggregateOutputType = {
    score: number | null
  }

  export type RatingSumAggregateOutputType = {
    score: number | null
  }

  export type RatingMinAggregateOutputType = {
    id: string | null
    mechanicId: string | null
    producerId: string | null
    solicitacaoServicoId: string | null
    score: number | null
    comment: string | null
    createdAt: Date | null
  }

  export type RatingMaxAggregateOutputType = {
    id: string | null
    mechanicId: string | null
    producerId: string | null
    solicitacaoServicoId: string | null
    score: number | null
    comment: string | null
    createdAt: Date | null
  }

  export type RatingCountAggregateOutputType = {
    id: number
    mechanicId: number
    producerId: number
    solicitacaoServicoId: number
    score: number
    comment: number
    createdAt: number
    _all: number
  }


  export type RatingAvgAggregateInputType = {
    score?: true
  }

  export type RatingSumAggregateInputType = {
    score?: true
  }

  export type RatingMinAggregateInputType = {
    id?: true
    mechanicId?: true
    producerId?: true
    solicitacaoServicoId?: true
    score?: true
    comment?: true
    createdAt?: true
  }

  export type RatingMaxAggregateInputType = {
    id?: true
    mechanicId?: true
    producerId?: true
    solicitacaoServicoId?: true
    score?: true
    comment?: true
    createdAt?: true
  }

  export type RatingCountAggregateInputType = {
    id?: true
    mechanicId?: true
    producerId?: true
    solicitacaoServicoId?: true
    score?: true
    comment?: true
    createdAt?: true
    _all?: true
  }

  export type RatingAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Rating to aggregate.
     */
    where?: RatingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Ratings to fetch.
     */
    orderBy?: RatingOrderByWithRelationInput | RatingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RatingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Ratings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Ratings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Ratings
    **/
    _count?: true | RatingCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RatingAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RatingSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RatingMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RatingMaxAggregateInputType
  }

  export type GetRatingAggregateType<T extends RatingAggregateArgs> = {
        [P in keyof T & keyof AggregateRating]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRating[P]>
      : GetScalarType<T[P], AggregateRating[P]>
  }




  export type RatingGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RatingWhereInput
    orderBy?: RatingOrderByWithAggregationInput | RatingOrderByWithAggregationInput[]
    by: RatingScalarFieldEnum[] | RatingScalarFieldEnum
    having?: RatingScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RatingCountAggregateInputType | true
    _avg?: RatingAvgAggregateInputType
    _sum?: RatingSumAggregateInputType
    _min?: RatingMinAggregateInputType
    _max?: RatingMaxAggregateInputType
  }

  export type RatingGroupByOutputType = {
    id: string
    mechanicId: string
    producerId: string
    solicitacaoServicoId: string
    score: number
    comment: string | null
    createdAt: Date
    _count: RatingCountAggregateOutputType | null
    _avg: RatingAvgAggregateOutputType | null
    _sum: RatingSumAggregateOutputType | null
    _min: RatingMinAggregateOutputType | null
    _max: RatingMaxAggregateOutputType | null
  }

  type GetRatingGroupByPayload<T extends RatingGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RatingGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RatingGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RatingGroupByOutputType[P]>
            : GetScalarType<T[P], RatingGroupByOutputType[P]>
        }
      >
    >


  export type RatingSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    mechanicId?: boolean
    producerId?: boolean
    solicitacaoServicoId?: boolean
    score?: boolean
    comment?: boolean
    createdAt?: boolean
    mechanic?: boolean | MechanicDefaultArgs<ExtArgs>
    producer?: boolean | UsersDefaultArgs<ExtArgs>
    solicitacaoServico?: boolean | SolicitacaoServicosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["rating"]>

  export type RatingSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    mechanicId?: boolean
    producerId?: boolean
    solicitacaoServicoId?: boolean
    score?: boolean
    comment?: boolean
    createdAt?: boolean
    mechanic?: boolean | MechanicDefaultArgs<ExtArgs>
    producer?: boolean | UsersDefaultArgs<ExtArgs>
    solicitacaoServico?: boolean | SolicitacaoServicosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["rating"]>

  export type RatingSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    mechanicId?: boolean
    producerId?: boolean
    solicitacaoServicoId?: boolean
    score?: boolean
    comment?: boolean
    createdAt?: boolean
    mechanic?: boolean | MechanicDefaultArgs<ExtArgs>
    producer?: boolean | UsersDefaultArgs<ExtArgs>
    solicitacaoServico?: boolean | SolicitacaoServicosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["rating"]>

  export type RatingSelectScalar = {
    id?: boolean
    mechanicId?: boolean
    producerId?: boolean
    solicitacaoServicoId?: boolean
    score?: boolean
    comment?: boolean
    createdAt?: boolean
  }

  export type RatingOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "mechanicId" | "producerId" | "solicitacaoServicoId" | "score" | "comment" | "createdAt", ExtArgs["result"]["rating"]>
  export type RatingInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    mechanic?: boolean | MechanicDefaultArgs<ExtArgs>
    producer?: boolean | UsersDefaultArgs<ExtArgs>
    solicitacaoServico?: boolean | SolicitacaoServicosDefaultArgs<ExtArgs>
  }
  export type RatingIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    mechanic?: boolean | MechanicDefaultArgs<ExtArgs>
    producer?: boolean | UsersDefaultArgs<ExtArgs>
    solicitacaoServico?: boolean | SolicitacaoServicosDefaultArgs<ExtArgs>
  }
  export type RatingIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    mechanic?: boolean | MechanicDefaultArgs<ExtArgs>
    producer?: boolean | UsersDefaultArgs<ExtArgs>
    solicitacaoServico?: boolean | SolicitacaoServicosDefaultArgs<ExtArgs>
  }

  export type $RatingPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Rating"
    objects: {
      mechanic: Prisma.$MechanicPayload<ExtArgs>
      producer: Prisma.$UsersPayload<ExtArgs>
      solicitacaoServico: Prisma.$SolicitacaoServicosPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      mechanicId: string
      producerId: string
      solicitacaoServicoId: string
      score: number
      comment: string | null
      createdAt: Date
    }, ExtArgs["result"]["rating"]>
    composites: {}
  }

  type RatingGetPayload<S extends boolean | null | undefined | RatingDefaultArgs> = $Result.GetResult<Prisma.$RatingPayload, S>

  type RatingCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<RatingFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: RatingCountAggregateInputType | true
    }

  export interface RatingDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Rating'], meta: { name: 'Rating' } }
    /**
     * Find zero or one Rating that matches the filter.
     * @param {RatingFindUniqueArgs} args - Arguments to find a Rating
     * @example
     * // Get one Rating
     * const rating = await prisma.rating.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends RatingFindUniqueArgs>(args: SelectSubset<T, RatingFindUniqueArgs<ExtArgs>>): Prisma__RatingClient<$Result.GetResult<Prisma.$RatingPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Rating that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {RatingFindUniqueOrThrowArgs} args - Arguments to find a Rating
     * @example
     * // Get one Rating
     * const rating = await prisma.rating.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends RatingFindUniqueOrThrowArgs>(args: SelectSubset<T, RatingFindUniqueOrThrowArgs<ExtArgs>>): Prisma__RatingClient<$Result.GetResult<Prisma.$RatingPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Rating that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RatingFindFirstArgs} args - Arguments to find a Rating
     * @example
     * // Get one Rating
     * const rating = await prisma.rating.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends RatingFindFirstArgs>(args?: SelectSubset<T, RatingFindFirstArgs<ExtArgs>>): Prisma__RatingClient<$Result.GetResult<Prisma.$RatingPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Rating that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RatingFindFirstOrThrowArgs} args - Arguments to find a Rating
     * @example
     * // Get one Rating
     * const rating = await prisma.rating.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends RatingFindFirstOrThrowArgs>(args?: SelectSubset<T, RatingFindFirstOrThrowArgs<ExtArgs>>): Prisma__RatingClient<$Result.GetResult<Prisma.$RatingPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Ratings that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RatingFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Ratings
     * const ratings = await prisma.rating.findMany()
     * 
     * // Get first 10 Ratings
     * const ratings = await prisma.rating.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const ratingWithIdOnly = await prisma.rating.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends RatingFindManyArgs>(args?: SelectSubset<T, RatingFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RatingPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Rating.
     * @param {RatingCreateArgs} args - Arguments to create a Rating.
     * @example
     * // Create one Rating
     * const Rating = await prisma.rating.create({
     *   data: {
     *     // ... data to create a Rating
     *   }
     * })
     * 
     */
    create<T extends RatingCreateArgs>(args: SelectSubset<T, RatingCreateArgs<ExtArgs>>): Prisma__RatingClient<$Result.GetResult<Prisma.$RatingPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Ratings.
     * @param {RatingCreateManyArgs} args - Arguments to create many Ratings.
     * @example
     * // Create many Ratings
     * const rating = await prisma.rating.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends RatingCreateManyArgs>(args?: SelectSubset<T, RatingCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Ratings and returns the data saved in the database.
     * @param {RatingCreateManyAndReturnArgs} args - Arguments to create many Ratings.
     * @example
     * // Create many Ratings
     * const rating = await prisma.rating.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Ratings and only return the `id`
     * const ratingWithIdOnly = await prisma.rating.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends RatingCreateManyAndReturnArgs>(args?: SelectSubset<T, RatingCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RatingPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Rating.
     * @param {RatingDeleteArgs} args - Arguments to delete one Rating.
     * @example
     * // Delete one Rating
     * const Rating = await prisma.rating.delete({
     *   where: {
     *     // ... filter to delete one Rating
     *   }
     * })
     * 
     */
    delete<T extends RatingDeleteArgs>(args: SelectSubset<T, RatingDeleteArgs<ExtArgs>>): Prisma__RatingClient<$Result.GetResult<Prisma.$RatingPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Rating.
     * @param {RatingUpdateArgs} args - Arguments to update one Rating.
     * @example
     * // Update one Rating
     * const rating = await prisma.rating.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends RatingUpdateArgs>(args: SelectSubset<T, RatingUpdateArgs<ExtArgs>>): Prisma__RatingClient<$Result.GetResult<Prisma.$RatingPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Ratings.
     * @param {RatingDeleteManyArgs} args - Arguments to filter Ratings to delete.
     * @example
     * // Delete a few Ratings
     * const { count } = await prisma.rating.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends RatingDeleteManyArgs>(args?: SelectSubset<T, RatingDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Ratings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RatingUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Ratings
     * const rating = await prisma.rating.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends RatingUpdateManyArgs>(args: SelectSubset<T, RatingUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Ratings and returns the data updated in the database.
     * @param {RatingUpdateManyAndReturnArgs} args - Arguments to update many Ratings.
     * @example
     * // Update many Ratings
     * const rating = await prisma.rating.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Ratings and only return the `id`
     * const ratingWithIdOnly = await prisma.rating.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends RatingUpdateManyAndReturnArgs>(args: SelectSubset<T, RatingUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RatingPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Rating.
     * @param {RatingUpsertArgs} args - Arguments to update or create a Rating.
     * @example
     * // Update or create a Rating
     * const rating = await prisma.rating.upsert({
     *   create: {
     *     // ... data to create a Rating
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Rating we want to update
     *   }
     * })
     */
    upsert<T extends RatingUpsertArgs>(args: SelectSubset<T, RatingUpsertArgs<ExtArgs>>): Prisma__RatingClient<$Result.GetResult<Prisma.$RatingPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Ratings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RatingCountArgs} args - Arguments to filter Ratings to count.
     * @example
     * // Count the number of Ratings
     * const count = await prisma.rating.count({
     *   where: {
     *     // ... the filter for the Ratings we want to count
     *   }
     * })
    **/
    count<T extends RatingCountArgs>(
      args?: Subset<T, RatingCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RatingCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Rating.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RatingAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RatingAggregateArgs>(args: Subset<T, RatingAggregateArgs>): Prisma.PrismaPromise<GetRatingAggregateType<T>>

    /**
     * Group by Rating.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RatingGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RatingGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RatingGroupByArgs['orderBy'] }
        : { orderBy?: RatingGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RatingGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRatingGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Rating model
   */
  readonly fields: RatingFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Rating.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RatingClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    mechanic<T extends MechanicDefaultArgs<ExtArgs> = {}>(args?: Subset<T, MechanicDefaultArgs<ExtArgs>>): Prisma__MechanicClient<$Result.GetResult<Prisma.$MechanicPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    producer<T extends UsersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsersDefaultArgs<ExtArgs>>): Prisma__UsersClient<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    solicitacaoServico<T extends SolicitacaoServicosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SolicitacaoServicosDefaultArgs<ExtArgs>>): Prisma__SolicitacaoServicosClient<$Result.GetResult<Prisma.$SolicitacaoServicosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Rating model
   */
  interface RatingFieldRefs {
    readonly id: FieldRef<"Rating", 'String'>
    readonly mechanicId: FieldRef<"Rating", 'String'>
    readonly producerId: FieldRef<"Rating", 'String'>
    readonly solicitacaoServicoId: FieldRef<"Rating", 'String'>
    readonly score: FieldRef<"Rating", 'Int'>
    readonly comment: FieldRef<"Rating", 'String'>
    readonly createdAt: FieldRef<"Rating", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Rating findUnique
   */
  export type RatingFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Rating
     */
    select?: RatingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Rating
     */
    omit?: RatingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RatingInclude<ExtArgs> | null
    /**
     * Filter, which Rating to fetch.
     */
    where: RatingWhereUniqueInput
  }

  /**
   * Rating findUniqueOrThrow
   */
  export type RatingFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Rating
     */
    select?: RatingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Rating
     */
    omit?: RatingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RatingInclude<ExtArgs> | null
    /**
     * Filter, which Rating to fetch.
     */
    where: RatingWhereUniqueInput
  }

  /**
   * Rating findFirst
   */
  export type RatingFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Rating
     */
    select?: RatingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Rating
     */
    omit?: RatingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RatingInclude<ExtArgs> | null
    /**
     * Filter, which Rating to fetch.
     */
    where?: RatingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Ratings to fetch.
     */
    orderBy?: RatingOrderByWithRelationInput | RatingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Ratings.
     */
    cursor?: RatingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Ratings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Ratings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Ratings.
     */
    distinct?: RatingScalarFieldEnum | RatingScalarFieldEnum[]
  }

  /**
   * Rating findFirstOrThrow
   */
  export type RatingFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Rating
     */
    select?: RatingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Rating
     */
    omit?: RatingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RatingInclude<ExtArgs> | null
    /**
     * Filter, which Rating to fetch.
     */
    where?: RatingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Ratings to fetch.
     */
    orderBy?: RatingOrderByWithRelationInput | RatingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Ratings.
     */
    cursor?: RatingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Ratings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Ratings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Ratings.
     */
    distinct?: RatingScalarFieldEnum | RatingScalarFieldEnum[]
  }

  /**
   * Rating findMany
   */
  export type RatingFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Rating
     */
    select?: RatingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Rating
     */
    omit?: RatingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RatingInclude<ExtArgs> | null
    /**
     * Filter, which Ratings to fetch.
     */
    where?: RatingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Ratings to fetch.
     */
    orderBy?: RatingOrderByWithRelationInput | RatingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Ratings.
     */
    cursor?: RatingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Ratings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Ratings.
     */
    skip?: number
    distinct?: RatingScalarFieldEnum | RatingScalarFieldEnum[]
  }

  /**
   * Rating create
   */
  export type RatingCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Rating
     */
    select?: RatingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Rating
     */
    omit?: RatingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RatingInclude<ExtArgs> | null
    /**
     * The data needed to create a Rating.
     */
    data: XOR<RatingCreateInput, RatingUncheckedCreateInput>
  }

  /**
   * Rating createMany
   */
  export type RatingCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Ratings.
     */
    data: RatingCreateManyInput | RatingCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Rating createManyAndReturn
   */
  export type RatingCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Rating
     */
    select?: RatingSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Rating
     */
    omit?: RatingOmit<ExtArgs> | null
    /**
     * The data used to create many Ratings.
     */
    data: RatingCreateManyInput | RatingCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RatingIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Rating update
   */
  export type RatingUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Rating
     */
    select?: RatingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Rating
     */
    omit?: RatingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RatingInclude<ExtArgs> | null
    /**
     * The data needed to update a Rating.
     */
    data: XOR<RatingUpdateInput, RatingUncheckedUpdateInput>
    /**
     * Choose, which Rating to update.
     */
    where: RatingWhereUniqueInput
  }

  /**
   * Rating updateMany
   */
  export type RatingUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Ratings.
     */
    data: XOR<RatingUpdateManyMutationInput, RatingUncheckedUpdateManyInput>
    /**
     * Filter which Ratings to update
     */
    where?: RatingWhereInput
    /**
     * Limit how many Ratings to update.
     */
    limit?: number
  }

  /**
   * Rating updateManyAndReturn
   */
  export type RatingUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Rating
     */
    select?: RatingSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Rating
     */
    omit?: RatingOmit<ExtArgs> | null
    /**
     * The data used to update Ratings.
     */
    data: XOR<RatingUpdateManyMutationInput, RatingUncheckedUpdateManyInput>
    /**
     * Filter which Ratings to update
     */
    where?: RatingWhereInput
    /**
     * Limit how many Ratings to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RatingIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Rating upsert
   */
  export type RatingUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Rating
     */
    select?: RatingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Rating
     */
    omit?: RatingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RatingInclude<ExtArgs> | null
    /**
     * The filter to search for the Rating to update in case it exists.
     */
    where: RatingWhereUniqueInput
    /**
     * In case the Rating found by the `where` argument doesn't exist, create a new Rating with this data.
     */
    create: XOR<RatingCreateInput, RatingUncheckedCreateInput>
    /**
     * In case the Rating was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RatingUpdateInput, RatingUncheckedUpdateInput>
  }

  /**
   * Rating delete
   */
  export type RatingDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Rating
     */
    select?: RatingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Rating
     */
    omit?: RatingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RatingInclude<ExtArgs> | null
    /**
     * Filter which Rating to delete.
     */
    where: RatingWhereUniqueInput
  }

  /**
   * Rating deleteMany
   */
  export type RatingDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Ratings to delete
     */
    where?: RatingWhereInput
    /**
     * Limit how many Ratings to delete.
     */
    limit?: number
  }

  /**
   * Rating without action
   */
  export type RatingDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Rating
     */
    select?: RatingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Rating
     */
    omit?: RatingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RatingInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const UsersScalarFieldEnum: {
    id: 'id',
    email: 'email',
    password: 'password',
    fullName: 'fullName',
    role: 'role',
    phone: 'phone',
    cpfCnpj: 'cpfCnpj',
    stateReg: 'stateReg',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type UsersScalarFieldEnum = (typeof UsersScalarFieldEnum)[keyof typeof UsersScalarFieldEnum]


  export const MechanicScalarFieldEnum: {
    userId: 'userId',
    specialty: 'specialty',
    photoUrl: 'photoUrl',
    isAvailable: 'isAvailable',
    lat: 'lat',
    lng: 'lng',
    updatedAt: 'updatedAt'
  };

  export type MechanicScalarFieldEnum = (typeof MechanicScalarFieldEnum)[keyof typeof MechanicScalarFieldEnum]


  export const SolicitacaoServicosScalarFieldEnum: {
    id: 'id',
    producerId: 'producerId',
    description: 'description',
    machineType: 'machineType',
    locationLat: 'locationLat',
    locationLng: 'locationLng',
    scheduledFor: 'scheduledFor',
    status: 'status',
    createdAt: 'createdAt'
  };

  export type SolicitacaoServicosScalarFieldEnum = (typeof SolicitacaoServicosScalarFieldEnum)[keyof typeof SolicitacaoServicosScalarFieldEnum]


  export const AtribuicaoServicosScalarFieldEnum: {
    id: 'id',
    solicitacaoServicoId: 'solicitacaoServicoId',
    mechanicId: 'mechanicId',
    status: 'status',
    decidedAt: 'decidedAt',
    createdAt: 'createdAt'
  };

  export type AtribuicaoServicosScalarFieldEnum = (typeof AtribuicaoServicosScalarFieldEnum)[keyof typeof AtribuicaoServicosScalarFieldEnum]


  export const MessageScalarFieldEnum: {
    id: 'id',
    solicitacaoServicoId: 'solicitacaoServicoId',
    senderId: 'senderId',
    content: 'content',
    createdAt: 'createdAt'
  };

  export type MessageScalarFieldEnum = (typeof MessageScalarFieldEnum)[keyof typeof MessageScalarFieldEnum]


  export const RatingScalarFieldEnum: {
    id: 'id',
    mechanicId: 'mechanicId',
    producerId: 'producerId',
    solicitacaoServicoId: 'solicitacaoServicoId',
    score: 'score',
    comment: 'comment',
    createdAt: 'createdAt'
  };

  export type RatingScalarFieldEnum = (typeof RatingScalarFieldEnum)[keyof typeof RatingScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'Role'
   */
  export type EnumRoleFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Role'>
    


  /**
   * Reference to a field of type 'Role[]'
   */
  export type ListEnumRoleFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Role[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    


  /**
   * Reference to a field of type 'RequestStatus'
   */
  export type EnumRequestStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'RequestStatus'>
    


  /**
   * Reference to a field of type 'RequestStatus[]'
   */
  export type ListEnumRequestStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'RequestStatus[]'>
    


  /**
   * Reference to a field of type 'StatusAtribuicao'
   */
  export type EnumStatusAtribuicaoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'StatusAtribuicao'>
    


  /**
   * Reference to a field of type 'StatusAtribuicao[]'
   */
  export type ListEnumStatusAtribuicaoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'StatusAtribuicao[]'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    
  /**
   * Deep Input Types
   */


  export type UsersWhereInput = {
    AND?: UsersWhereInput | UsersWhereInput[]
    OR?: UsersWhereInput[]
    NOT?: UsersWhereInput | UsersWhereInput[]
    id?: StringFilter<"Users"> | string
    email?: StringFilter<"Users"> | string
    password?: StringFilter<"Users"> | string
    fullName?: StringFilter<"Users"> | string
    role?: EnumRoleFilter<"Users"> | $Enums.Role
    phone?: StringNullableFilter<"Users"> | string | null
    cpfCnpj?: StringNullableFilter<"Users"> | string | null
    stateReg?: StringNullableFilter<"Users"> | string | null
    createdAt?: DateTimeFilter<"Users"> | Date | string
    updatedAt?: DateTimeFilter<"Users"> | Date | string
    mechanic?: XOR<MechanicNullableScalarRelationFilter, MechanicWhereInput> | null
    SolicitacaoServicos?: SolicitacaoServicosListRelationFilter
    AtribuicaoServicos?: AtribuicaoServicosListRelationFilter
    Message?: MessageListRelationFilter
    ratingsComoProdutor?: RatingListRelationFilter
  }

  export type UsersOrderByWithRelationInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    fullName?: SortOrder
    role?: SortOrder
    phone?: SortOrderInput | SortOrder
    cpfCnpj?: SortOrderInput | SortOrder
    stateReg?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    mechanic?: MechanicOrderByWithRelationInput
    SolicitacaoServicos?: SolicitacaoServicosOrderByRelationAggregateInput
    AtribuicaoServicos?: AtribuicaoServicosOrderByRelationAggregateInput
    Message?: MessageOrderByRelationAggregateInput
    ratingsComoProdutor?: RatingOrderByRelationAggregateInput
  }

  export type UsersWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    email?: string
    AND?: UsersWhereInput | UsersWhereInput[]
    OR?: UsersWhereInput[]
    NOT?: UsersWhereInput | UsersWhereInput[]
    password?: StringFilter<"Users"> | string
    fullName?: StringFilter<"Users"> | string
    role?: EnumRoleFilter<"Users"> | $Enums.Role
    phone?: StringNullableFilter<"Users"> | string | null
    cpfCnpj?: StringNullableFilter<"Users"> | string | null
    stateReg?: StringNullableFilter<"Users"> | string | null
    createdAt?: DateTimeFilter<"Users"> | Date | string
    updatedAt?: DateTimeFilter<"Users"> | Date | string
    mechanic?: XOR<MechanicNullableScalarRelationFilter, MechanicWhereInput> | null
    SolicitacaoServicos?: SolicitacaoServicosListRelationFilter
    AtribuicaoServicos?: AtribuicaoServicosListRelationFilter
    Message?: MessageListRelationFilter
    ratingsComoProdutor?: RatingListRelationFilter
  }, "id" | "email">

  export type UsersOrderByWithAggregationInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    fullName?: SortOrder
    role?: SortOrder
    phone?: SortOrderInput | SortOrder
    cpfCnpj?: SortOrderInput | SortOrder
    stateReg?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: UsersCountOrderByAggregateInput
    _max?: UsersMaxOrderByAggregateInput
    _min?: UsersMinOrderByAggregateInput
  }

  export type UsersScalarWhereWithAggregatesInput = {
    AND?: UsersScalarWhereWithAggregatesInput | UsersScalarWhereWithAggregatesInput[]
    OR?: UsersScalarWhereWithAggregatesInput[]
    NOT?: UsersScalarWhereWithAggregatesInput | UsersScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Users"> | string
    email?: StringWithAggregatesFilter<"Users"> | string
    password?: StringWithAggregatesFilter<"Users"> | string
    fullName?: StringWithAggregatesFilter<"Users"> | string
    role?: EnumRoleWithAggregatesFilter<"Users"> | $Enums.Role
    phone?: StringNullableWithAggregatesFilter<"Users"> | string | null
    cpfCnpj?: StringNullableWithAggregatesFilter<"Users"> | string | null
    stateReg?: StringNullableWithAggregatesFilter<"Users"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Users"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Users"> | Date | string
  }

  export type MechanicWhereInput = {
    AND?: MechanicWhereInput | MechanicWhereInput[]
    OR?: MechanicWhereInput[]
    NOT?: MechanicWhereInput | MechanicWhereInput[]
    userId?: StringFilter<"Mechanic"> | string
    specialty?: StringFilter<"Mechanic"> | string
    photoUrl?: StringFilter<"Mechanic"> | string
    isAvailable?: BoolFilter<"Mechanic"> | boolean
    lat?: FloatNullableFilter<"Mechanic"> | number | null
    lng?: FloatNullableFilter<"Mechanic"> | number | null
    updatedAt?: DateTimeFilter<"Mechanic"> | Date | string
    user?: XOR<UsersScalarRelationFilter, UsersWhereInput>
    ratings?: RatingListRelationFilter
  }

  export type MechanicOrderByWithRelationInput = {
    userId?: SortOrder
    specialty?: SortOrder
    photoUrl?: SortOrder
    isAvailable?: SortOrder
    lat?: SortOrderInput | SortOrder
    lng?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    user?: UsersOrderByWithRelationInput
    ratings?: RatingOrderByRelationAggregateInput
  }

  export type MechanicWhereUniqueInput = Prisma.AtLeast<{
    userId?: string
    AND?: MechanicWhereInput | MechanicWhereInput[]
    OR?: MechanicWhereInput[]
    NOT?: MechanicWhereInput | MechanicWhereInput[]
    specialty?: StringFilter<"Mechanic"> | string
    photoUrl?: StringFilter<"Mechanic"> | string
    isAvailable?: BoolFilter<"Mechanic"> | boolean
    lat?: FloatNullableFilter<"Mechanic"> | number | null
    lng?: FloatNullableFilter<"Mechanic"> | number | null
    updatedAt?: DateTimeFilter<"Mechanic"> | Date | string
    user?: XOR<UsersScalarRelationFilter, UsersWhereInput>
    ratings?: RatingListRelationFilter
  }, "userId">

  export type MechanicOrderByWithAggregationInput = {
    userId?: SortOrder
    specialty?: SortOrder
    photoUrl?: SortOrder
    isAvailable?: SortOrder
    lat?: SortOrderInput | SortOrder
    lng?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    _count?: MechanicCountOrderByAggregateInput
    _avg?: MechanicAvgOrderByAggregateInput
    _max?: MechanicMaxOrderByAggregateInput
    _min?: MechanicMinOrderByAggregateInput
    _sum?: MechanicSumOrderByAggregateInput
  }

  export type MechanicScalarWhereWithAggregatesInput = {
    AND?: MechanicScalarWhereWithAggregatesInput | MechanicScalarWhereWithAggregatesInput[]
    OR?: MechanicScalarWhereWithAggregatesInput[]
    NOT?: MechanicScalarWhereWithAggregatesInput | MechanicScalarWhereWithAggregatesInput[]
    userId?: StringWithAggregatesFilter<"Mechanic"> | string
    specialty?: StringWithAggregatesFilter<"Mechanic"> | string
    photoUrl?: StringWithAggregatesFilter<"Mechanic"> | string
    isAvailable?: BoolWithAggregatesFilter<"Mechanic"> | boolean
    lat?: FloatNullableWithAggregatesFilter<"Mechanic"> | number | null
    lng?: FloatNullableWithAggregatesFilter<"Mechanic"> | number | null
    updatedAt?: DateTimeWithAggregatesFilter<"Mechanic"> | Date | string
  }

  export type SolicitacaoServicosWhereInput = {
    AND?: SolicitacaoServicosWhereInput | SolicitacaoServicosWhereInput[]
    OR?: SolicitacaoServicosWhereInput[]
    NOT?: SolicitacaoServicosWhereInput | SolicitacaoServicosWhereInput[]
    id?: StringFilter<"SolicitacaoServicos"> | string
    producerId?: StringFilter<"SolicitacaoServicos"> | string
    description?: StringFilter<"SolicitacaoServicos"> | string
    machineType?: StringNullableFilter<"SolicitacaoServicos"> | string | null
    locationLat?: FloatNullableFilter<"SolicitacaoServicos"> | number | null
    locationLng?: FloatNullableFilter<"SolicitacaoServicos"> | number | null
    scheduledFor?: DateTimeNullableFilter<"SolicitacaoServicos"> | Date | string | null
    status?: EnumRequestStatusFilter<"SolicitacaoServicos"> | $Enums.RequestStatus
    createdAt?: DateTimeFilter<"SolicitacaoServicos"> | Date | string
    producer?: XOR<UsersScalarRelationFilter, UsersWhereInput>
    assignments?: AtribuicaoServicosListRelationFilter
    messages?: MessageListRelationFilter
    Rating?: RatingListRelationFilter
  }

  export type SolicitacaoServicosOrderByWithRelationInput = {
    id?: SortOrder
    producerId?: SortOrder
    description?: SortOrder
    machineType?: SortOrderInput | SortOrder
    locationLat?: SortOrderInput | SortOrder
    locationLng?: SortOrderInput | SortOrder
    scheduledFor?: SortOrderInput | SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    producer?: UsersOrderByWithRelationInput
    assignments?: AtribuicaoServicosOrderByRelationAggregateInput
    messages?: MessageOrderByRelationAggregateInput
    Rating?: RatingOrderByRelationAggregateInput
  }

  export type SolicitacaoServicosWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: SolicitacaoServicosWhereInput | SolicitacaoServicosWhereInput[]
    OR?: SolicitacaoServicosWhereInput[]
    NOT?: SolicitacaoServicosWhereInput | SolicitacaoServicosWhereInput[]
    producerId?: StringFilter<"SolicitacaoServicos"> | string
    description?: StringFilter<"SolicitacaoServicos"> | string
    machineType?: StringNullableFilter<"SolicitacaoServicos"> | string | null
    locationLat?: FloatNullableFilter<"SolicitacaoServicos"> | number | null
    locationLng?: FloatNullableFilter<"SolicitacaoServicos"> | number | null
    scheduledFor?: DateTimeNullableFilter<"SolicitacaoServicos"> | Date | string | null
    status?: EnumRequestStatusFilter<"SolicitacaoServicos"> | $Enums.RequestStatus
    createdAt?: DateTimeFilter<"SolicitacaoServicos"> | Date | string
    producer?: XOR<UsersScalarRelationFilter, UsersWhereInput>
    assignments?: AtribuicaoServicosListRelationFilter
    messages?: MessageListRelationFilter
    Rating?: RatingListRelationFilter
  }, "id">

  export type SolicitacaoServicosOrderByWithAggregationInput = {
    id?: SortOrder
    producerId?: SortOrder
    description?: SortOrder
    machineType?: SortOrderInput | SortOrder
    locationLat?: SortOrderInput | SortOrder
    locationLng?: SortOrderInput | SortOrder
    scheduledFor?: SortOrderInput | SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    _count?: SolicitacaoServicosCountOrderByAggregateInput
    _avg?: SolicitacaoServicosAvgOrderByAggregateInput
    _max?: SolicitacaoServicosMaxOrderByAggregateInput
    _min?: SolicitacaoServicosMinOrderByAggregateInput
    _sum?: SolicitacaoServicosSumOrderByAggregateInput
  }

  export type SolicitacaoServicosScalarWhereWithAggregatesInput = {
    AND?: SolicitacaoServicosScalarWhereWithAggregatesInput | SolicitacaoServicosScalarWhereWithAggregatesInput[]
    OR?: SolicitacaoServicosScalarWhereWithAggregatesInput[]
    NOT?: SolicitacaoServicosScalarWhereWithAggregatesInput | SolicitacaoServicosScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"SolicitacaoServicos"> | string
    producerId?: StringWithAggregatesFilter<"SolicitacaoServicos"> | string
    description?: StringWithAggregatesFilter<"SolicitacaoServicos"> | string
    machineType?: StringNullableWithAggregatesFilter<"SolicitacaoServicos"> | string | null
    locationLat?: FloatNullableWithAggregatesFilter<"SolicitacaoServicos"> | number | null
    locationLng?: FloatNullableWithAggregatesFilter<"SolicitacaoServicos"> | number | null
    scheduledFor?: DateTimeNullableWithAggregatesFilter<"SolicitacaoServicos"> | Date | string | null
    status?: EnumRequestStatusWithAggregatesFilter<"SolicitacaoServicos"> | $Enums.RequestStatus
    createdAt?: DateTimeWithAggregatesFilter<"SolicitacaoServicos"> | Date | string
  }

  export type AtribuicaoServicosWhereInput = {
    AND?: AtribuicaoServicosWhereInput | AtribuicaoServicosWhereInput[]
    OR?: AtribuicaoServicosWhereInput[]
    NOT?: AtribuicaoServicosWhereInput | AtribuicaoServicosWhereInput[]
    id?: StringFilter<"AtribuicaoServicos"> | string
    solicitacaoServicoId?: StringFilter<"AtribuicaoServicos"> | string
    mechanicId?: StringFilter<"AtribuicaoServicos"> | string
    status?: EnumStatusAtribuicaoFilter<"AtribuicaoServicos"> | $Enums.StatusAtribuicao
    decidedAt?: DateTimeNullableFilter<"AtribuicaoServicos"> | Date | string | null
    createdAt?: DateTimeFilter<"AtribuicaoServicos"> | Date | string
    solicitacaoServico?: XOR<SolicitacaoServicosScalarRelationFilter, SolicitacaoServicosWhereInput>
    mechanic?: XOR<UsersScalarRelationFilter, UsersWhereInput>
  }

  export type AtribuicaoServicosOrderByWithRelationInput = {
    id?: SortOrder
    solicitacaoServicoId?: SortOrder
    mechanicId?: SortOrder
    status?: SortOrder
    decidedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    solicitacaoServico?: SolicitacaoServicosOrderByWithRelationInput
    mechanic?: UsersOrderByWithRelationInput
  }

  export type AtribuicaoServicosWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: AtribuicaoServicosWhereInput | AtribuicaoServicosWhereInput[]
    OR?: AtribuicaoServicosWhereInput[]
    NOT?: AtribuicaoServicosWhereInput | AtribuicaoServicosWhereInput[]
    solicitacaoServicoId?: StringFilter<"AtribuicaoServicos"> | string
    mechanicId?: StringFilter<"AtribuicaoServicos"> | string
    status?: EnumStatusAtribuicaoFilter<"AtribuicaoServicos"> | $Enums.StatusAtribuicao
    decidedAt?: DateTimeNullableFilter<"AtribuicaoServicos"> | Date | string | null
    createdAt?: DateTimeFilter<"AtribuicaoServicos"> | Date | string
    solicitacaoServico?: XOR<SolicitacaoServicosScalarRelationFilter, SolicitacaoServicosWhereInput>
    mechanic?: XOR<UsersScalarRelationFilter, UsersWhereInput>
  }, "id">

  export type AtribuicaoServicosOrderByWithAggregationInput = {
    id?: SortOrder
    solicitacaoServicoId?: SortOrder
    mechanicId?: SortOrder
    status?: SortOrder
    decidedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    _count?: AtribuicaoServicosCountOrderByAggregateInput
    _max?: AtribuicaoServicosMaxOrderByAggregateInput
    _min?: AtribuicaoServicosMinOrderByAggregateInput
  }

  export type AtribuicaoServicosScalarWhereWithAggregatesInput = {
    AND?: AtribuicaoServicosScalarWhereWithAggregatesInput | AtribuicaoServicosScalarWhereWithAggregatesInput[]
    OR?: AtribuicaoServicosScalarWhereWithAggregatesInput[]
    NOT?: AtribuicaoServicosScalarWhereWithAggregatesInput | AtribuicaoServicosScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"AtribuicaoServicos"> | string
    solicitacaoServicoId?: StringWithAggregatesFilter<"AtribuicaoServicos"> | string
    mechanicId?: StringWithAggregatesFilter<"AtribuicaoServicos"> | string
    status?: EnumStatusAtribuicaoWithAggregatesFilter<"AtribuicaoServicos"> | $Enums.StatusAtribuicao
    decidedAt?: DateTimeNullableWithAggregatesFilter<"AtribuicaoServicos"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"AtribuicaoServicos"> | Date | string
  }

  export type MessageWhereInput = {
    AND?: MessageWhereInput | MessageWhereInput[]
    OR?: MessageWhereInput[]
    NOT?: MessageWhereInput | MessageWhereInput[]
    id?: StringFilter<"Message"> | string
    solicitacaoServicoId?: StringFilter<"Message"> | string
    senderId?: StringFilter<"Message"> | string
    content?: StringFilter<"Message"> | string
    createdAt?: DateTimeFilter<"Message"> | Date | string
    solicitacaoServico?: XOR<SolicitacaoServicosScalarRelationFilter, SolicitacaoServicosWhereInput>
    sender?: XOR<UsersScalarRelationFilter, UsersWhereInput>
  }

  export type MessageOrderByWithRelationInput = {
    id?: SortOrder
    solicitacaoServicoId?: SortOrder
    senderId?: SortOrder
    content?: SortOrder
    createdAt?: SortOrder
    solicitacaoServico?: SolicitacaoServicosOrderByWithRelationInput
    sender?: UsersOrderByWithRelationInput
  }

  export type MessageWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: MessageWhereInput | MessageWhereInput[]
    OR?: MessageWhereInput[]
    NOT?: MessageWhereInput | MessageWhereInput[]
    solicitacaoServicoId?: StringFilter<"Message"> | string
    senderId?: StringFilter<"Message"> | string
    content?: StringFilter<"Message"> | string
    createdAt?: DateTimeFilter<"Message"> | Date | string
    solicitacaoServico?: XOR<SolicitacaoServicosScalarRelationFilter, SolicitacaoServicosWhereInput>
    sender?: XOR<UsersScalarRelationFilter, UsersWhereInput>
  }, "id">

  export type MessageOrderByWithAggregationInput = {
    id?: SortOrder
    solicitacaoServicoId?: SortOrder
    senderId?: SortOrder
    content?: SortOrder
    createdAt?: SortOrder
    _count?: MessageCountOrderByAggregateInput
    _max?: MessageMaxOrderByAggregateInput
    _min?: MessageMinOrderByAggregateInput
  }

  export type MessageScalarWhereWithAggregatesInput = {
    AND?: MessageScalarWhereWithAggregatesInput | MessageScalarWhereWithAggregatesInput[]
    OR?: MessageScalarWhereWithAggregatesInput[]
    NOT?: MessageScalarWhereWithAggregatesInput | MessageScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Message"> | string
    solicitacaoServicoId?: StringWithAggregatesFilter<"Message"> | string
    senderId?: StringWithAggregatesFilter<"Message"> | string
    content?: StringWithAggregatesFilter<"Message"> | string
    createdAt?: DateTimeWithAggregatesFilter<"Message"> | Date | string
  }

  export type RatingWhereInput = {
    AND?: RatingWhereInput | RatingWhereInput[]
    OR?: RatingWhereInput[]
    NOT?: RatingWhereInput | RatingWhereInput[]
    id?: StringFilter<"Rating"> | string
    mechanicId?: StringFilter<"Rating"> | string
    producerId?: StringFilter<"Rating"> | string
    solicitacaoServicoId?: StringFilter<"Rating"> | string
    score?: IntFilter<"Rating"> | number
    comment?: StringNullableFilter<"Rating"> | string | null
    createdAt?: DateTimeFilter<"Rating"> | Date | string
    mechanic?: XOR<MechanicScalarRelationFilter, MechanicWhereInput>
    producer?: XOR<UsersScalarRelationFilter, UsersWhereInput>
    solicitacaoServico?: XOR<SolicitacaoServicosScalarRelationFilter, SolicitacaoServicosWhereInput>
  }

  export type RatingOrderByWithRelationInput = {
    id?: SortOrder
    mechanicId?: SortOrder
    producerId?: SortOrder
    solicitacaoServicoId?: SortOrder
    score?: SortOrder
    comment?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    mechanic?: MechanicOrderByWithRelationInput
    producer?: UsersOrderByWithRelationInput
    solicitacaoServico?: SolicitacaoServicosOrderByWithRelationInput
  }

  export type RatingWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: RatingWhereInput | RatingWhereInput[]
    OR?: RatingWhereInput[]
    NOT?: RatingWhereInput | RatingWhereInput[]
    mechanicId?: StringFilter<"Rating"> | string
    producerId?: StringFilter<"Rating"> | string
    solicitacaoServicoId?: StringFilter<"Rating"> | string
    score?: IntFilter<"Rating"> | number
    comment?: StringNullableFilter<"Rating"> | string | null
    createdAt?: DateTimeFilter<"Rating"> | Date | string
    mechanic?: XOR<MechanicScalarRelationFilter, MechanicWhereInput>
    producer?: XOR<UsersScalarRelationFilter, UsersWhereInput>
    solicitacaoServico?: XOR<SolicitacaoServicosScalarRelationFilter, SolicitacaoServicosWhereInput>
  }, "id">

  export type RatingOrderByWithAggregationInput = {
    id?: SortOrder
    mechanicId?: SortOrder
    producerId?: SortOrder
    solicitacaoServicoId?: SortOrder
    score?: SortOrder
    comment?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    _count?: RatingCountOrderByAggregateInput
    _avg?: RatingAvgOrderByAggregateInput
    _max?: RatingMaxOrderByAggregateInput
    _min?: RatingMinOrderByAggregateInput
    _sum?: RatingSumOrderByAggregateInput
  }

  export type RatingScalarWhereWithAggregatesInput = {
    AND?: RatingScalarWhereWithAggregatesInput | RatingScalarWhereWithAggregatesInput[]
    OR?: RatingScalarWhereWithAggregatesInput[]
    NOT?: RatingScalarWhereWithAggregatesInput | RatingScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Rating"> | string
    mechanicId?: StringWithAggregatesFilter<"Rating"> | string
    producerId?: StringWithAggregatesFilter<"Rating"> | string
    solicitacaoServicoId?: StringWithAggregatesFilter<"Rating"> | string
    score?: IntWithAggregatesFilter<"Rating"> | number
    comment?: StringNullableWithAggregatesFilter<"Rating"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Rating"> | Date | string
  }

  export type UsersCreateInput = {
    id?: string
    email: string
    password: string
    fullName: string
    role: $Enums.Role
    phone?: string | null
    cpfCnpj?: string | null
    stateReg?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    mechanic?: MechanicCreateNestedOneWithoutUserInput
    SolicitacaoServicos?: SolicitacaoServicosCreateNestedManyWithoutProducerInput
    AtribuicaoServicos?: AtribuicaoServicosCreateNestedManyWithoutMechanicInput
    Message?: MessageCreateNestedManyWithoutSenderInput
    ratingsComoProdutor?: RatingCreateNestedManyWithoutProducerInput
  }

  export type UsersUncheckedCreateInput = {
    id?: string
    email: string
    password: string
    fullName: string
    role: $Enums.Role
    phone?: string | null
    cpfCnpj?: string | null
    stateReg?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    mechanic?: MechanicUncheckedCreateNestedOneWithoutUserInput
    SolicitacaoServicos?: SolicitacaoServicosUncheckedCreateNestedManyWithoutProducerInput
    AtribuicaoServicos?: AtribuicaoServicosUncheckedCreateNestedManyWithoutMechanicInput
    Message?: MessageUncheckedCreateNestedManyWithoutSenderInput
    ratingsComoProdutor?: RatingUncheckedCreateNestedManyWithoutProducerInput
  }

  export type UsersUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    cpfCnpj?: NullableStringFieldUpdateOperationsInput | string | null
    stateReg?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    mechanic?: MechanicUpdateOneWithoutUserNestedInput
    SolicitacaoServicos?: SolicitacaoServicosUpdateManyWithoutProducerNestedInput
    AtribuicaoServicos?: AtribuicaoServicosUpdateManyWithoutMechanicNestedInput
    Message?: MessageUpdateManyWithoutSenderNestedInput
    ratingsComoProdutor?: RatingUpdateManyWithoutProducerNestedInput
  }

  export type UsersUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    cpfCnpj?: NullableStringFieldUpdateOperationsInput | string | null
    stateReg?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    mechanic?: MechanicUncheckedUpdateOneWithoutUserNestedInput
    SolicitacaoServicos?: SolicitacaoServicosUncheckedUpdateManyWithoutProducerNestedInput
    AtribuicaoServicos?: AtribuicaoServicosUncheckedUpdateManyWithoutMechanicNestedInput
    Message?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    ratingsComoProdutor?: RatingUncheckedUpdateManyWithoutProducerNestedInput
  }

  export type UsersCreateManyInput = {
    id?: string
    email: string
    password: string
    fullName: string
    role: $Enums.Role
    phone?: string | null
    cpfCnpj?: string | null
    stateReg?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UsersUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    cpfCnpj?: NullableStringFieldUpdateOperationsInput | string | null
    stateReg?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UsersUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    cpfCnpj?: NullableStringFieldUpdateOperationsInput | string | null
    stateReg?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MechanicCreateInput = {
    specialty: string
    photoUrl: string
    isAvailable?: boolean
    lat?: number | null
    lng?: number | null
    updatedAt?: Date | string
    user: UsersCreateNestedOneWithoutMechanicInput
    ratings?: RatingCreateNestedManyWithoutMechanicInput
  }

  export type MechanicUncheckedCreateInput = {
    userId: string
    specialty: string
    photoUrl: string
    isAvailable?: boolean
    lat?: number | null
    lng?: number | null
    updatedAt?: Date | string
    ratings?: RatingUncheckedCreateNestedManyWithoutMechanicInput
  }

  export type MechanicUpdateInput = {
    specialty?: StringFieldUpdateOperationsInput | string
    photoUrl?: StringFieldUpdateOperationsInput | string
    isAvailable?: BoolFieldUpdateOperationsInput | boolean
    lat?: NullableFloatFieldUpdateOperationsInput | number | null
    lng?: NullableFloatFieldUpdateOperationsInput | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UsersUpdateOneRequiredWithoutMechanicNestedInput
    ratings?: RatingUpdateManyWithoutMechanicNestedInput
  }

  export type MechanicUncheckedUpdateInput = {
    userId?: StringFieldUpdateOperationsInput | string
    specialty?: StringFieldUpdateOperationsInput | string
    photoUrl?: StringFieldUpdateOperationsInput | string
    isAvailable?: BoolFieldUpdateOperationsInput | boolean
    lat?: NullableFloatFieldUpdateOperationsInput | number | null
    lng?: NullableFloatFieldUpdateOperationsInput | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ratings?: RatingUncheckedUpdateManyWithoutMechanicNestedInput
  }

  export type MechanicCreateManyInput = {
    userId: string
    specialty: string
    photoUrl: string
    isAvailable?: boolean
    lat?: number | null
    lng?: number | null
    updatedAt?: Date | string
  }

  export type MechanicUpdateManyMutationInput = {
    specialty?: StringFieldUpdateOperationsInput | string
    photoUrl?: StringFieldUpdateOperationsInput | string
    isAvailable?: BoolFieldUpdateOperationsInput | boolean
    lat?: NullableFloatFieldUpdateOperationsInput | number | null
    lng?: NullableFloatFieldUpdateOperationsInput | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MechanicUncheckedUpdateManyInput = {
    userId?: StringFieldUpdateOperationsInput | string
    specialty?: StringFieldUpdateOperationsInput | string
    photoUrl?: StringFieldUpdateOperationsInput | string
    isAvailable?: BoolFieldUpdateOperationsInput | boolean
    lat?: NullableFloatFieldUpdateOperationsInput | number | null
    lng?: NullableFloatFieldUpdateOperationsInput | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SolicitacaoServicosCreateInput = {
    id?: string
    description: string
    machineType?: string | null
    locationLat?: number | null
    locationLng?: number | null
    scheduledFor?: Date | string | null
    status?: $Enums.RequestStatus
    createdAt?: Date | string
    producer: UsersCreateNestedOneWithoutSolicitacaoServicosInput
    assignments?: AtribuicaoServicosCreateNestedManyWithoutSolicitacaoServicoInput
    messages?: MessageCreateNestedManyWithoutSolicitacaoServicoInput
    Rating?: RatingCreateNestedManyWithoutSolicitacaoServicoInput
  }

  export type SolicitacaoServicosUncheckedCreateInput = {
    id?: string
    producerId: string
    description: string
    machineType?: string | null
    locationLat?: number | null
    locationLng?: number | null
    scheduledFor?: Date | string | null
    status?: $Enums.RequestStatus
    createdAt?: Date | string
    assignments?: AtribuicaoServicosUncheckedCreateNestedManyWithoutSolicitacaoServicoInput
    messages?: MessageUncheckedCreateNestedManyWithoutSolicitacaoServicoInput
    Rating?: RatingUncheckedCreateNestedManyWithoutSolicitacaoServicoInput
  }

  export type SolicitacaoServicosUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    machineType?: NullableStringFieldUpdateOperationsInput | string | null
    locationLat?: NullableFloatFieldUpdateOperationsInput | number | null
    locationLng?: NullableFloatFieldUpdateOperationsInput | number | null
    scheduledFor?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumRequestStatusFieldUpdateOperationsInput | $Enums.RequestStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    producer?: UsersUpdateOneRequiredWithoutSolicitacaoServicosNestedInput
    assignments?: AtribuicaoServicosUpdateManyWithoutSolicitacaoServicoNestedInput
    messages?: MessageUpdateManyWithoutSolicitacaoServicoNestedInput
    Rating?: RatingUpdateManyWithoutSolicitacaoServicoNestedInput
  }

  export type SolicitacaoServicosUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    producerId?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    machineType?: NullableStringFieldUpdateOperationsInput | string | null
    locationLat?: NullableFloatFieldUpdateOperationsInput | number | null
    locationLng?: NullableFloatFieldUpdateOperationsInput | number | null
    scheduledFor?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumRequestStatusFieldUpdateOperationsInput | $Enums.RequestStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    assignments?: AtribuicaoServicosUncheckedUpdateManyWithoutSolicitacaoServicoNestedInput
    messages?: MessageUncheckedUpdateManyWithoutSolicitacaoServicoNestedInput
    Rating?: RatingUncheckedUpdateManyWithoutSolicitacaoServicoNestedInput
  }

  export type SolicitacaoServicosCreateManyInput = {
    id?: string
    producerId: string
    description: string
    machineType?: string | null
    locationLat?: number | null
    locationLng?: number | null
    scheduledFor?: Date | string | null
    status?: $Enums.RequestStatus
    createdAt?: Date | string
  }

  export type SolicitacaoServicosUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    machineType?: NullableStringFieldUpdateOperationsInput | string | null
    locationLat?: NullableFloatFieldUpdateOperationsInput | number | null
    locationLng?: NullableFloatFieldUpdateOperationsInput | number | null
    scheduledFor?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumRequestStatusFieldUpdateOperationsInput | $Enums.RequestStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SolicitacaoServicosUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    producerId?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    machineType?: NullableStringFieldUpdateOperationsInput | string | null
    locationLat?: NullableFloatFieldUpdateOperationsInput | number | null
    locationLng?: NullableFloatFieldUpdateOperationsInput | number | null
    scheduledFor?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumRequestStatusFieldUpdateOperationsInput | $Enums.RequestStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AtribuicaoServicosCreateInput = {
    id?: string
    status?: $Enums.StatusAtribuicao
    decidedAt?: Date | string | null
    createdAt?: Date | string
    solicitacaoServico: SolicitacaoServicosCreateNestedOneWithoutAssignmentsInput
    mechanic: UsersCreateNestedOneWithoutAtribuicaoServicosInput
  }

  export type AtribuicaoServicosUncheckedCreateInput = {
    id?: string
    solicitacaoServicoId: string
    mechanicId: string
    status?: $Enums.StatusAtribuicao
    decidedAt?: Date | string | null
    createdAt?: Date | string
  }

  export type AtribuicaoServicosUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumStatusAtribuicaoFieldUpdateOperationsInput | $Enums.StatusAtribuicao
    decidedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    solicitacaoServico?: SolicitacaoServicosUpdateOneRequiredWithoutAssignmentsNestedInput
    mechanic?: UsersUpdateOneRequiredWithoutAtribuicaoServicosNestedInput
  }

  export type AtribuicaoServicosUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    solicitacaoServicoId?: StringFieldUpdateOperationsInput | string
    mechanicId?: StringFieldUpdateOperationsInput | string
    status?: EnumStatusAtribuicaoFieldUpdateOperationsInput | $Enums.StatusAtribuicao
    decidedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AtribuicaoServicosCreateManyInput = {
    id?: string
    solicitacaoServicoId: string
    mechanicId: string
    status?: $Enums.StatusAtribuicao
    decidedAt?: Date | string | null
    createdAt?: Date | string
  }

  export type AtribuicaoServicosUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumStatusAtribuicaoFieldUpdateOperationsInput | $Enums.StatusAtribuicao
    decidedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AtribuicaoServicosUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    solicitacaoServicoId?: StringFieldUpdateOperationsInput | string
    mechanicId?: StringFieldUpdateOperationsInput | string
    status?: EnumStatusAtribuicaoFieldUpdateOperationsInput | $Enums.StatusAtribuicao
    decidedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MessageCreateInput = {
    id?: string
    content: string
    createdAt?: Date | string
    solicitacaoServico: SolicitacaoServicosCreateNestedOneWithoutMessagesInput
    sender: UsersCreateNestedOneWithoutMessageInput
  }

  export type MessageUncheckedCreateInput = {
    id?: string
    solicitacaoServicoId: string
    senderId: string
    content: string
    createdAt?: Date | string
  }

  export type MessageUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    solicitacaoServico?: SolicitacaoServicosUpdateOneRequiredWithoutMessagesNestedInput
    sender?: UsersUpdateOneRequiredWithoutMessageNestedInput
  }

  export type MessageUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    solicitacaoServicoId?: StringFieldUpdateOperationsInput | string
    senderId?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MessageCreateManyInput = {
    id?: string
    solicitacaoServicoId: string
    senderId: string
    content: string
    createdAt?: Date | string
  }

  export type MessageUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MessageUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    solicitacaoServicoId?: StringFieldUpdateOperationsInput | string
    senderId?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RatingCreateInput = {
    id?: string
    score: number
    comment?: string | null
    createdAt?: Date | string
    mechanic: MechanicCreateNestedOneWithoutRatingsInput
    producer: UsersCreateNestedOneWithoutRatingsComoProdutorInput
    solicitacaoServico: SolicitacaoServicosCreateNestedOneWithoutRatingInput
  }

  export type RatingUncheckedCreateInput = {
    id?: string
    mechanicId: string
    producerId: string
    solicitacaoServicoId: string
    score: number
    comment?: string | null
    createdAt?: Date | string
  }

  export type RatingUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    score?: IntFieldUpdateOperationsInput | number
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    mechanic?: MechanicUpdateOneRequiredWithoutRatingsNestedInput
    producer?: UsersUpdateOneRequiredWithoutRatingsComoProdutorNestedInput
    solicitacaoServico?: SolicitacaoServicosUpdateOneRequiredWithoutRatingNestedInput
  }

  export type RatingUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    mechanicId?: StringFieldUpdateOperationsInput | string
    producerId?: StringFieldUpdateOperationsInput | string
    solicitacaoServicoId?: StringFieldUpdateOperationsInput | string
    score?: IntFieldUpdateOperationsInput | number
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RatingCreateManyInput = {
    id?: string
    mechanicId: string
    producerId: string
    solicitacaoServicoId: string
    score: number
    comment?: string | null
    createdAt?: Date | string
  }

  export type RatingUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    score?: IntFieldUpdateOperationsInput | number
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RatingUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    mechanicId?: StringFieldUpdateOperationsInput | string
    producerId?: StringFieldUpdateOperationsInput | string
    solicitacaoServicoId?: StringFieldUpdateOperationsInput | string
    score?: IntFieldUpdateOperationsInput | number
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type EnumRoleFilter<$PrismaModel = never> = {
    equals?: $Enums.Role | EnumRoleFieldRefInput<$PrismaModel>
    in?: $Enums.Role[] | ListEnumRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.Role[] | ListEnumRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumRoleFilter<$PrismaModel> | $Enums.Role
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type MechanicNullableScalarRelationFilter = {
    is?: MechanicWhereInput | null
    isNot?: MechanicWhereInput | null
  }

  export type SolicitacaoServicosListRelationFilter = {
    every?: SolicitacaoServicosWhereInput
    some?: SolicitacaoServicosWhereInput
    none?: SolicitacaoServicosWhereInput
  }

  export type AtribuicaoServicosListRelationFilter = {
    every?: AtribuicaoServicosWhereInput
    some?: AtribuicaoServicosWhereInput
    none?: AtribuicaoServicosWhereInput
  }

  export type MessageListRelationFilter = {
    every?: MessageWhereInput
    some?: MessageWhereInput
    none?: MessageWhereInput
  }

  export type RatingListRelationFilter = {
    every?: RatingWhereInput
    some?: RatingWhereInput
    none?: RatingWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type SolicitacaoServicosOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type AtribuicaoServicosOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type MessageOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type RatingOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UsersCountOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    fullName?: SortOrder
    role?: SortOrder
    phone?: SortOrder
    cpfCnpj?: SortOrder
    stateReg?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UsersMaxOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    fullName?: SortOrder
    role?: SortOrder
    phone?: SortOrder
    cpfCnpj?: SortOrder
    stateReg?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UsersMinOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    fullName?: SortOrder
    role?: SortOrder
    phone?: SortOrder
    cpfCnpj?: SortOrder
    stateReg?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type EnumRoleWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Role | EnumRoleFieldRefInput<$PrismaModel>
    in?: $Enums.Role[] | ListEnumRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.Role[] | ListEnumRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumRoleWithAggregatesFilter<$PrismaModel> | $Enums.Role
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumRoleFilter<$PrismaModel>
    _max?: NestedEnumRoleFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type FloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type UsersScalarRelationFilter = {
    is?: UsersWhereInput
    isNot?: UsersWhereInput
  }

  export type MechanicCountOrderByAggregateInput = {
    userId?: SortOrder
    specialty?: SortOrder
    photoUrl?: SortOrder
    isAvailable?: SortOrder
    lat?: SortOrder
    lng?: SortOrder
    updatedAt?: SortOrder
  }

  export type MechanicAvgOrderByAggregateInput = {
    lat?: SortOrder
    lng?: SortOrder
  }

  export type MechanicMaxOrderByAggregateInput = {
    userId?: SortOrder
    specialty?: SortOrder
    photoUrl?: SortOrder
    isAvailable?: SortOrder
    lat?: SortOrder
    lng?: SortOrder
    updatedAt?: SortOrder
  }

  export type MechanicMinOrderByAggregateInput = {
    userId?: SortOrder
    specialty?: SortOrder
    photoUrl?: SortOrder
    isAvailable?: SortOrder
    lat?: SortOrder
    lng?: SortOrder
    updatedAt?: SortOrder
  }

  export type MechanicSumOrderByAggregateInput = {
    lat?: SortOrder
    lng?: SortOrder
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type FloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type EnumRequestStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.RequestStatus | EnumRequestStatusFieldRefInput<$PrismaModel>
    in?: $Enums.RequestStatus[] | ListEnumRequestStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.RequestStatus[] | ListEnumRequestStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumRequestStatusFilter<$PrismaModel> | $Enums.RequestStatus
  }

  export type SolicitacaoServicosCountOrderByAggregateInput = {
    id?: SortOrder
    producerId?: SortOrder
    description?: SortOrder
    machineType?: SortOrder
    locationLat?: SortOrder
    locationLng?: SortOrder
    scheduledFor?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
  }

  export type SolicitacaoServicosAvgOrderByAggregateInput = {
    locationLat?: SortOrder
    locationLng?: SortOrder
  }

  export type SolicitacaoServicosMaxOrderByAggregateInput = {
    id?: SortOrder
    producerId?: SortOrder
    description?: SortOrder
    machineType?: SortOrder
    locationLat?: SortOrder
    locationLng?: SortOrder
    scheduledFor?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
  }

  export type SolicitacaoServicosMinOrderByAggregateInput = {
    id?: SortOrder
    producerId?: SortOrder
    description?: SortOrder
    machineType?: SortOrder
    locationLat?: SortOrder
    locationLng?: SortOrder
    scheduledFor?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
  }

  export type SolicitacaoServicosSumOrderByAggregateInput = {
    locationLat?: SortOrder
    locationLng?: SortOrder
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type EnumRequestStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.RequestStatus | EnumRequestStatusFieldRefInput<$PrismaModel>
    in?: $Enums.RequestStatus[] | ListEnumRequestStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.RequestStatus[] | ListEnumRequestStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumRequestStatusWithAggregatesFilter<$PrismaModel> | $Enums.RequestStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumRequestStatusFilter<$PrismaModel>
    _max?: NestedEnumRequestStatusFilter<$PrismaModel>
  }

  export type EnumStatusAtribuicaoFilter<$PrismaModel = never> = {
    equals?: $Enums.StatusAtribuicao | EnumStatusAtribuicaoFieldRefInput<$PrismaModel>
    in?: $Enums.StatusAtribuicao[] | ListEnumStatusAtribuicaoFieldRefInput<$PrismaModel>
    notIn?: $Enums.StatusAtribuicao[] | ListEnumStatusAtribuicaoFieldRefInput<$PrismaModel>
    not?: NestedEnumStatusAtribuicaoFilter<$PrismaModel> | $Enums.StatusAtribuicao
  }

  export type SolicitacaoServicosScalarRelationFilter = {
    is?: SolicitacaoServicosWhereInput
    isNot?: SolicitacaoServicosWhereInput
  }

  export type AtribuicaoServicosCountOrderByAggregateInput = {
    id?: SortOrder
    solicitacaoServicoId?: SortOrder
    mechanicId?: SortOrder
    status?: SortOrder
    decidedAt?: SortOrder
    createdAt?: SortOrder
  }

  export type AtribuicaoServicosMaxOrderByAggregateInput = {
    id?: SortOrder
    solicitacaoServicoId?: SortOrder
    mechanicId?: SortOrder
    status?: SortOrder
    decidedAt?: SortOrder
    createdAt?: SortOrder
  }

  export type AtribuicaoServicosMinOrderByAggregateInput = {
    id?: SortOrder
    solicitacaoServicoId?: SortOrder
    mechanicId?: SortOrder
    status?: SortOrder
    decidedAt?: SortOrder
    createdAt?: SortOrder
  }

  export type EnumStatusAtribuicaoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.StatusAtribuicao | EnumStatusAtribuicaoFieldRefInput<$PrismaModel>
    in?: $Enums.StatusAtribuicao[] | ListEnumStatusAtribuicaoFieldRefInput<$PrismaModel>
    notIn?: $Enums.StatusAtribuicao[] | ListEnumStatusAtribuicaoFieldRefInput<$PrismaModel>
    not?: NestedEnumStatusAtribuicaoWithAggregatesFilter<$PrismaModel> | $Enums.StatusAtribuicao
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumStatusAtribuicaoFilter<$PrismaModel>
    _max?: NestedEnumStatusAtribuicaoFilter<$PrismaModel>
  }

  export type MessageCountOrderByAggregateInput = {
    id?: SortOrder
    solicitacaoServicoId?: SortOrder
    senderId?: SortOrder
    content?: SortOrder
    createdAt?: SortOrder
  }

  export type MessageMaxOrderByAggregateInput = {
    id?: SortOrder
    solicitacaoServicoId?: SortOrder
    senderId?: SortOrder
    content?: SortOrder
    createdAt?: SortOrder
  }

  export type MessageMinOrderByAggregateInput = {
    id?: SortOrder
    solicitacaoServicoId?: SortOrder
    senderId?: SortOrder
    content?: SortOrder
    createdAt?: SortOrder
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type MechanicScalarRelationFilter = {
    is?: MechanicWhereInput
    isNot?: MechanicWhereInput
  }

  export type RatingCountOrderByAggregateInput = {
    id?: SortOrder
    mechanicId?: SortOrder
    producerId?: SortOrder
    solicitacaoServicoId?: SortOrder
    score?: SortOrder
    comment?: SortOrder
    createdAt?: SortOrder
  }

  export type RatingAvgOrderByAggregateInput = {
    score?: SortOrder
  }

  export type RatingMaxOrderByAggregateInput = {
    id?: SortOrder
    mechanicId?: SortOrder
    producerId?: SortOrder
    solicitacaoServicoId?: SortOrder
    score?: SortOrder
    comment?: SortOrder
    createdAt?: SortOrder
  }

  export type RatingMinOrderByAggregateInput = {
    id?: SortOrder
    mechanicId?: SortOrder
    producerId?: SortOrder
    solicitacaoServicoId?: SortOrder
    score?: SortOrder
    comment?: SortOrder
    createdAt?: SortOrder
  }

  export type RatingSumOrderByAggregateInput = {
    score?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type MechanicCreateNestedOneWithoutUserInput = {
    create?: XOR<MechanicCreateWithoutUserInput, MechanicUncheckedCreateWithoutUserInput>
    connectOrCreate?: MechanicCreateOrConnectWithoutUserInput
    connect?: MechanicWhereUniqueInput
  }

  export type SolicitacaoServicosCreateNestedManyWithoutProducerInput = {
    create?: XOR<SolicitacaoServicosCreateWithoutProducerInput, SolicitacaoServicosUncheckedCreateWithoutProducerInput> | SolicitacaoServicosCreateWithoutProducerInput[] | SolicitacaoServicosUncheckedCreateWithoutProducerInput[]
    connectOrCreate?: SolicitacaoServicosCreateOrConnectWithoutProducerInput | SolicitacaoServicosCreateOrConnectWithoutProducerInput[]
    createMany?: SolicitacaoServicosCreateManyProducerInputEnvelope
    connect?: SolicitacaoServicosWhereUniqueInput | SolicitacaoServicosWhereUniqueInput[]
  }

  export type AtribuicaoServicosCreateNestedManyWithoutMechanicInput = {
    create?: XOR<AtribuicaoServicosCreateWithoutMechanicInput, AtribuicaoServicosUncheckedCreateWithoutMechanicInput> | AtribuicaoServicosCreateWithoutMechanicInput[] | AtribuicaoServicosUncheckedCreateWithoutMechanicInput[]
    connectOrCreate?: AtribuicaoServicosCreateOrConnectWithoutMechanicInput | AtribuicaoServicosCreateOrConnectWithoutMechanicInput[]
    createMany?: AtribuicaoServicosCreateManyMechanicInputEnvelope
    connect?: AtribuicaoServicosWhereUniqueInput | AtribuicaoServicosWhereUniqueInput[]
  }

  export type MessageCreateNestedManyWithoutSenderInput = {
    create?: XOR<MessageCreateWithoutSenderInput, MessageUncheckedCreateWithoutSenderInput> | MessageCreateWithoutSenderInput[] | MessageUncheckedCreateWithoutSenderInput[]
    connectOrCreate?: MessageCreateOrConnectWithoutSenderInput | MessageCreateOrConnectWithoutSenderInput[]
    createMany?: MessageCreateManySenderInputEnvelope
    connect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
  }

  export type RatingCreateNestedManyWithoutProducerInput = {
    create?: XOR<RatingCreateWithoutProducerInput, RatingUncheckedCreateWithoutProducerInput> | RatingCreateWithoutProducerInput[] | RatingUncheckedCreateWithoutProducerInput[]
    connectOrCreate?: RatingCreateOrConnectWithoutProducerInput | RatingCreateOrConnectWithoutProducerInput[]
    createMany?: RatingCreateManyProducerInputEnvelope
    connect?: RatingWhereUniqueInput | RatingWhereUniqueInput[]
  }

  export type MechanicUncheckedCreateNestedOneWithoutUserInput = {
    create?: XOR<MechanicCreateWithoutUserInput, MechanicUncheckedCreateWithoutUserInput>
    connectOrCreate?: MechanicCreateOrConnectWithoutUserInput
    connect?: MechanicWhereUniqueInput
  }

  export type SolicitacaoServicosUncheckedCreateNestedManyWithoutProducerInput = {
    create?: XOR<SolicitacaoServicosCreateWithoutProducerInput, SolicitacaoServicosUncheckedCreateWithoutProducerInput> | SolicitacaoServicosCreateWithoutProducerInput[] | SolicitacaoServicosUncheckedCreateWithoutProducerInput[]
    connectOrCreate?: SolicitacaoServicosCreateOrConnectWithoutProducerInput | SolicitacaoServicosCreateOrConnectWithoutProducerInput[]
    createMany?: SolicitacaoServicosCreateManyProducerInputEnvelope
    connect?: SolicitacaoServicosWhereUniqueInput | SolicitacaoServicosWhereUniqueInput[]
  }

  export type AtribuicaoServicosUncheckedCreateNestedManyWithoutMechanicInput = {
    create?: XOR<AtribuicaoServicosCreateWithoutMechanicInput, AtribuicaoServicosUncheckedCreateWithoutMechanicInput> | AtribuicaoServicosCreateWithoutMechanicInput[] | AtribuicaoServicosUncheckedCreateWithoutMechanicInput[]
    connectOrCreate?: AtribuicaoServicosCreateOrConnectWithoutMechanicInput | AtribuicaoServicosCreateOrConnectWithoutMechanicInput[]
    createMany?: AtribuicaoServicosCreateManyMechanicInputEnvelope
    connect?: AtribuicaoServicosWhereUniqueInput | AtribuicaoServicosWhereUniqueInput[]
  }

  export type MessageUncheckedCreateNestedManyWithoutSenderInput = {
    create?: XOR<MessageCreateWithoutSenderInput, MessageUncheckedCreateWithoutSenderInput> | MessageCreateWithoutSenderInput[] | MessageUncheckedCreateWithoutSenderInput[]
    connectOrCreate?: MessageCreateOrConnectWithoutSenderInput | MessageCreateOrConnectWithoutSenderInput[]
    createMany?: MessageCreateManySenderInputEnvelope
    connect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
  }

  export type RatingUncheckedCreateNestedManyWithoutProducerInput = {
    create?: XOR<RatingCreateWithoutProducerInput, RatingUncheckedCreateWithoutProducerInput> | RatingCreateWithoutProducerInput[] | RatingUncheckedCreateWithoutProducerInput[]
    connectOrCreate?: RatingCreateOrConnectWithoutProducerInput | RatingCreateOrConnectWithoutProducerInput[]
    createMany?: RatingCreateManyProducerInputEnvelope
    connect?: RatingWhereUniqueInput | RatingWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type EnumRoleFieldUpdateOperationsInput = {
    set?: $Enums.Role
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type MechanicUpdateOneWithoutUserNestedInput = {
    create?: XOR<MechanicCreateWithoutUserInput, MechanicUncheckedCreateWithoutUserInput>
    connectOrCreate?: MechanicCreateOrConnectWithoutUserInput
    upsert?: MechanicUpsertWithoutUserInput
    disconnect?: MechanicWhereInput | boolean
    delete?: MechanicWhereInput | boolean
    connect?: MechanicWhereUniqueInput
    update?: XOR<XOR<MechanicUpdateToOneWithWhereWithoutUserInput, MechanicUpdateWithoutUserInput>, MechanicUncheckedUpdateWithoutUserInput>
  }

  export type SolicitacaoServicosUpdateManyWithoutProducerNestedInput = {
    create?: XOR<SolicitacaoServicosCreateWithoutProducerInput, SolicitacaoServicosUncheckedCreateWithoutProducerInput> | SolicitacaoServicosCreateWithoutProducerInput[] | SolicitacaoServicosUncheckedCreateWithoutProducerInput[]
    connectOrCreate?: SolicitacaoServicosCreateOrConnectWithoutProducerInput | SolicitacaoServicosCreateOrConnectWithoutProducerInput[]
    upsert?: SolicitacaoServicosUpsertWithWhereUniqueWithoutProducerInput | SolicitacaoServicosUpsertWithWhereUniqueWithoutProducerInput[]
    createMany?: SolicitacaoServicosCreateManyProducerInputEnvelope
    set?: SolicitacaoServicosWhereUniqueInput | SolicitacaoServicosWhereUniqueInput[]
    disconnect?: SolicitacaoServicosWhereUniqueInput | SolicitacaoServicosWhereUniqueInput[]
    delete?: SolicitacaoServicosWhereUniqueInput | SolicitacaoServicosWhereUniqueInput[]
    connect?: SolicitacaoServicosWhereUniqueInput | SolicitacaoServicosWhereUniqueInput[]
    update?: SolicitacaoServicosUpdateWithWhereUniqueWithoutProducerInput | SolicitacaoServicosUpdateWithWhereUniqueWithoutProducerInput[]
    updateMany?: SolicitacaoServicosUpdateManyWithWhereWithoutProducerInput | SolicitacaoServicosUpdateManyWithWhereWithoutProducerInput[]
    deleteMany?: SolicitacaoServicosScalarWhereInput | SolicitacaoServicosScalarWhereInput[]
  }

  export type AtribuicaoServicosUpdateManyWithoutMechanicNestedInput = {
    create?: XOR<AtribuicaoServicosCreateWithoutMechanicInput, AtribuicaoServicosUncheckedCreateWithoutMechanicInput> | AtribuicaoServicosCreateWithoutMechanicInput[] | AtribuicaoServicosUncheckedCreateWithoutMechanicInput[]
    connectOrCreate?: AtribuicaoServicosCreateOrConnectWithoutMechanicInput | AtribuicaoServicosCreateOrConnectWithoutMechanicInput[]
    upsert?: AtribuicaoServicosUpsertWithWhereUniqueWithoutMechanicInput | AtribuicaoServicosUpsertWithWhereUniqueWithoutMechanicInput[]
    createMany?: AtribuicaoServicosCreateManyMechanicInputEnvelope
    set?: AtribuicaoServicosWhereUniqueInput | AtribuicaoServicosWhereUniqueInput[]
    disconnect?: AtribuicaoServicosWhereUniqueInput | AtribuicaoServicosWhereUniqueInput[]
    delete?: AtribuicaoServicosWhereUniqueInput | AtribuicaoServicosWhereUniqueInput[]
    connect?: AtribuicaoServicosWhereUniqueInput | AtribuicaoServicosWhereUniqueInput[]
    update?: AtribuicaoServicosUpdateWithWhereUniqueWithoutMechanicInput | AtribuicaoServicosUpdateWithWhereUniqueWithoutMechanicInput[]
    updateMany?: AtribuicaoServicosUpdateManyWithWhereWithoutMechanicInput | AtribuicaoServicosUpdateManyWithWhereWithoutMechanicInput[]
    deleteMany?: AtribuicaoServicosScalarWhereInput | AtribuicaoServicosScalarWhereInput[]
  }

  export type MessageUpdateManyWithoutSenderNestedInput = {
    create?: XOR<MessageCreateWithoutSenderInput, MessageUncheckedCreateWithoutSenderInput> | MessageCreateWithoutSenderInput[] | MessageUncheckedCreateWithoutSenderInput[]
    connectOrCreate?: MessageCreateOrConnectWithoutSenderInput | MessageCreateOrConnectWithoutSenderInput[]
    upsert?: MessageUpsertWithWhereUniqueWithoutSenderInput | MessageUpsertWithWhereUniqueWithoutSenderInput[]
    createMany?: MessageCreateManySenderInputEnvelope
    set?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    disconnect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    delete?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    connect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    update?: MessageUpdateWithWhereUniqueWithoutSenderInput | MessageUpdateWithWhereUniqueWithoutSenderInput[]
    updateMany?: MessageUpdateManyWithWhereWithoutSenderInput | MessageUpdateManyWithWhereWithoutSenderInput[]
    deleteMany?: MessageScalarWhereInput | MessageScalarWhereInput[]
  }

  export type RatingUpdateManyWithoutProducerNestedInput = {
    create?: XOR<RatingCreateWithoutProducerInput, RatingUncheckedCreateWithoutProducerInput> | RatingCreateWithoutProducerInput[] | RatingUncheckedCreateWithoutProducerInput[]
    connectOrCreate?: RatingCreateOrConnectWithoutProducerInput | RatingCreateOrConnectWithoutProducerInput[]
    upsert?: RatingUpsertWithWhereUniqueWithoutProducerInput | RatingUpsertWithWhereUniqueWithoutProducerInput[]
    createMany?: RatingCreateManyProducerInputEnvelope
    set?: RatingWhereUniqueInput | RatingWhereUniqueInput[]
    disconnect?: RatingWhereUniqueInput | RatingWhereUniqueInput[]
    delete?: RatingWhereUniqueInput | RatingWhereUniqueInput[]
    connect?: RatingWhereUniqueInput | RatingWhereUniqueInput[]
    update?: RatingUpdateWithWhereUniqueWithoutProducerInput | RatingUpdateWithWhereUniqueWithoutProducerInput[]
    updateMany?: RatingUpdateManyWithWhereWithoutProducerInput | RatingUpdateManyWithWhereWithoutProducerInput[]
    deleteMany?: RatingScalarWhereInput | RatingScalarWhereInput[]
  }

  export type MechanicUncheckedUpdateOneWithoutUserNestedInput = {
    create?: XOR<MechanicCreateWithoutUserInput, MechanicUncheckedCreateWithoutUserInput>
    connectOrCreate?: MechanicCreateOrConnectWithoutUserInput
    upsert?: MechanicUpsertWithoutUserInput
    disconnect?: MechanicWhereInput | boolean
    delete?: MechanicWhereInput | boolean
    connect?: MechanicWhereUniqueInput
    update?: XOR<XOR<MechanicUpdateToOneWithWhereWithoutUserInput, MechanicUpdateWithoutUserInput>, MechanicUncheckedUpdateWithoutUserInput>
  }

  export type SolicitacaoServicosUncheckedUpdateManyWithoutProducerNestedInput = {
    create?: XOR<SolicitacaoServicosCreateWithoutProducerInput, SolicitacaoServicosUncheckedCreateWithoutProducerInput> | SolicitacaoServicosCreateWithoutProducerInput[] | SolicitacaoServicosUncheckedCreateWithoutProducerInput[]
    connectOrCreate?: SolicitacaoServicosCreateOrConnectWithoutProducerInput | SolicitacaoServicosCreateOrConnectWithoutProducerInput[]
    upsert?: SolicitacaoServicosUpsertWithWhereUniqueWithoutProducerInput | SolicitacaoServicosUpsertWithWhereUniqueWithoutProducerInput[]
    createMany?: SolicitacaoServicosCreateManyProducerInputEnvelope
    set?: SolicitacaoServicosWhereUniqueInput | SolicitacaoServicosWhereUniqueInput[]
    disconnect?: SolicitacaoServicosWhereUniqueInput | SolicitacaoServicosWhereUniqueInput[]
    delete?: SolicitacaoServicosWhereUniqueInput | SolicitacaoServicosWhereUniqueInput[]
    connect?: SolicitacaoServicosWhereUniqueInput | SolicitacaoServicosWhereUniqueInput[]
    update?: SolicitacaoServicosUpdateWithWhereUniqueWithoutProducerInput | SolicitacaoServicosUpdateWithWhereUniqueWithoutProducerInput[]
    updateMany?: SolicitacaoServicosUpdateManyWithWhereWithoutProducerInput | SolicitacaoServicosUpdateManyWithWhereWithoutProducerInput[]
    deleteMany?: SolicitacaoServicosScalarWhereInput | SolicitacaoServicosScalarWhereInput[]
  }

  export type AtribuicaoServicosUncheckedUpdateManyWithoutMechanicNestedInput = {
    create?: XOR<AtribuicaoServicosCreateWithoutMechanicInput, AtribuicaoServicosUncheckedCreateWithoutMechanicInput> | AtribuicaoServicosCreateWithoutMechanicInput[] | AtribuicaoServicosUncheckedCreateWithoutMechanicInput[]
    connectOrCreate?: AtribuicaoServicosCreateOrConnectWithoutMechanicInput | AtribuicaoServicosCreateOrConnectWithoutMechanicInput[]
    upsert?: AtribuicaoServicosUpsertWithWhereUniqueWithoutMechanicInput | AtribuicaoServicosUpsertWithWhereUniqueWithoutMechanicInput[]
    createMany?: AtribuicaoServicosCreateManyMechanicInputEnvelope
    set?: AtribuicaoServicosWhereUniqueInput | AtribuicaoServicosWhereUniqueInput[]
    disconnect?: AtribuicaoServicosWhereUniqueInput | AtribuicaoServicosWhereUniqueInput[]
    delete?: AtribuicaoServicosWhereUniqueInput | AtribuicaoServicosWhereUniqueInput[]
    connect?: AtribuicaoServicosWhereUniqueInput | AtribuicaoServicosWhereUniqueInput[]
    update?: AtribuicaoServicosUpdateWithWhereUniqueWithoutMechanicInput | AtribuicaoServicosUpdateWithWhereUniqueWithoutMechanicInput[]
    updateMany?: AtribuicaoServicosUpdateManyWithWhereWithoutMechanicInput | AtribuicaoServicosUpdateManyWithWhereWithoutMechanicInput[]
    deleteMany?: AtribuicaoServicosScalarWhereInput | AtribuicaoServicosScalarWhereInput[]
  }

  export type MessageUncheckedUpdateManyWithoutSenderNestedInput = {
    create?: XOR<MessageCreateWithoutSenderInput, MessageUncheckedCreateWithoutSenderInput> | MessageCreateWithoutSenderInput[] | MessageUncheckedCreateWithoutSenderInput[]
    connectOrCreate?: MessageCreateOrConnectWithoutSenderInput | MessageCreateOrConnectWithoutSenderInput[]
    upsert?: MessageUpsertWithWhereUniqueWithoutSenderInput | MessageUpsertWithWhereUniqueWithoutSenderInput[]
    createMany?: MessageCreateManySenderInputEnvelope
    set?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    disconnect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    delete?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    connect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    update?: MessageUpdateWithWhereUniqueWithoutSenderInput | MessageUpdateWithWhereUniqueWithoutSenderInput[]
    updateMany?: MessageUpdateManyWithWhereWithoutSenderInput | MessageUpdateManyWithWhereWithoutSenderInput[]
    deleteMany?: MessageScalarWhereInput | MessageScalarWhereInput[]
  }

  export type RatingUncheckedUpdateManyWithoutProducerNestedInput = {
    create?: XOR<RatingCreateWithoutProducerInput, RatingUncheckedCreateWithoutProducerInput> | RatingCreateWithoutProducerInput[] | RatingUncheckedCreateWithoutProducerInput[]
    connectOrCreate?: RatingCreateOrConnectWithoutProducerInput | RatingCreateOrConnectWithoutProducerInput[]
    upsert?: RatingUpsertWithWhereUniqueWithoutProducerInput | RatingUpsertWithWhereUniqueWithoutProducerInput[]
    createMany?: RatingCreateManyProducerInputEnvelope
    set?: RatingWhereUniqueInput | RatingWhereUniqueInput[]
    disconnect?: RatingWhereUniqueInput | RatingWhereUniqueInput[]
    delete?: RatingWhereUniqueInput | RatingWhereUniqueInput[]
    connect?: RatingWhereUniqueInput | RatingWhereUniqueInput[]
    update?: RatingUpdateWithWhereUniqueWithoutProducerInput | RatingUpdateWithWhereUniqueWithoutProducerInput[]
    updateMany?: RatingUpdateManyWithWhereWithoutProducerInput | RatingUpdateManyWithWhereWithoutProducerInput[]
    deleteMany?: RatingScalarWhereInput | RatingScalarWhereInput[]
  }

  export type UsersCreateNestedOneWithoutMechanicInput = {
    create?: XOR<UsersCreateWithoutMechanicInput, UsersUncheckedCreateWithoutMechanicInput>
    connectOrCreate?: UsersCreateOrConnectWithoutMechanicInput
    connect?: UsersWhereUniqueInput
  }

  export type RatingCreateNestedManyWithoutMechanicInput = {
    create?: XOR<RatingCreateWithoutMechanicInput, RatingUncheckedCreateWithoutMechanicInput> | RatingCreateWithoutMechanicInput[] | RatingUncheckedCreateWithoutMechanicInput[]
    connectOrCreate?: RatingCreateOrConnectWithoutMechanicInput | RatingCreateOrConnectWithoutMechanicInput[]
    createMany?: RatingCreateManyMechanicInputEnvelope
    connect?: RatingWhereUniqueInput | RatingWhereUniqueInput[]
  }

  export type RatingUncheckedCreateNestedManyWithoutMechanicInput = {
    create?: XOR<RatingCreateWithoutMechanicInput, RatingUncheckedCreateWithoutMechanicInput> | RatingCreateWithoutMechanicInput[] | RatingUncheckedCreateWithoutMechanicInput[]
    connectOrCreate?: RatingCreateOrConnectWithoutMechanicInput | RatingCreateOrConnectWithoutMechanicInput[]
    createMany?: RatingCreateManyMechanicInputEnvelope
    connect?: RatingWhereUniqueInput | RatingWhereUniqueInput[]
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type NullableFloatFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type UsersUpdateOneRequiredWithoutMechanicNestedInput = {
    create?: XOR<UsersCreateWithoutMechanicInput, UsersUncheckedCreateWithoutMechanicInput>
    connectOrCreate?: UsersCreateOrConnectWithoutMechanicInput
    upsert?: UsersUpsertWithoutMechanicInput
    connect?: UsersWhereUniqueInput
    update?: XOR<XOR<UsersUpdateToOneWithWhereWithoutMechanicInput, UsersUpdateWithoutMechanicInput>, UsersUncheckedUpdateWithoutMechanicInput>
  }

  export type RatingUpdateManyWithoutMechanicNestedInput = {
    create?: XOR<RatingCreateWithoutMechanicInput, RatingUncheckedCreateWithoutMechanicInput> | RatingCreateWithoutMechanicInput[] | RatingUncheckedCreateWithoutMechanicInput[]
    connectOrCreate?: RatingCreateOrConnectWithoutMechanicInput | RatingCreateOrConnectWithoutMechanicInput[]
    upsert?: RatingUpsertWithWhereUniqueWithoutMechanicInput | RatingUpsertWithWhereUniqueWithoutMechanicInput[]
    createMany?: RatingCreateManyMechanicInputEnvelope
    set?: RatingWhereUniqueInput | RatingWhereUniqueInput[]
    disconnect?: RatingWhereUniqueInput | RatingWhereUniqueInput[]
    delete?: RatingWhereUniqueInput | RatingWhereUniqueInput[]
    connect?: RatingWhereUniqueInput | RatingWhereUniqueInput[]
    update?: RatingUpdateWithWhereUniqueWithoutMechanicInput | RatingUpdateWithWhereUniqueWithoutMechanicInput[]
    updateMany?: RatingUpdateManyWithWhereWithoutMechanicInput | RatingUpdateManyWithWhereWithoutMechanicInput[]
    deleteMany?: RatingScalarWhereInput | RatingScalarWhereInput[]
  }

  export type RatingUncheckedUpdateManyWithoutMechanicNestedInput = {
    create?: XOR<RatingCreateWithoutMechanicInput, RatingUncheckedCreateWithoutMechanicInput> | RatingCreateWithoutMechanicInput[] | RatingUncheckedCreateWithoutMechanicInput[]
    connectOrCreate?: RatingCreateOrConnectWithoutMechanicInput | RatingCreateOrConnectWithoutMechanicInput[]
    upsert?: RatingUpsertWithWhereUniqueWithoutMechanicInput | RatingUpsertWithWhereUniqueWithoutMechanicInput[]
    createMany?: RatingCreateManyMechanicInputEnvelope
    set?: RatingWhereUniqueInput | RatingWhereUniqueInput[]
    disconnect?: RatingWhereUniqueInput | RatingWhereUniqueInput[]
    delete?: RatingWhereUniqueInput | RatingWhereUniqueInput[]
    connect?: RatingWhereUniqueInput | RatingWhereUniqueInput[]
    update?: RatingUpdateWithWhereUniqueWithoutMechanicInput | RatingUpdateWithWhereUniqueWithoutMechanicInput[]
    updateMany?: RatingUpdateManyWithWhereWithoutMechanicInput | RatingUpdateManyWithWhereWithoutMechanicInput[]
    deleteMany?: RatingScalarWhereInput | RatingScalarWhereInput[]
  }

  export type UsersCreateNestedOneWithoutSolicitacaoServicosInput = {
    create?: XOR<UsersCreateWithoutSolicitacaoServicosInput, UsersUncheckedCreateWithoutSolicitacaoServicosInput>
    connectOrCreate?: UsersCreateOrConnectWithoutSolicitacaoServicosInput
    connect?: UsersWhereUniqueInput
  }

  export type AtribuicaoServicosCreateNestedManyWithoutSolicitacaoServicoInput = {
    create?: XOR<AtribuicaoServicosCreateWithoutSolicitacaoServicoInput, AtribuicaoServicosUncheckedCreateWithoutSolicitacaoServicoInput> | AtribuicaoServicosCreateWithoutSolicitacaoServicoInput[] | AtribuicaoServicosUncheckedCreateWithoutSolicitacaoServicoInput[]
    connectOrCreate?: AtribuicaoServicosCreateOrConnectWithoutSolicitacaoServicoInput | AtribuicaoServicosCreateOrConnectWithoutSolicitacaoServicoInput[]
    createMany?: AtribuicaoServicosCreateManySolicitacaoServicoInputEnvelope
    connect?: AtribuicaoServicosWhereUniqueInput | AtribuicaoServicosWhereUniqueInput[]
  }

  export type MessageCreateNestedManyWithoutSolicitacaoServicoInput = {
    create?: XOR<MessageCreateWithoutSolicitacaoServicoInput, MessageUncheckedCreateWithoutSolicitacaoServicoInput> | MessageCreateWithoutSolicitacaoServicoInput[] | MessageUncheckedCreateWithoutSolicitacaoServicoInput[]
    connectOrCreate?: MessageCreateOrConnectWithoutSolicitacaoServicoInput | MessageCreateOrConnectWithoutSolicitacaoServicoInput[]
    createMany?: MessageCreateManySolicitacaoServicoInputEnvelope
    connect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
  }

  export type RatingCreateNestedManyWithoutSolicitacaoServicoInput = {
    create?: XOR<RatingCreateWithoutSolicitacaoServicoInput, RatingUncheckedCreateWithoutSolicitacaoServicoInput> | RatingCreateWithoutSolicitacaoServicoInput[] | RatingUncheckedCreateWithoutSolicitacaoServicoInput[]
    connectOrCreate?: RatingCreateOrConnectWithoutSolicitacaoServicoInput | RatingCreateOrConnectWithoutSolicitacaoServicoInput[]
    createMany?: RatingCreateManySolicitacaoServicoInputEnvelope
    connect?: RatingWhereUniqueInput | RatingWhereUniqueInput[]
  }

  export type AtribuicaoServicosUncheckedCreateNestedManyWithoutSolicitacaoServicoInput = {
    create?: XOR<AtribuicaoServicosCreateWithoutSolicitacaoServicoInput, AtribuicaoServicosUncheckedCreateWithoutSolicitacaoServicoInput> | AtribuicaoServicosCreateWithoutSolicitacaoServicoInput[] | AtribuicaoServicosUncheckedCreateWithoutSolicitacaoServicoInput[]
    connectOrCreate?: AtribuicaoServicosCreateOrConnectWithoutSolicitacaoServicoInput | AtribuicaoServicosCreateOrConnectWithoutSolicitacaoServicoInput[]
    createMany?: AtribuicaoServicosCreateManySolicitacaoServicoInputEnvelope
    connect?: AtribuicaoServicosWhereUniqueInput | AtribuicaoServicosWhereUniqueInput[]
  }

  export type MessageUncheckedCreateNestedManyWithoutSolicitacaoServicoInput = {
    create?: XOR<MessageCreateWithoutSolicitacaoServicoInput, MessageUncheckedCreateWithoutSolicitacaoServicoInput> | MessageCreateWithoutSolicitacaoServicoInput[] | MessageUncheckedCreateWithoutSolicitacaoServicoInput[]
    connectOrCreate?: MessageCreateOrConnectWithoutSolicitacaoServicoInput | MessageCreateOrConnectWithoutSolicitacaoServicoInput[]
    createMany?: MessageCreateManySolicitacaoServicoInputEnvelope
    connect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
  }

  export type RatingUncheckedCreateNestedManyWithoutSolicitacaoServicoInput = {
    create?: XOR<RatingCreateWithoutSolicitacaoServicoInput, RatingUncheckedCreateWithoutSolicitacaoServicoInput> | RatingCreateWithoutSolicitacaoServicoInput[] | RatingUncheckedCreateWithoutSolicitacaoServicoInput[]
    connectOrCreate?: RatingCreateOrConnectWithoutSolicitacaoServicoInput | RatingCreateOrConnectWithoutSolicitacaoServicoInput[]
    createMany?: RatingCreateManySolicitacaoServicoInputEnvelope
    connect?: RatingWhereUniqueInput | RatingWhereUniqueInput[]
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type EnumRequestStatusFieldUpdateOperationsInput = {
    set?: $Enums.RequestStatus
  }

  export type UsersUpdateOneRequiredWithoutSolicitacaoServicosNestedInput = {
    create?: XOR<UsersCreateWithoutSolicitacaoServicosInput, UsersUncheckedCreateWithoutSolicitacaoServicosInput>
    connectOrCreate?: UsersCreateOrConnectWithoutSolicitacaoServicosInput
    upsert?: UsersUpsertWithoutSolicitacaoServicosInput
    connect?: UsersWhereUniqueInput
    update?: XOR<XOR<UsersUpdateToOneWithWhereWithoutSolicitacaoServicosInput, UsersUpdateWithoutSolicitacaoServicosInput>, UsersUncheckedUpdateWithoutSolicitacaoServicosInput>
  }

  export type AtribuicaoServicosUpdateManyWithoutSolicitacaoServicoNestedInput = {
    create?: XOR<AtribuicaoServicosCreateWithoutSolicitacaoServicoInput, AtribuicaoServicosUncheckedCreateWithoutSolicitacaoServicoInput> | AtribuicaoServicosCreateWithoutSolicitacaoServicoInput[] | AtribuicaoServicosUncheckedCreateWithoutSolicitacaoServicoInput[]
    connectOrCreate?: AtribuicaoServicosCreateOrConnectWithoutSolicitacaoServicoInput | AtribuicaoServicosCreateOrConnectWithoutSolicitacaoServicoInput[]
    upsert?: AtribuicaoServicosUpsertWithWhereUniqueWithoutSolicitacaoServicoInput | AtribuicaoServicosUpsertWithWhereUniqueWithoutSolicitacaoServicoInput[]
    createMany?: AtribuicaoServicosCreateManySolicitacaoServicoInputEnvelope
    set?: AtribuicaoServicosWhereUniqueInput | AtribuicaoServicosWhereUniqueInput[]
    disconnect?: AtribuicaoServicosWhereUniqueInput | AtribuicaoServicosWhereUniqueInput[]
    delete?: AtribuicaoServicosWhereUniqueInput | AtribuicaoServicosWhereUniqueInput[]
    connect?: AtribuicaoServicosWhereUniqueInput | AtribuicaoServicosWhereUniqueInput[]
    update?: AtribuicaoServicosUpdateWithWhereUniqueWithoutSolicitacaoServicoInput | AtribuicaoServicosUpdateWithWhereUniqueWithoutSolicitacaoServicoInput[]
    updateMany?: AtribuicaoServicosUpdateManyWithWhereWithoutSolicitacaoServicoInput | AtribuicaoServicosUpdateManyWithWhereWithoutSolicitacaoServicoInput[]
    deleteMany?: AtribuicaoServicosScalarWhereInput | AtribuicaoServicosScalarWhereInput[]
  }

  export type MessageUpdateManyWithoutSolicitacaoServicoNestedInput = {
    create?: XOR<MessageCreateWithoutSolicitacaoServicoInput, MessageUncheckedCreateWithoutSolicitacaoServicoInput> | MessageCreateWithoutSolicitacaoServicoInput[] | MessageUncheckedCreateWithoutSolicitacaoServicoInput[]
    connectOrCreate?: MessageCreateOrConnectWithoutSolicitacaoServicoInput | MessageCreateOrConnectWithoutSolicitacaoServicoInput[]
    upsert?: MessageUpsertWithWhereUniqueWithoutSolicitacaoServicoInput | MessageUpsertWithWhereUniqueWithoutSolicitacaoServicoInput[]
    createMany?: MessageCreateManySolicitacaoServicoInputEnvelope
    set?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    disconnect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    delete?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    connect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    update?: MessageUpdateWithWhereUniqueWithoutSolicitacaoServicoInput | MessageUpdateWithWhereUniqueWithoutSolicitacaoServicoInput[]
    updateMany?: MessageUpdateManyWithWhereWithoutSolicitacaoServicoInput | MessageUpdateManyWithWhereWithoutSolicitacaoServicoInput[]
    deleteMany?: MessageScalarWhereInput | MessageScalarWhereInput[]
  }

  export type RatingUpdateManyWithoutSolicitacaoServicoNestedInput = {
    create?: XOR<RatingCreateWithoutSolicitacaoServicoInput, RatingUncheckedCreateWithoutSolicitacaoServicoInput> | RatingCreateWithoutSolicitacaoServicoInput[] | RatingUncheckedCreateWithoutSolicitacaoServicoInput[]
    connectOrCreate?: RatingCreateOrConnectWithoutSolicitacaoServicoInput | RatingCreateOrConnectWithoutSolicitacaoServicoInput[]
    upsert?: RatingUpsertWithWhereUniqueWithoutSolicitacaoServicoInput | RatingUpsertWithWhereUniqueWithoutSolicitacaoServicoInput[]
    createMany?: RatingCreateManySolicitacaoServicoInputEnvelope
    set?: RatingWhereUniqueInput | RatingWhereUniqueInput[]
    disconnect?: RatingWhereUniqueInput | RatingWhereUniqueInput[]
    delete?: RatingWhereUniqueInput | RatingWhereUniqueInput[]
    connect?: RatingWhereUniqueInput | RatingWhereUniqueInput[]
    update?: RatingUpdateWithWhereUniqueWithoutSolicitacaoServicoInput | RatingUpdateWithWhereUniqueWithoutSolicitacaoServicoInput[]
    updateMany?: RatingUpdateManyWithWhereWithoutSolicitacaoServicoInput | RatingUpdateManyWithWhereWithoutSolicitacaoServicoInput[]
    deleteMany?: RatingScalarWhereInput | RatingScalarWhereInput[]
  }

  export type AtribuicaoServicosUncheckedUpdateManyWithoutSolicitacaoServicoNestedInput = {
    create?: XOR<AtribuicaoServicosCreateWithoutSolicitacaoServicoInput, AtribuicaoServicosUncheckedCreateWithoutSolicitacaoServicoInput> | AtribuicaoServicosCreateWithoutSolicitacaoServicoInput[] | AtribuicaoServicosUncheckedCreateWithoutSolicitacaoServicoInput[]
    connectOrCreate?: AtribuicaoServicosCreateOrConnectWithoutSolicitacaoServicoInput | AtribuicaoServicosCreateOrConnectWithoutSolicitacaoServicoInput[]
    upsert?: AtribuicaoServicosUpsertWithWhereUniqueWithoutSolicitacaoServicoInput | AtribuicaoServicosUpsertWithWhereUniqueWithoutSolicitacaoServicoInput[]
    createMany?: AtribuicaoServicosCreateManySolicitacaoServicoInputEnvelope
    set?: AtribuicaoServicosWhereUniqueInput | AtribuicaoServicosWhereUniqueInput[]
    disconnect?: AtribuicaoServicosWhereUniqueInput | AtribuicaoServicosWhereUniqueInput[]
    delete?: AtribuicaoServicosWhereUniqueInput | AtribuicaoServicosWhereUniqueInput[]
    connect?: AtribuicaoServicosWhereUniqueInput | AtribuicaoServicosWhereUniqueInput[]
    update?: AtribuicaoServicosUpdateWithWhereUniqueWithoutSolicitacaoServicoInput | AtribuicaoServicosUpdateWithWhereUniqueWithoutSolicitacaoServicoInput[]
    updateMany?: AtribuicaoServicosUpdateManyWithWhereWithoutSolicitacaoServicoInput | AtribuicaoServicosUpdateManyWithWhereWithoutSolicitacaoServicoInput[]
    deleteMany?: AtribuicaoServicosScalarWhereInput | AtribuicaoServicosScalarWhereInput[]
  }

  export type MessageUncheckedUpdateManyWithoutSolicitacaoServicoNestedInput = {
    create?: XOR<MessageCreateWithoutSolicitacaoServicoInput, MessageUncheckedCreateWithoutSolicitacaoServicoInput> | MessageCreateWithoutSolicitacaoServicoInput[] | MessageUncheckedCreateWithoutSolicitacaoServicoInput[]
    connectOrCreate?: MessageCreateOrConnectWithoutSolicitacaoServicoInput | MessageCreateOrConnectWithoutSolicitacaoServicoInput[]
    upsert?: MessageUpsertWithWhereUniqueWithoutSolicitacaoServicoInput | MessageUpsertWithWhereUniqueWithoutSolicitacaoServicoInput[]
    createMany?: MessageCreateManySolicitacaoServicoInputEnvelope
    set?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    disconnect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    delete?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    connect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    update?: MessageUpdateWithWhereUniqueWithoutSolicitacaoServicoInput | MessageUpdateWithWhereUniqueWithoutSolicitacaoServicoInput[]
    updateMany?: MessageUpdateManyWithWhereWithoutSolicitacaoServicoInput | MessageUpdateManyWithWhereWithoutSolicitacaoServicoInput[]
    deleteMany?: MessageScalarWhereInput | MessageScalarWhereInput[]
  }

  export type RatingUncheckedUpdateManyWithoutSolicitacaoServicoNestedInput = {
    create?: XOR<RatingCreateWithoutSolicitacaoServicoInput, RatingUncheckedCreateWithoutSolicitacaoServicoInput> | RatingCreateWithoutSolicitacaoServicoInput[] | RatingUncheckedCreateWithoutSolicitacaoServicoInput[]
    connectOrCreate?: RatingCreateOrConnectWithoutSolicitacaoServicoInput | RatingCreateOrConnectWithoutSolicitacaoServicoInput[]
    upsert?: RatingUpsertWithWhereUniqueWithoutSolicitacaoServicoInput | RatingUpsertWithWhereUniqueWithoutSolicitacaoServicoInput[]
    createMany?: RatingCreateManySolicitacaoServicoInputEnvelope
    set?: RatingWhereUniqueInput | RatingWhereUniqueInput[]
    disconnect?: RatingWhereUniqueInput | RatingWhereUniqueInput[]
    delete?: RatingWhereUniqueInput | RatingWhereUniqueInput[]
    connect?: RatingWhereUniqueInput | RatingWhereUniqueInput[]
    update?: RatingUpdateWithWhereUniqueWithoutSolicitacaoServicoInput | RatingUpdateWithWhereUniqueWithoutSolicitacaoServicoInput[]
    updateMany?: RatingUpdateManyWithWhereWithoutSolicitacaoServicoInput | RatingUpdateManyWithWhereWithoutSolicitacaoServicoInput[]
    deleteMany?: RatingScalarWhereInput | RatingScalarWhereInput[]
  }

  export type SolicitacaoServicosCreateNestedOneWithoutAssignmentsInput = {
    create?: XOR<SolicitacaoServicosCreateWithoutAssignmentsInput, SolicitacaoServicosUncheckedCreateWithoutAssignmentsInput>
    connectOrCreate?: SolicitacaoServicosCreateOrConnectWithoutAssignmentsInput
    connect?: SolicitacaoServicosWhereUniqueInput
  }

  export type UsersCreateNestedOneWithoutAtribuicaoServicosInput = {
    create?: XOR<UsersCreateWithoutAtribuicaoServicosInput, UsersUncheckedCreateWithoutAtribuicaoServicosInput>
    connectOrCreate?: UsersCreateOrConnectWithoutAtribuicaoServicosInput
    connect?: UsersWhereUniqueInput
  }

  export type EnumStatusAtribuicaoFieldUpdateOperationsInput = {
    set?: $Enums.StatusAtribuicao
  }

  export type SolicitacaoServicosUpdateOneRequiredWithoutAssignmentsNestedInput = {
    create?: XOR<SolicitacaoServicosCreateWithoutAssignmentsInput, SolicitacaoServicosUncheckedCreateWithoutAssignmentsInput>
    connectOrCreate?: SolicitacaoServicosCreateOrConnectWithoutAssignmentsInput
    upsert?: SolicitacaoServicosUpsertWithoutAssignmentsInput
    connect?: SolicitacaoServicosWhereUniqueInput
    update?: XOR<XOR<SolicitacaoServicosUpdateToOneWithWhereWithoutAssignmentsInput, SolicitacaoServicosUpdateWithoutAssignmentsInput>, SolicitacaoServicosUncheckedUpdateWithoutAssignmentsInput>
  }

  export type UsersUpdateOneRequiredWithoutAtribuicaoServicosNestedInput = {
    create?: XOR<UsersCreateWithoutAtribuicaoServicosInput, UsersUncheckedCreateWithoutAtribuicaoServicosInput>
    connectOrCreate?: UsersCreateOrConnectWithoutAtribuicaoServicosInput
    upsert?: UsersUpsertWithoutAtribuicaoServicosInput
    connect?: UsersWhereUniqueInput
    update?: XOR<XOR<UsersUpdateToOneWithWhereWithoutAtribuicaoServicosInput, UsersUpdateWithoutAtribuicaoServicosInput>, UsersUncheckedUpdateWithoutAtribuicaoServicosInput>
  }

  export type SolicitacaoServicosCreateNestedOneWithoutMessagesInput = {
    create?: XOR<SolicitacaoServicosCreateWithoutMessagesInput, SolicitacaoServicosUncheckedCreateWithoutMessagesInput>
    connectOrCreate?: SolicitacaoServicosCreateOrConnectWithoutMessagesInput
    connect?: SolicitacaoServicosWhereUniqueInput
  }

  export type UsersCreateNestedOneWithoutMessageInput = {
    create?: XOR<UsersCreateWithoutMessageInput, UsersUncheckedCreateWithoutMessageInput>
    connectOrCreate?: UsersCreateOrConnectWithoutMessageInput
    connect?: UsersWhereUniqueInput
  }

  export type SolicitacaoServicosUpdateOneRequiredWithoutMessagesNestedInput = {
    create?: XOR<SolicitacaoServicosCreateWithoutMessagesInput, SolicitacaoServicosUncheckedCreateWithoutMessagesInput>
    connectOrCreate?: SolicitacaoServicosCreateOrConnectWithoutMessagesInput
    upsert?: SolicitacaoServicosUpsertWithoutMessagesInput
    connect?: SolicitacaoServicosWhereUniqueInput
    update?: XOR<XOR<SolicitacaoServicosUpdateToOneWithWhereWithoutMessagesInput, SolicitacaoServicosUpdateWithoutMessagesInput>, SolicitacaoServicosUncheckedUpdateWithoutMessagesInput>
  }

  export type UsersUpdateOneRequiredWithoutMessageNestedInput = {
    create?: XOR<UsersCreateWithoutMessageInput, UsersUncheckedCreateWithoutMessageInput>
    connectOrCreate?: UsersCreateOrConnectWithoutMessageInput
    upsert?: UsersUpsertWithoutMessageInput
    connect?: UsersWhereUniqueInput
    update?: XOR<XOR<UsersUpdateToOneWithWhereWithoutMessageInput, UsersUpdateWithoutMessageInput>, UsersUncheckedUpdateWithoutMessageInput>
  }

  export type MechanicCreateNestedOneWithoutRatingsInput = {
    create?: XOR<MechanicCreateWithoutRatingsInput, MechanicUncheckedCreateWithoutRatingsInput>
    connectOrCreate?: MechanicCreateOrConnectWithoutRatingsInput
    connect?: MechanicWhereUniqueInput
  }

  export type UsersCreateNestedOneWithoutRatingsComoProdutorInput = {
    create?: XOR<UsersCreateWithoutRatingsComoProdutorInput, UsersUncheckedCreateWithoutRatingsComoProdutorInput>
    connectOrCreate?: UsersCreateOrConnectWithoutRatingsComoProdutorInput
    connect?: UsersWhereUniqueInput
  }

  export type SolicitacaoServicosCreateNestedOneWithoutRatingInput = {
    create?: XOR<SolicitacaoServicosCreateWithoutRatingInput, SolicitacaoServicosUncheckedCreateWithoutRatingInput>
    connectOrCreate?: SolicitacaoServicosCreateOrConnectWithoutRatingInput
    connect?: SolicitacaoServicosWhereUniqueInput
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type MechanicUpdateOneRequiredWithoutRatingsNestedInput = {
    create?: XOR<MechanicCreateWithoutRatingsInput, MechanicUncheckedCreateWithoutRatingsInput>
    connectOrCreate?: MechanicCreateOrConnectWithoutRatingsInput
    upsert?: MechanicUpsertWithoutRatingsInput
    connect?: MechanicWhereUniqueInput
    update?: XOR<XOR<MechanicUpdateToOneWithWhereWithoutRatingsInput, MechanicUpdateWithoutRatingsInput>, MechanicUncheckedUpdateWithoutRatingsInput>
  }

  export type UsersUpdateOneRequiredWithoutRatingsComoProdutorNestedInput = {
    create?: XOR<UsersCreateWithoutRatingsComoProdutorInput, UsersUncheckedCreateWithoutRatingsComoProdutorInput>
    connectOrCreate?: UsersCreateOrConnectWithoutRatingsComoProdutorInput
    upsert?: UsersUpsertWithoutRatingsComoProdutorInput
    connect?: UsersWhereUniqueInput
    update?: XOR<XOR<UsersUpdateToOneWithWhereWithoutRatingsComoProdutorInput, UsersUpdateWithoutRatingsComoProdutorInput>, UsersUncheckedUpdateWithoutRatingsComoProdutorInput>
  }

  export type SolicitacaoServicosUpdateOneRequiredWithoutRatingNestedInput = {
    create?: XOR<SolicitacaoServicosCreateWithoutRatingInput, SolicitacaoServicosUncheckedCreateWithoutRatingInput>
    connectOrCreate?: SolicitacaoServicosCreateOrConnectWithoutRatingInput
    upsert?: SolicitacaoServicosUpsertWithoutRatingInput
    connect?: SolicitacaoServicosWhereUniqueInput
    update?: XOR<XOR<SolicitacaoServicosUpdateToOneWithWhereWithoutRatingInput, SolicitacaoServicosUpdateWithoutRatingInput>, SolicitacaoServicosUncheckedUpdateWithoutRatingInput>
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedEnumRoleFilter<$PrismaModel = never> = {
    equals?: $Enums.Role | EnumRoleFieldRefInput<$PrismaModel>
    in?: $Enums.Role[] | ListEnumRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.Role[] | ListEnumRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumRoleFilter<$PrismaModel> | $Enums.Role
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedEnumRoleWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Role | EnumRoleFieldRefInput<$PrismaModel>
    in?: $Enums.Role[] | ListEnumRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.Role[] | ListEnumRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumRoleWithAggregatesFilter<$PrismaModel> | $Enums.Role
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumRoleFilter<$PrismaModel>
    _max?: NestedEnumRoleFilter<$PrismaModel>
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedFloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedEnumRequestStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.RequestStatus | EnumRequestStatusFieldRefInput<$PrismaModel>
    in?: $Enums.RequestStatus[] | ListEnumRequestStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.RequestStatus[] | ListEnumRequestStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumRequestStatusFilter<$PrismaModel> | $Enums.RequestStatus
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedEnumRequestStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.RequestStatus | EnumRequestStatusFieldRefInput<$PrismaModel>
    in?: $Enums.RequestStatus[] | ListEnumRequestStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.RequestStatus[] | ListEnumRequestStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumRequestStatusWithAggregatesFilter<$PrismaModel> | $Enums.RequestStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumRequestStatusFilter<$PrismaModel>
    _max?: NestedEnumRequestStatusFilter<$PrismaModel>
  }

  export type NestedEnumStatusAtribuicaoFilter<$PrismaModel = never> = {
    equals?: $Enums.StatusAtribuicao | EnumStatusAtribuicaoFieldRefInput<$PrismaModel>
    in?: $Enums.StatusAtribuicao[] | ListEnumStatusAtribuicaoFieldRefInput<$PrismaModel>
    notIn?: $Enums.StatusAtribuicao[] | ListEnumStatusAtribuicaoFieldRefInput<$PrismaModel>
    not?: NestedEnumStatusAtribuicaoFilter<$PrismaModel> | $Enums.StatusAtribuicao
  }

  export type NestedEnumStatusAtribuicaoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.StatusAtribuicao | EnumStatusAtribuicaoFieldRefInput<$PrismaModel>
    in?: $Enums.StatusAtribuicao[] | ListEnumStatusAtribuicaoFieldRefInput<$PrismaModel>
    notIn?: $Enums.StatusAtribuicao[] | ListEnumStatusAtribuicaoFieldRefInput<$PrismaModel>
    not?: NestedEnumStatusAtribuicaoWithAggregatesFilter<$PrismaModel> | $Enums.StatusAtribuicao
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumStatusAtribuicaoFilter<$PrismaModel>
    _max?: NestedEnumStatusAtribuicaoFilter<$PrismaModel>
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type MechanicCreateWithoutUserInput = {
    specialty: string
    photoUrl: string
    isAvailable?: boolean
    lat?: number | null
    lng?: number | null
    updatedAt?: Date | string
    ratings?: RatingCreateNestedManyWithoutMechanicInput
  }

  export type MechanicUncheckedCreateWithoutUserInput = {
    specialty: string
    photoUrl: string
    isAvailable?: boolean
    lat?: number | null
    lng?: number | null
    updatedAt?: Date | string
    ratings?: RatingUncheckedCreateNestedManyWithoutMechanicInput
  }

  export type MechanicCreateOrConnectWithoutUserInput = {
    where: MechanicWhereUniqueInput
    create: XOR<MechanicCreateWithoutUserInput, MechanicUncheckedCreateWithoutUserInput>
  }

  export type SolicitacaoServicosCreateWithoutProducerInput = {
    id?: string
    description: string
    machineType?: string | null
    locationLat?: number | null
    locationLng?: number | null
    scheduledFor?: Date | string | null
    status?: $Enums.RequestStatus
    createdAt?: Date | string
    assignments?: AtribuicaoServicosCreateNestedManyWithoutSolicitacaoServicoInput
    messages?: MessageCreateNestedManyWithoutSolicitacaoServicoInput
    Rating?: RatingCreateNestedManyWithoutSolicitacaoServicoInput
  }

  export type SolicitacaoServicosUncheckedCreateWithoutProducerInput = {
    id?: string
    description: string
    machineType?: string | null
    locationLat?: number | null
    locationLng?: number | null
    scheduledFor?: Date | string | null
    status?: $Enums.RequestStatus
    createdAt?: Date | string
    assignments?: AtribuicaoServicosUncheckedCreateNestedManyWithoutSolicitacaoServicoInput
    messages?: MessageUncheckedCreateNestedManyWithoutSolicitacaoServicoInput
    Rating?: RatingUncheckedCreateNestedManyWithoutSolicitacaoServicoInput
  }

  export type SolicitacaoServicosCreateOrConnectWithoutProducerInput = {
    where: SolicitacaoServicosWhereUniqueInput
    create: XOR<SolicitacaoServicosCreateWithoutProducerInput, SolicitacaoServicosUncheckedCreateWithoutProducerInput>
  }

  export type SolicitacaoServicosCreateManyProducerInputEnvelope = {
    data: SolicitacaoServicosCreateManyProducerInput | SolicitacaoServicosCreateManyProducerInput[]
    skipDuplicates?: boolean
  }

  export type AtribuicaoServicosCreateWithoutMechanicInput = {
    id?: string
    status?: $Enums.StatusAtribuicao
    decidedAt?: Date | string | null
    createdAt?: Date | string
    solicitacaoServico: SolicitacaoServicosCreateNestedOneWithoutAssignmentsInput
  }

  export type AtribuicaoServicosUncheckedCreateWithoutMechanicInput = {
    id?: string
    solicitacaoServicoId: string
    status?: $Enums.StatusAtribuicao
    decidedAt?: Date | string | null
    createdAt?: Date | string
  }

  export type AtribuicaoServicosCreateOrConnectWithoutMechanicInput = {
    where: AtribuicaoServicosWhereUniqueInput
    create: XOR<AtribuicaoServicosCreateWithoutMechanicInput, AtribuicaoServicosUncheckedCreateWithoutMechanicInput>
  }

  export type AtribuicaoServicosCreateManyMechanicInputEnvelope = {
    data: AtribuicaoServicosCreateManyMechanicInput | AtribuicaoServicosCreateManyMechanicInput[]
    skipDuplicates?: boolean
  }

  export type MessageCreateWithoutSenderInput = {
    id?: string
    content: string
    createdAt?: Date | string
    solicitacaoServico: SolicitacaoServicosCreateNestedOneWithoutMessagesInput
  }

  export type MessageUncheckedCreateWithoutSenderInput = {
    id?: string
    solicitacaoServicoId: string
    content: string
    createdAt?: Date | string
  }

  export type MessageCreateOrConnectWithoutSenderInput = {
    where: MessageWhereUniqueInput
    create: XOR<MessageCreateWithoutSenderInput, MessageUncheckedCreateWithoutSenderInput>
  }

  export type MessageCreateManySenderInputEnvelope = {
    data: MessageCreateManySenderInput | MessageCreateManySenderInput[]
    skipDuplicates?: boolean
  }

  export type RatingCreateWithoutProducerInput = {
    id?: string
    score: number
    comment?: string | null
    createdAt?: Date | string
    mechanic: MechanicCreateNestedOneWithoutRatingsInput
    solicitacaoServico: SolicitacaoServicosCreateNestedOneWithoutRatingInput
  }

  export type RatingUncheckedCreateWithoutProducerInput = {
    id?: string
    mechanicId: string
    solicitacaoServicoId: string
    score: number
    comment?: string | null
    createdAt?: Date | string
  }

  export type RatingCreateOrConnectWithoutProducerInput = {
    where: RatingWhereUniqueInput
    create: XOR<RatingCreateWithoutProducerInput, RatingUncheckedCreateWithoutProducerInput>
  }

  export type RatingCreateManyProducerInputEnvelope = {
    data: RatingCreateManyProducerInput | RatingCreateManyProducerInput[]
    skipDuplicates?: boolean
  }

  export type MechanicUpsertWithoutUserInput = {
    update: XOR<MechanicUpdateWithoutUserInput, MechanicUncheckedUpdateWithoutUserInput>
    create: XOR<MechanicCreateWithoutUserInput, MechanicUncheckedCreateWithoutUserInput>
    where?: MechanicWhereInput
  }

  export type MechanicUpdateToOneWithWhereWithoutUserInput = {
    where?: MechanicWhereInput
    data: XOR<MechanicUpdateWithoutUserInput, MechanicUncheckedUpdateWithoutUserInput>
  }

  export type MechanicUpdateWithoutUserInput = {
    specialty?: StringFieldUpdateOperationsInput | string
    photoUrl?: StringFieldUpdateOperationsInput | string
    isAvailable?: BoolFieldUpdateOperationsInput | boolean
    lat?: NullableFloatFieldUpdateOperationsInput | number | null
    lng?: NullableFloatFieldUpdateOperationsInput | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ratings?: RatingUpdateManyWithoutMechanicNestedInput
  }

  export type MechanicUncheckedUpdateWithoutUserInput = {
    specialty?: StringFieldUpdateOperationsInput | string
    photoUrl?: StringFieldUpdateOperationsInput | string
    isAvailable?: BoolFieldUpdateOperationsInput | boolean
    lat?: NullableFloatFieldUpdateOperationsInput | number | null
    lng?: NullableFloatFieldUpdateOperationsInput | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ratings?: RatingUncheckedUpdateManyWithoutMechanicNestedInput
  }

  export type SolicitacaoServicosUpsertWithWhereUniqueWithoutProducerInput = {
    where: SolicitacaoServicosWhereUniqueInput
    update: XOR<SolicitacaoServicosUpdateWithoutProducerInput, SolicitacaoServicosUncheckedUpdateWithoutProducerInput>
    create: XOR<SolicitacaoServicosCreateWithoutProducerInput, SolicitacaoServicosUncheckedCreateWithoutProducerInput>
  }

  export type SolicitacaoServicosUpdateWithWhereUniqueWithoutProducerInput = {
    where: SolicitacaoServicosWhereUniqueInput
    data: XOR<SolicitacaoServicosUpdateWithoutProducerInput, SolicitacaoServicosUncheckedUpdateWithoutProducerInput>
  }

  export type SolicitacaoServicosUpdateManyWithWhereWithoutProducerInput = {
    where: SolicitacaoServicosScalarWhereInput
    data: XOR<SolicitacaoServicosUpdateManyMutationInput, SolicitacaoServicosUncheckedUpdateManyWithoutProducerInput>
  }

  export type SolicitacaoServicosScalarWhereInput = {
    AND?: SolicitacaoServicosScalarWhereInput | SolicitacaoServicosScalarWhereInput[]
    OR?: SolicitacaoServicosScalarWhereInput[]
    NOT?: SolicitacaoServicosScalarWhereInput | SolicitacaoServicosScalarWhereInput[]
    id?: StringFilter<"SolicitacaoServicos"> | string
    producerId?: StringFilter<"SolicitacaoServicos"> | string
    description?: StringFilter<"SolicitacaoServicos"> | string
    machineType?: StringNullableFilter<"SolicitacaoServicos"> | string | null
    locationLat?: FloatNullableFilter<"SolicitacaoServicos"> | number | null
    locationLng?: FloatNullableFilter<"SolicitacaoServicos"> | number | null
    scheduledFor?: DateTimeNullableFilter<"SolicitacaoServicos"> | Date | string | null
    status?: EnumRequestStatusFilter<"SolicitacaoServicos"> | $Enums.RequestStatus
    createdAt?: DateTimeFilter<"SolicitacaoServicos"> | Date | string
  }

  export type AtribuicaoServicosUpsertWithWhereUniqueWithoutMechanicInput = {
    where: AtribuicaoServicosWhereUniqueInput
    update: XOR<AtribuicaoServicosUpdateWithoutMechanicInput, AtribuicaoServicosUncheckedUpdateWithoutMechanicInput>
    create: XOR<AtribuicaoServicosCreateWithoutMechanicInput, AtribuicaoServicosUncheckedCreateWithoutMechanicInput>
  }

  export type AtribuicaoServicosUpdateWithWhereUniqueWithoutMechanicInput = {
    where: AtribuicaoServicosWhereUniqueInput
    data: XOR<AtribuicaoServicosUpdateWithoutMechanicInput, AtribuicaoServicosUncheckedUpdateWithoutMechanicInput>
  }

  export type AtribuicaoServicosUpdateManyWithWhereWithoutMechanicInput = {
    where: AtribuicaoServicosScalarWhereInput
    data: XOR<AtribuicaoServicosUpdateManyMutationInput, AtribuicaoServicosUncheckedUpdateManyWithoutMechanicInput>
  }

  export type AtribuicaoServicosScalarWhereInput = {
    AND?: AtribuicaoServicosScalarWhereInput | AtribuicaoServicosScalarWhereInput[]
    OR?: AtribuicaoServicosScalarWhereInput[]
    NOT?: AtribuicaoServicosScalarWhereInput | AtribuicaoServicosScalarWhereInput[]
    id?: StringFilter<"AtribuicaoServicos"> | string
    solicitacaoServicoId?: StringFilter<"AtribuicaoServicos"> | string
    mechanicId?: StringFilter<"AtribuicaoServicos"> | string
    status?: EnumStatusAtribuicaoFilter<"AtribuicaoServicos"> | $Enums.StatusAtribuicao
    decidedAt?: DateTimeNullableFilter<"AtribuicaoServicos"> | Date | string | null
    createdAt?: DateTimeFilter<"AtribuicaoServicos"> | Date | string
  }

  export type MessageUpsertWithWhereUniqueWithoutSenderInput = {
    where: MessageWhereUniqueInput
    update: XOR<MessageUpdateWithoutSenderInput, MessageUncheckedUpdateWithoutSenderInput>
    create: XOR<MessageCreateWithoutSenderInput, MessageUncheckedCreateWithoutSenderInput>
  }

  export type MessageUpdateWithWhereUniqueWithoutSenderInput = {
    where: MessageWhereUniqueInput
    data: XOR<MessageUpdateWithoutSenderInput, MessageUncheckedUpdateWithoutSenderInput>
  }

  export type MessageUpdateManyWithWhereWithoutSenderInput = {
    where: MessageScalarWhereInput
    data: XOR<MessageUpdateManyMutationInput, MessageUncheckedUpdateManyWithoutSenderInput>
  }

  export type MessageScalarWhereInput = {
    AND?: MessageScalarWhereInput | MessageScalarWhereInput[]
    OR?: MessageScalarWhereInput[]
    NOT?: MessageScalarWhereInput | MessageScalarWhereInput[]
    id?: StringFilter<"Message"> | string
    solicitacaoServicoId?: StringFilter<"Message"> | string
    senderId?: StringFilter<"Message"> | string
    content?: StringFilter<"Message"> | string
    createdAt?: DateTimeFilter<"Message"> | Date | string
  }

  export type RatingUpsertWithWhereUniqueWithoutProducerInput = {
    where: RatingWhereUniqueInput
    update: XOR<RatingUpdateWithoutProducerInput, RatingUncheckedUpdateWithoutProducerInput>
    create: XOR<RatingCreateWithoutProducerInput, RatingUncheckedCreateWithoutProducerInput>
  }

  export type RatingUpdateWithWhereUniqueWithoutProducerInput = {
    where: RatingWhereUniqueInput
    data: XOR<RatingUpdateWithoutProducerInput, RatingUncheckedUpdateWithoutProducerInput>
  }

  export type RatingUpdateManyWithWhereWithoutProducerInput = {
    where: RatingScalarWhereInput
    data: XOR<RatingUpdateManyMutationInput, RatingUncheckedUpdateManyWithoutProducerInput>
  }

  export type RatingScalarWhereInput = {
    AND?: RatingScalarWhereInput | RatingScalarWhereInput[]
    OR?: RatingScalarWhereInput[]
    NOT?: RatingScalarWhereInput | RatingScalarWhereInput[]
    id?: StringFilter<"Rating"> | string
    mechanicId?: StringFilter<"Rating"> | string
    producerId?: StringFilter<"Rating"> | string
    solicitacaoServicoId?: StringFilter<"Rating"> | string
    score?: IntFilter<"Rating"> | number
    comment?: StringNullableFilter<"Rating"> | string | null
    createdAt?: DateTimeFilter<"Rating"> | Date | string
  }

  export type UsersCreateWithoutMechanicInput = {
    id?: string
    email: string
    password: string
    fullName: string
    role: $Enums.Role
    phone?: string | null
    cpfCnpj?: string | null
    stateReg?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    SolicitacaoServicos?: SolicitacaoServicosCreateNestedManyWithoutProducerInput
    AtribuicaoServicos?: AtribuicaoServicosCreateNestedManyWithoutMechanicInput
    Message?: MessageCreateNestedManyWithoutSenderInput
    ratingsComoProdutor?: RatingCreateNestedManyWithoutProducerInput
  }

  export type UsersUncheckedCreateWithoutMechanicInput = {
    id?: string
    email: string
    password: string
    fullName: string
    role: $Enums.Role
    phone?: string | null
    cpfCnpj?: string | null
    stateReg?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    SolicitacaoServicos?: SolicitacaoServicosUncheckedCreateNestedManyWithoutProducerInput
    AtribuicaoServicos?: AtribuicaoServicosUncheckedCreateNestedManyWithoutMechanicInput
    Message?: MessageUncheckedCreateNestedManyWithoutSenderInput
    ratingsComoProdutor?: RatingUncheckedCreateNestedManyWithoutProducerInput
  }

  export type UsersCreateOrConnectWithoutMechanicInput = {
    where: UsersWhereUniqueInput
    create: XOR<UsersCreateWithoutMechanicInput, UsersUncheckedCreateWithoutMechanicInput>
  }

  export type RatingCreateWithoutMechanicInput = {
    id?: string
    score: number
    comment?: string | null
    createdAt?: Date | string
    producer: UsersCreateNestedOneWithoutRatingsComoProdutorInput
    solicitacaoServico: SolicitacaoServicosCreateNestedOneWithoutRatingInput
  }

  export type RatingUncheckedCreateWithoutMechanicInput = {
    id?: string
    producerId: string
    solicitacaoServicoId: string
    score: number
    comment?: string | null
    createdAt?: Date | string
  }

  export type RatingCreateOrConnectWithoutMechanicInput = {
    where: RatingWhereUniqueInput
    create: XOR<RatingCreateWithoutMechanicInput, RatingUncheckedCreateWithoutMechanicInput>
  }

  export type RatingCreateManyMechanicInputEnvelope = {
    data: RatingCreateManyMechanicInput | RatingCreateManyMechanicInput[]
    skipDuplicates?: boolean
  }

  export type UsersUpsertWithoutMechanicInput = {
    update: XOR<UsersUpdateWithoutMechanicInput, UsersUncheckedUpdateWithoutMechanicInput>
    create: XOR<UsersCreateWithoutMechanicInput, UsersUncheckedCreateWithoutMechanicInput>
    where?: UsersWhereInput
  }

  export type UsersUpdateToOneWithWhereWithoutMechanicInput = {
    where?: UsersWhereInput
    data: XOR<UsersUpdateWithoutMechanicInput, UsersUncheckedUpdateWithoutMechanicInput>
  }

  export type UsersUpdateWithoutMechanicInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    cpfCnpj?: NullableStringFieldUpdateOperationsInput | string | null
    stateReg?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    SolicitacaoServicos?: SolicitacaoServicosUpdateManyWithoutProducerNestedInput
    AtribuicaoServicos?: AtribuicaoServicosUpdateManyWithoutMechanicNestedInput
    Message?: MessageUpdateManyWithoutSenderNestedInput
    ratingsComoProdutor?: RatingUpdateManyWithoutProducerNestedInput
  }

  export type UsersUncheckedUpdateWithoutMechanicInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    cpfCnpj?: NullableStringFieldUpdateOperationsInput | string | null
    stateReg?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    SolicitacaoServicos?: SolicitacaoServicosUncheckedUpdateManyWithoutProducerNestedInput
    AtribuicaoServicos?: AtribuicaoServicosUncheckedUpdateManyWithoutMechanicNestedInput
    Message?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    ratingsComoProdutor?: RatingUncheckedUpdateManyWithoutProducerNestedInput
  }

  export type RatingUpsertWithWhereUniqueWithoutMechanicInput = {
    where: RatingWhereUniqueInput
    update: XOR<RatingUpdateWithoutMechanicInput, RatingUncheckedUpdateWithoutMechanicInput>
    create: XOR<RatingCreateWithoutMechanicInput, RatingUncheckedCreateWithoutMechanicInput>
  }

  export type RatingUpdateWithWhereUniqueWithoutMechanicInput = {
    where: RatingWhereUniqueInput
    data: XOR<RatingUpdateWithoutMechanicInput, RatingUncheckedUpdateWithoutMechanicInput>
  }

  export type RatingUpdateManyWithWhereWithoutMechanicInput = {
    where: RatingScalarWhereInput
    data: XOR<RatingUpdateManyMutationInput, RatingUncheckedUpdateManyWithoutMechanicInput>
  }

  export type UsersCreateWithoutSolicitacaoServicosInput = {
    id?: string
    email: string
    password: string
    fullName: string
    role: $Enums.Role
    phone?: string | null
    cpfCnpj?: string | null
    stateReg?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    mechanic?: MechanicCreateNestedOneWithoutUserInput
    AtribuicaoServicos?: AtribuicaoServicosCreateNestedManyWithoutMechanicInput
    Message?: MessageCreateNestedManyWithoutSenderInput
    ratingsComoProdutor?: RatingCreateNestedManyWithoutProducerInput
  }

  export type UsersUncheckedCreateWithoutSolicitacaoServicosInput = {
    id?: string
    email: string
    password: string
    fullName: string
    role: $Enums.Role
    phone?: string | null
    cpfCnpj?: string | null
    stateReg?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    mechanic?: MechanicUncheckedCreateNestedOneWithoutUserInput
    AtribuicaoServicos?: AtribuicaoServicosUncheckedCreateNestedManyWithoutMechanicInput
    Message?: MessageUncheckedCreateNestedManyWithoutSenderInput
    ratingsComoProdutor?: RatingUncheckedCreateNestedManyWithoutProducerInput
  }

  export type UsersCreateOrConnectWithoutSolicitacaoServicosInput = {
    where: UsersWhereUniqueInput
    create: XOR<UsersCreateWithoutSolicitacaoServicosInput, UsersUncheckedCreateWithoutSolicitacaoServicosInput>
  }

  export type AtribuicaoServicosCreateWithoutSolicitacaoServicoInput = {
    id?: string
    status?: $Enums.StatusAtribuicao
    decidedAt?: Date | string | null
    createdAt?: Date | string
    mechanic: UsersCreateNestedOneWithoutAtribuicaoServicosInput
  }

  export type AtribuicaoServicosUncheckedCreateWithoutSolicitacaoServicoInput = {
    id?: string
    mechanicId: string
    status?: $Enums.StatusAtribuicao
    decidedAt?: Date | string | null
    createdAt?: Date | string
  }

  export type AtribuicaoServicosCreateOrConnectWithoutSolicitacaoServicoInput = {
    where: AtribuicaoServicosWhereUniqueInput
    create: XOR<AtribuicaoServicosCreateWithoutSolicitacaoServicoInput, AtribuicaoServicosUncheckedCreateWithoutSolicitacaoServicoInput>
  }

  export type AtribuicaoServicosCreateManySolicitacaoServicoInputEnvelope = {
    data: AtribuicaoServicosCreateManySolicitacaoServicoInput | AtribuicaoServicosCreateManySolicitacaoServicoInput[]
    skipDuplicates?: boolean
  }

  export type MessageCreateWithoutSolicitacaoServicoInput = {
    id?: string
    content: string
    createdAt?: Date | string
    sender: UsersCreateNestedOneWithoutMessageInput
  }

  export type MessageUncheckedCreateWithoutSolicitacaoServicoInput = {
    id?: string
    senderId: string
    content: string
    createdAt?: Date | string
  }

  export type MessageCreateOrConnectWithoutSolicitacaoServicoInput = {
    where: MessageWhereUniqueInput
    create: XOR<MessageCreateWithoutSolicitacaoServicoInput, MessageUncheckedCreateWithoutSolicitacaoServicoInput>
  }

  export type MessageCreateManySolicitacaoServicoInputEnvelope = {
    data: MessageCreateManySolicitacaoServicoInput | MessageCreateManySolicitacaoServicoInput[]
    skipDuplicates?: boolean
  }

  export type RatingCreateWithoutSolicitacaoServicoInput = {
    id?: string
    score: number
    comment?: string | null
    createdAt?: Date | string
    mechanic: MechanicCreateNestedOneWithoutRatingsInput
    producer: UsersCreateNestedOneWithoutRatingsComoProdutorInput
  }

  export type RatingUncheckedCreateWithoutSolicitacaoServicoInput = {
    id?: string
    mechanicId: string
    producerId: string
    score: number
    comment?: string | null
    createdAt?: Date | string
  }

  export type RatingCreateOrConnectWithoutSolicitacaoServicoInput = {
    where: RatingWhereUniqueInput
    create: XOR<RatingCreateWithoutSolicitacaoServicoInput, RatingUncheckedCreateWithoutSolicitacaoServicoInput>
  }

  export type RatingCreateManySolicitacaoServicoInputEnvelope = {
    data: RatingCreateManySolicitacaoServicoInput | RatingCreateManySolicitacaoServicoInput[]
    skipDuplicates?: boolean
  }

  export type UsersUpsertWithoutSolicitacaoServicosInput = {
    update: XOR<UsersUpdateWithoutSolicitacaoServicosInput, UsersUncheckedUpdateWithoutSolicitacaoServicosInput>
    create: XOR<UsersCreateWithoutSolicitacaoServicosInput, UsersUncheckedCreateWithoutSolicitacaoServicosInput>
    where?: UsersWhereInput
  }

  export type UsersUpdateToOneWithWhereWithoutSolicitacaoServicosInput = {
    where?: UsersWhereInput
    data: XOR<UsersUpdateWithoutSolicitacaoServicosInput, UsersUncheckedUpdateWithoutSolicitacaoServicosInput>
  }

  export type UsersUpdateWithoutSolicitacaoServicosInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    cpfCnpj?: NullableStringFieldUpdateOperationsInput | string | null
    stateReg?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    mechanic?: MechanicUpdateOneWithoutUserNestedInput
    AtribuicaoServicos?: AtribuicaoServicosUpdateManyWithoutMechanicNestedInput
    Message?: MessageUpdateManyWithoutSenderNestedInput
    ratingsComoProdutor?: RatingUpdateManyWithoutProducerNestedInput
  }

  export type UsersUncheckedUpdateWithoutSolicitacaoServicosInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    cpfCnpj?: NullableStringFieldUpdateOperationsInput | string | null
    stateReg?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    mechanic?: MechanicUncheckedUpdateOneWithoutUserNestedInput
    AtribuicaoServicos?: AtribuicaoServicosUncheckedUpdateManyWithoutMechanicNestedInput
    Message?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    ratingsComoProdutor?: RatingUncheckedUpdateManyWithoutProducerNestedInput
  }

  export type AtribuicaoServicosUpsertWithWhereUniqueWithoutSolicitacaoServicoInput = {
    where: AtribuicaoServicosWhereUniqueInput
    update: XOR<AtribuicaoServicosUpdateWithoutSolicitacaoServicoInput, AtribuicaoServicosUncheckedUpdateWithoutSolicitacaoServicoInput>
    create: XOR<AtribuicaoServicosCreateWithoutSolicitacaoServicoInput, AtribuicaoServicosUncheckedCreateWithoutSolicitacaoServicoInput>
  }

  export type AtribuicaoServicosUpdateWithWhereUniqueWithoutSolicitacaoServicoInput = {
    where: AtribuicaoServicosWhereUniqueInput
    data: XOR<AtribuicaoServicosUpdateWithoutSolicitacaoServicoInput, AtribuicaoServicosUncheckedUpdateWithoutSolicitacaoServicoInput>
  }

  export type AtribuicaoServicosUpdateManyWithWhereWithoutSolicitacaoServicoInput = {
    where: AtribuicaoServicosScalarWhereInput
    data: XOR<AtribuicaoServicosUpdateManyMutationInput, AtribuicaoServicosUncheckedUpdateManyWithoutSolicitacaoServicoInput>
  }

  export type MessageUpsertWithWhereUniqueWithoutSolicitacaoServicoInput = {
    where: MessageWhereUniqueInput
    update: XOR<MessageUpdateWithoutSolicitacaoServicoInput, MessageUncheckedUpdateWithoutSolicitacaoServicoInput>
    create: XOR<MessageCreateWithoutSolicitacaoServicoInput, MessageUncheckedCreateWithoutSolicitacaoServicoInput>
  }

  export type MessageUpdateWithWhereUniqueWithoutSolicitacaoServicoInput = {
    where: MessageWhereUniqueInput
    data: XOR<MessageUpdateWithoutSolicitacaoServicoInput, MessageUncheckedUpdateWithoutSolicitacaoServicoInput>
  }

  export type MessageUpdateManyWithWhereWithoutSolicitacaoServicoInput = {
    where: MessageScalarWhereInput
    data: XOR<MessageUpdateManyMutationInput, MessageUncheckedUpdateManyWithoutSolicitacaoServicoInput>
  }

  export type RatingUpsertWithWhereUniqueWithoutSolicitacaoServicoInput = {
    where: RatingWhereUniqueInput
    update: XOR<RatingUpdateWithoutSolicitacaoServicoInput, RatingUncheckedUpdateWithoutSolicitacaoServicoInput>
    create: XOR<RatingCreateWithoutSolicitacaoServicoInput, RatingUncheckedCreateWithoutSolicitacaoServicoInput>
  }

  export type RatingUpdateWithWhereUniqueWithoutSolicitacaoServicoInput = {
    where: RatingWhereUniqueInput
    data: XOR<RatingUpdateWithoutSolicitacaoServicoInput, RatingUncheckedUpdateWithoutSolicitacaoServicoInput>
  }

  export type RatingUpdateManyWithWhereWithoutSolicitacaoServicoInput = {
    where: RatingScalarWhereInput
    data: XOR<RatingUpdateManyMutationInput, RatingUncheckedUpdateManyWithoutSolicitacaoServicoInput>
  }

  export type SolicitacaoServicosCreateWithoutAssignmentsInput = {
    id?: string
    description: string
    machineType?: string | null
    locationLat?: number | null
    locationLng?: number | null
    scheduledFor?: Date | string | null
    status?: $Enums.RequestStatus
    createdAt?: Date | string
    producer: UsersCreateNestedOneWithoutSolicitacaoServicosInput
    messages?: MessageCreateNestedManyWithoutSolicitacaoServicoInput
    Rating?: RatingCreateNestedManyWithoutSolicitacaoServicoInput
  }

  export type SolicitacaoServicosUncheckedCreateWithoutAssignmentsInput = {
    id?: string
    producerId: string
    description: string
    machineType?: string | null
    locationLat?: number | null
    locationLng?: number | null
    scheduledFor?: Date | string | null
    status?: $Enums.RequestStatus
    createdAt?: Date | string
    messages?: MessageUncheckedCreateNestedManyWithoutSolicitacaoServicoInput
    Rating?: RatingUncheckedCreateNestedManyWithoutSolicitacaoServicoInput
  }

  export type SolicitacaoServicosCreateOrConnectWithoutAssignmentsInput = {
    where: SolicitacaoServicosWhereUniqueInput
    create: XOR<SolicitacaoServicosCreateWithoutAssignmentsInput, SolicitacaoServicosUncheckedCreateWithoutAssignmentsInput>
  }

  export type UsersCreateWithoutAtribuicaoServicosInput = {
    id?: string
    email: string
    password: string
    fullName: string
    role: $Enums.Role
    phone?: string | null
    cpfCnpj?: string | null
    stateReg?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    mechanic?: MechanicCreateNestedOneWithoutUserInput
    SolicitacaoServicos?: SolicitacaoServicosCreateNestedManyWithoutProducerInput
    Message?: MessageCreateNestedManyWithoutSenderInput
    ratingsComoProdutor?: RatingCreateNestedManyWithoutProducerInput
  }

  export type UsersUncheckedCreateWithoutAtribuicaoServicosInput = {
    id?: string
    email: string
    password: string
    fullName: string
    role: $Enums.Role
    phone?: string | null
    cpfCnpj?: string | null
    stateReg?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    mechanic?: MechanicUncheckedCreateNestedOneWithoutUserInput
    SolicitacaoServicos?: SolicitacaoServicosUncheckedCreateNestedManyWithoutProducerInput
    Message?: MessageUncheckedCreateNestedManyWithoutSenderInput
    ratingsComoProdutor?: RatingUncheckedCreateNestedManyWithoutProducerInput
  }

  export type UsersCreateOrConnectWithoutAtribuicaoServicosInput = {
    where: UsersWhereUniqueInput
    create: XOR<UsersCreateWithoutAtribuicaoServicosInput, UsersUncheckedCreateWithoutAtribuicaoServicosInput>
  }

  export type SolicitacaoServicosUpsertWithoutAssignmentsInput = {
    update: XOR<SolicitacaoServicosUpdateWithoutAssignmentsInput, SolicitacaoServicosUncheckedUpdateWithoutAssignmentsInput>
    create: XOR<SolicitacaoServicosCreateWithoutAssignmentsInput, SolicitacaoServicosUncheckedCreateWithoutAssignmentsInput>
    where?: SolicitacaoServicosWhereInput
  }

  export type SolicitacaoServicosUpdateToOneWithWhereWithoutAssignmentsInput = {
    where?: SolicitacaoServicosWhereInput
    data: XOR<SolicitacaoServicosUpdateWithoutAssignmentsInput, SolicitacaoServicosUncheckedUpdateWithoutAssignmentsInput>
  }

  export type SolicitacaoServicosUpdateWithoutAssignmentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    machineType?: NullableStringFieldUpdateOperationsInput | string | null
    locationLat?: NullableFloatFieldUpdateOperationsInput | number | null
    locationLng?: NullableFloatFieldUpdateOperationsInput | number | null
    scheduledFor?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumRequestStatusFieldUpdateOperationsInput | $Enums.RequestStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    producer?: UsersUpdateOneRequiredWithoutSolicitacaoServicosNestedInput
    messages?: MessageUpdateManyWithoutSolicitacaoServicoNestedInput
    Rating?: RatingUpdateManyWithoutSolicitacaoServicoNestedInput
  }

  export type SolicitacaoServicosUncheckedUpdateWithoutAssignmentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    producerId?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    machineType?: NullableStringFieldUpdateOperationsInput | string | null
    locationLat?: NullableFloatFieldUpdateOperationsInput | number | null
    locationLng?: NullableFloatFieldUpdateOperationsInput | number | null
    scheduledFor?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumRequestStatusFieldUpdateOperationsInput | $Enums.RequestStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    messages?: MessageUncheckedUpdateManyWithoutSolicitacaoServicoNestedInput
    Rating?: RatingUncheckedUpdateManyWithoutSolicitacaoServicoNestedInput
  }

  export type UsersUpsertWithoutAtribuicaoServicosInput = {
    update: XOR<UsersUpdateWithoutAtribuicaoServicosInput, UsersUncheckedUpdateWithoutAtribuicaoServicosInput>
    create: XOR<UsersCreateWithoutAtribuicaoServicosInput, UsersUncheckedCreateWithoutAtribuicaoServicosInput>
    where?: UsersWhereInput
  }

  export type UsersUpdateToOneWithWhereWithoutAtribuicaoServicosInput = {
    where?: UsersWhereInput
    data: XOR<UsersUpdateWithoutAtribuicaoServicosInput, UsersUncheckedUpdateWithoutAtribuicaoServicosInput>
  }

  export type UsersUpdateWithoutAtribuicaoServicosInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    cpfCnpj?: NullableStringFieldUpdateOperationsInput | string | null
    stateReg?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    mechanic?: MechanicUpdateOneWithoutUserNestedInput
    SolicitacaoServicos?: SolicitacaoServicosUpdateManyWithoutProducerNestedInput
    Message?: MessageUpdateManyWithoutSenderNestedInput
    ratingsComoProdutor?: RatingUpdateManyWithoutProducerNestedInput
  }

  export type UsersUncheckedUpdateWithoutAtribuicaoServicosInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    cpfCnpj?: NullableStringFieldUpdateOperationsInput | string | null
    stateReg?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    mechanic?: MechanicUncheckedUpdateOneWithoutUserNestedInput
    SolicitacaoServicos?: SolicitacaoServicosUncheckedUpdateManyWithoutProducerNestedInput
    Message?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    ratingsComoProdutor?: RatingUncheckedUpdateManyWithoutProducerNestedInput
  }

  export type SolicitacaoServicosCreateWithoutMessagesInput = {
    id?: string
    description: string
    machineType?: string | null
    locationLat?: number | null
    locationLng?: number | null
    scheduledFor?: Date | string | null
    status?: $Enums.RequestStatus
    createdAt?: Date | string
    producer: UsersCreateNestedOneWithoutSolicitacaoServicosInput
    assignments?: AtribuicaoServicosCreateNestedManyWithoutSolicitacaoServicoInput
    Rating?: RatingCreateNestedManyWithoutSolicitacaoServicoInput
  }

  export type SolicitacaoServicosUncheckedCreateWithoutMessagesInput = {
    id?: string
    producerId: string
    description: string
    machineType?: string | null
    locationLat?: number | null
    locationLng?: number | null
    scheduledFor?: Date | string | null
    status?: $Enums.RequestStatus
    createdAt?: Date | string
    assignments?: AtribuicaoServicosUncheckedCreateNestedManyWithoutSolicitacaoServicoInput
    Rating?: RatingUncheckedCreateNestedManyWithoutSolicitacaoServicoInput
  }

  export type SolicitacaoServicosCreateOrConnectWithoutMessagesInput = {
    where: SolicitacaoServicosWhereUniqueInput
    create: XOR<SolicitacaoServicosCreateWithoutMessagesInput, SolicitacaoServicosUncheckedCreateWithoutMessagesInput>
  }

  export type UsersCreateWithoutMessageInput = {
    id?: string
    email: string
    password: string
    fullName: string
    role: $Enums.Role
    phone?: string | null
    cpfCnpj?: string | null
    stateReg?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    mechanic?: MechanicCreateNestedOneWithoutUserInput
    SolicitacaoServicos?: SolicitacaoServicosCreateNestedManyWithoutProducerInput
    AtribuicaoServicos?: AtribuicaoServicosCreateNestedManyWithoutMechanicInput
    ratingsComoProdutor?: RatingCreateNestedManyWithoutProducerInput
  }

  export type UsersUncheckedCreateWithoutMessageInput = {
    id?: string
    email: string
    password: string
    fullName: string
    role: $Enums.Role
    phone?: string | null
    cpfCnpj?: string | null
    stateReg?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    mechanic?: MechanicUncheckedCreateNestedOneWithoutUserInput
    SolicitacaoServicos?: SolicitacaoServicosUncheckedCreateNestedManyWithoutProducerInput
    AtribuicaoServicos?: AtribuicaoServicosUncheckedCreateNestedManyWithoutMechanicInput
    ratingsComoProdutor?: RatingUncheckedCreateNestedManyWithoutProducerInput
  }

  export type UsersCreateOrConnectWithoutMessageInput = {
    where: UsersWhereUniqueInput
    create: XOR<UsersCreateWithoutMessageInput, UsersUncheckedCreateWithoutMessageInput>
  }

  export type SolicitacaoServicosUpsertWithoutMessagesInput = {
    update: XOR<SolicitacaoServicosUpdateWithoutMessagesInput, SolicitacaoServicosUncheckedUpdateWithoutMessagesInput>
    create: XOR<SolicitacaoServicosCreateWithoutMessagesInput, SolicitacaoServicosUncheckedCreateWithoutMessagesInput>
    where?: SolicitacaoServicosWhereInput
  }

  export type SolicitacaoServicosUpdateToOneWithWhereWithoutMessagesInput = {
    where?: SolicitacaoServicosWhereInput
    data: XOR<SolicitacaoServicosUpdateWithoutMessagesInput, SolicitacaoServicosUncheckedUpdateWithoutMessagesInput>
  }

  export type SolicitacaoServicosUpdateWithoutMessagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    machineType?: NullableStringFieldUpdateOperationsInput | string | null
    locationLat?: NullableFloatFieldUpdateOperationsInput | number | null
    locationLng?: NullableFloatFieldUpdateOperationsInput | number | null
    scheduledFor?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumRequestStatusFieldUpdateOperationsInput | $Enums.RequestStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    producer?: UsersUpdateOneRequiredWithoutSolicitacaoServicosNestedInput
    assignments?: AtribuicaoServicosUpdateManyWithoutSolicitacaoServicoNestedInput
    Rating?: RatingUpdateManyWithoutSolicitacaoServicoNestedInput
  }

  export type SolicitacaoServicosUncheckedUpdateWithoutMessagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    producerId?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    machineType?: NullableStringFieldUpdateOperationsInput | string | null
    locationLat?: NullableFloatFieldUpdateOperationsInput | number | null
    locationLng?: NullableFloatFieldUpdateOperationsInput | number | null
    scheduledFor?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumRequestStatusFieldUpdateOperationsInput | $Enums.RequestStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    assignments?: AtribuicaoServicosUncheckedUpdateManyWithoutSolicitacaoServicoNestedInput
    Rating?: RatingUncheckedUpdateManyWithoutSolicitacaoServicoNestedInput
  }

  export type UsersUpsertWithoutMessageInput = {
    update: XOR<UsersUpdateWithoutMessageInput, UsersUncheckedUpdateWithoutMessageInput>
    create: XOR<UsersCreateWithoutMessageInput, UsersUncheckedCreateWithoutMessageInput>
    where?: UsersWhereInput
  }

  export type UsersUpdateToOneWithWhereWithoutMessageInput = {
    where?: UsersWhereInput
    data: XOR<UsersUpdateWithoutMessageInput, UsersUncheckedUpdateWithoutMessageInput>
  }

  export type UsersUpdateWithoutMessageInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    cpfCnpj?: NullableStringFieldUpdateOperationsInput | string | null
    stateReg?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    mechanic?: MechanicUpdateOneWithoutUserNestedInput
    SolicitacaoServicos?: SolicitacaoServicosUpdateManyWithoutProducerNestedInput
    AtribuicaoServicos?: AtribuicaoServicosUpdateManyWithoutMechanicNestedInput
    ratingsComoProdutor?: RatingUpdateManyWithoutProducerNestedInput
  }

  export type UsersUncheckedUpdateWithoutMessageInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    cpfCnpj?: NullableStringFieldUpdateOperationsInput | string | null
    stateReg?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    mechanic?: MechanicUncheckedUpdateOneWithoutUserNestedInput
    SolicitacaoServicos?: SolicitacaoServicosUncheckedUpdateManyWithoutProducerNestedInput
    AtribuicaoServicos?: AtribuicaoServicosUncheckedUpdateManyWithoutMechanicNestedInput
    ratingsComoProdutor?: RatingUncheckedUpdateManyWithoutProducerNestedInput
  }

  export type MechanicCreateWithoutRatingsInput = {
    specialty: string
    photoUrl: string
    isAvailable?: boolean
    lat?: number | null
    lng?: number | null
    updatedAt?: Date | string
    user: UsersCreateNestedOneWithoutMechanicInput
  }

  export type MechanicUncheckedCreateWithoutRatingsInput = {
    userId: string
    specialty: string
    photoUrl: string
    isAvailable?: boolean
    lat?: number | null
    lng?: number | null
    updatedAt?: Date | string
  }

  export type MechanicCreateOrConnectWithoutRatingsInput = {
    where: MechanicWhereUniqueInput
    create: XOR<MechanicCreateWithoutRatingsInput, MechanicUncheckedCreateWithoutRatingsInput>
  }

  export type UsersCreateWithoutRatingsComoProdutorInput = {
    id?: string
    email: string
    password: string
    fullName: string
    role: $Enums.Role
    phone?: string | null
    cpfCnpj?: string | null
    stateReg?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    mechanic?: MechanicCreateNestedOneWithoutUserInput
    SolicitacaoServicos?: SolicitacaoServicosCreateNestedManyWithoutProducerInput
    AtribuicaoServicos?: AtribuicaoServicosCreateNestedManyWithoutMechanicInput
    Message?: MessageCreateNestedManyWithoutSenderInput
  }

  export type UsersUncheckedCreateWithoutRatingsComoProdutorInput = {
    id?: string
    email: string
    password: string
    fullName: string
    role: $Enums.Role
    phone?: string | null
    cpfCnpj?: string | null
    stateReg?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    mechanic?: MechanicUncheckedCreateNestedOneWithoutUserInput
    SolicitacaoServicos?: SolicitacaoServicosUncheckedCreateNestedManyWithoutProducerInput
    AtribuicaoServicos?: AtribuicaoServicosUncheckedCreateNestedManyWithoutMechanicInput
    Message?: MessageUncheckedCreateNestedManyWithoutSenderInput
  }

  export type UsersCreateOrConnectWithoutRatingsComoProdutorInput = {
    where: UsersWhereUniqueInput
    create: XOR<UsersCreateWithoutRatingsComoProdutorInput, UsersUncheckedCreateWithoutRatingsComoProdutorInput>
  }

  export type SolicitacaoServicosCreateWithoutRatingInput = {
    id?: string
    description: string
    machineType?: string | null
    locationLat?: number | null
    locationLng?: number | null
    scheduledFor?: Date | string | null
    status?: $Enums.RequestStatus
    createdAt?: Date | string
    producer: UsersCreateNestedOneWithoutSolicitacaoServicosInput
    assignments?: AtribuicaoServicosCreateNestedManyWithoutSolicitacaoServicoInput
    messages?: MessageCreateNestedManyWithoutSolicitacaoServicoInput
  }

  export type SolicitacaoServicosUncheckedCreateWithoutRatingInput = {
    id?: string
    producerId: string
    description: string
    machineType?: string | null
    locationLat?: number | null
    locationLng?: number | null
    scheduledFor?: Date | string | null
    status?: $Enums.RequestStatus
    createdAt?: Date | string
    assignments?: AtribuicaoServicosUncheckedCreateNestedManyWithoutSolicitacaoServicoInput
    messages?: MessageUncheckedCreateNestedManyWithoutSolicitacaoServicoInput
  }

  export type SolicitacaoServicosCreateOrConnectWithoutRatingInput = {
    where: SolicitacaoServicosWhereUniqueInput
    create: XOR<SolicitacaoServicosCreateWithoutRatingInput, SolicitacaoServicosUncheckedCreateWithoutRatingInput>
  }

  export type MechanicUpsertWithoutRatingsInput = {
    update: XOR<MechanicUpdateWithoutRatingsInput, MechanicUncheckedUpdateWithoutRatingsInput>
    create: XOR<MechanicCreateWithoutRatingsInput, MechanicUncheckedCreateWithoutRatingsInput>
    where?: MechanicWhereInput
  }

  export type MechanicUpdateToOneWithWhereWithoutRatingsInput = {
    where?: MechanicWhereInput
    data: XOR<MechanicUpdateWithoutRatingsInput, MechanicUncheckedUpdateWithoutRatingsInput>
  }

  export type MechanicUpdateWithoutRatingsInput = {
    specialty?: StringFieldUpdateOperationsInput | string
    photoUrl?: StringFieldUpdateOperationsInput | string
    isAvailable?: BoolFieldUpdateOperationsInput | boolean
    lat?: NullableFloatFieldUpdateOperationsInput | number | null
    lng?: NullableFloatFieldUpdateOperationsInput | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UsersUpdateOneRequiredWithoutMechanicNestedInput
  }

  export type MechanicUncheckedUpdateWithoutRatingsInput = {
    userId?: StringFieldUpdateOperationsInput | string
    specialty?: StringFieldUpdateOperationsInput | string
    photoUrl?: StringFieldUpdateOperationsInput | string
    isAvailable?: BoolFieldUpdateOperationsInput | boolean
    lat?: NullableFloatFieldUpdateOperationsInput | number | null
    lng?: NullableFloatFieldUpdateOperationsInput | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UsersUpsertWithoutRatingsComoProdutorInput = {
    update: XOR<UsersUpdateWithoutRatingsComoProdutorInput, UsersUncheckedUpdateWithoutRatingsComoProdutorInput>
    create: XOR<UsersCreateWithoutRatingsComoProdutorInput, UsersUncheckedCreateWithoutRatingsComoProdutorInput>
    where?: UsersWhereInput
  }

  export type UsersUpdateToOneWithWhereWithoutRatingsComoProdutorInput = {
    where?: UsersWhereInput
    data: XOR<UsersUpdateWithoutRatingsComoProdutorInput, UsersUncheckedUpdateWithoutRatingsComoProdutorInput>
  }

  export type UsersUpdateWithoutRatingsComoProdutorInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    cpfCnpj?: NullableStringFieldUpdateOperationsInput | string | null
    stateReg?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    mechanic?: MechanicUpdateOneWithoutUserNestedInput
    SolicitacaoServicos?: SolicitacaoServicosUpdateManyWithoutProducerNestedInput
    AtribuicaoServicos?: AtribuicaoServicosUpdateManyWithoutMechanicNestedInput
    Message?: MessageUpdateManyWithoutSenderNestedInput
  }

  export type UsersUncheckedUpdateWithoutRatingsComoProdutorInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    cpfCnpj?: NullableStringFieldUpdateOperationsInput | string | null
    stateReg?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    mechanic?: MechanicUncheckedUpdateOneWithoutUserNestedInput
    SolicitacaoServicos?: SolicitacaoServicosUncheckedUpdateManyWithoutProducerNestedInput
    AtribuicaoServicos?: AtribuicaoServicosUncheckedUpdateManyWithoutMechanicNestedInput
    Message?: MessageUncheckedUpdateManyWithoutSenderNestedInput
  }

  export type SolicitacaoServicosUpsertWithoutRatingInput = {
    update: XOR<SolicitacaoServicosUpdateWithoutRatingInput, SolicitacaoServicosUncheckedUpdateWithoutRatingInput>
    create: XOR<SolicitacaoServicosCreateWithoutRatingInput, SolicitacaoServicosUncheckedCreateWithoutRatingInput>
    where?: SolicitacaoServicosWhereInput
  }

  export type SolicitacaoServicosUpdateToOneWithWhereWithoutRatingInput = {
    where?: SolicitacaoServicosWhereInput
    data: XOR<SolicitacaoServicosUpdateWithoutRatingInput, SolicitacaoServicosUncheckedUpdateWithoutRatingInput>
  }

  export type SolicitacaoServicosUpdateWithoutRatingInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    machineType?: NullableStringFieldUpdateOperationsInput | string | null
    locationLat?: NullableFloatFieldUpdateOperationsInput | number | null
    locationLng?: NullableFloatFieldUpdateOperationsInput | number | null
    scheduledFor?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumRequestStatusFieldUpdateOperationsInput | $Enums.RequestStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    producer?: UsersUpdateOneRequiredWithoutSolicitacaoServicosNestedInput
    assignments?: AtribuicaoServicosUpdateManyWithoutSolicitacaoServicoNestedInput
    messages?: MessageUpdateManyWithoutSolicitacaoServicoNestedInput
  }

  export type SolicitacaoServicosUncheckedUpdateWithoutRatingInput = {
    id?: StringFieldUpdateOperationsInput | string
    producerId?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    machineType?: NullableStringFieldUpdateOperationsInput | string | null
    locationLat?: NullableFloatFieldUpdateOperationsInput | number | null
    locationLng?: NullableFloatFieldUpdateOperationsInput | number | null
    scheduledFor?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumRequestStatusFieldUpdateOperationsInput | $Enums.RequestStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    assignments?: AtribuicaoServicosUncheckedUpdateManyWithoutSolicitacaoServicoNestedInput
    messages?: MessageUncheckedUpdateManyWithoutSolicitacaoServicoNestedInput
  }

  export type SolicitacaoServicosCreateManyProducerInput = {
    id?: string
    description: string
    machineType?: string | null
    locationLat?: number | null
    locationLng?: number | null
    scheduledFor?: Date | string | null
    status?: $Enums.RequestStatus
    createdAt?: Date | string
  }

  export type AtribuicaoServicosCreateManyMechanicInput = {
    id?: string
    solicitacaoServicoId: string
    status?: $Enums.StatusAtribuicao
    decidedAt?: Date | string | null
    createdAt?: Date | string
  }

  export type MessageCreateManySenderInput = {
    id?: string
    solicitacaoServicoId: string
    content: string
    createdAt?: Date | string
  }

  export type RatingCreateManyProducerInput = {
    id?: string
    mechanicId: string
    solicitacaoServicoId: string
    score: number
    comment?: string | null
    createdAt?: Date | string
  }

  export type SolicitacaoServicosUpdateWithoutProducerInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    machineType?: NullableStringFieldUpdateOperationsInput | string | null
    locationLat?: NullableFloatFieldUpdateOperationsInput | number | null
    locationLng?: NullableFloatFieldUpdateOperationsInput | number | null
    scheduledFor?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumRequestStatusFieldUpdateOperationsInput | $Enums.RequestStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    assignments?: AtribuicaoServicosUpdateManyWithoutSolicitacaoServicoNestedInput
    messages?: MessageUpdateManyWithoutSolicitacaoServicoNestedInput
    Rating?: RatingUpdateManyWithoutSolicitacaoServicoNestedInput
  }

  export type SolicitacaoServicosUncheckedUpdateWithoutProducerInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    machineType?: NullableStringFieldUpdateOperationsInput | string | null
    locationLat?: NullableFloatFieldUpdateOperationsInput | number | null
    locationLng?: NullableFloatFieldUpdateOperationsInput | number | null
    scheduledFor?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumRequestStatusFieldUpdateOperationsInput | $Enums.RequestStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    assignments?: AtribuicaoServicosUncheckedUpdateManyWithoutSolicitacaoServicoNestedInput
    messages?: MessageUncheckedUpdateManyWithoutSolicitacaoServicoNestedInput
    Rating?: RatingUncheckedUpdateManyWithoutSolicitacaoServicoNestedInput
  }

  export type SolicitacaoServicosUncheckedUpdateManyWithoutProducerInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    machineType?: NullableStringFieldUpdateOperationsInput | string | null
    locationLat?: NullableFloatFieldUpdateOperationsInput | number | null
    locationLng?: NullableFloatFieldUpdateOperationsInput | number | null
    scheduledFor?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumRequestStatusFieldUpdateOperationsInput | $Enums.RequestStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AtribuicaoServicosUpdateWithoutMechanicInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumStatusAtribuicaoFieldUpdateOperationsInput | $Enums.StatusAtribuicao
    decidedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    solicitacaoServico?: SolicitacaoServicosUpdateOneRequiredWithoutAssignmentsNestedInput
  }

  export type AtribuicaoServicosUncheckedUpdateWithoutMechanicInput = {
    id?: StringFieldUpdateOperationsInput | string
    solicitacaoServicoId?: StringFieldUpdateOperationsInput | string
    status?: EnumStatusAtribuicaoFieldUpdateOperationsInput | $Enums.StatusAtribuicao
    decidedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AtribuicaoServicosUncheckedUpdateManyWithoutMechanicInput = {
    id?: StringFieldUpdateOperationsInput | string
    solicitacaoServicoId?: StringFieldUpdateOperationsInput | string
    status?: EnumStatusAtribuicaoFieldUpdateOperationsInput | $Enums.StatusAtribuicao
    decidedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MessageUpdateWithoutSenderInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    solicitacaoServico?: SolicitacaoServicosUpdateOneRequiredWithoutMessagesNestedInput
  }

  export type MessageUncheckedUpdateWithoutSenderInput = {
    id?: StringFieldUpdateOperationsInput | string
    solicitacaoServicoId?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MessageUncheckedUpdateManyWithoutSenderInput = {
    id?: StringFieldUpdateOperationsInput | string
    solicitacaoServicoId?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RatingUpdateWithoutProducerInput = {
    id?: StringFieldUpdateOperationsInput | string
    score?: IntFieldUpdateOperationsInput | number
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    mechanic?: MechanicUpdateOneRequiredWithoutRatingsNestedInput
    solicitacaoServico?: SolicitacaoServicosUpdateOneRequiredWithoutRatingNestedInput
  }

  export type RatingUncheckedUpdateWithoutProducerInput = {
    id?: StringFieldUpdateOperationsInput | string
    mechanicId?: StringFieldUpdateOperationsInput | string
    solicitacaoServicoId?: StringFieldUpdateOperationsInput | string
    score?: IntFieldUpdateOperationsInput | number
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RatingUncheckedUpdateManyWithoutProducerInput = {
    id?: StringFieldUpdateOperationsInput | string
    mechanicId?: StringFieldUpdateOperationsInput | string
    solicitacaoServicoId?: StringFieldUpdateOperationsInput | string
    score?: IntFieldUpdateOperationsInput | number
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RatingCreateManyMechanicInput = {
    id?: string
    producerId: string
    solicitacaoServicoId: string
    score: number
    comment?: string | null
    createdAt?: Date | string
  }

  export type RatingUpdateWithoutMechanicInput = {
    id?: StringFieldUpdateOperationsInput | string
    score?: IntFieldUpdateOperationsInput | number
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    producer?: UsersUpdateOneRequiredWithoutRatingsComoProdutorNestedInput
    solicitacaoServico?: SolicitacaoServicosUpdateOneRequiredWithoutRatingNestedInput
  }

  export type RatingUncheckedUpdateWithoutMechanicInput = {
    id?: StringFieldUpdateOperationsInput | string
    producerId?: StringFieldUpdateOperationsInput | string
    solicitacaoServicoId?: StringFieldUpdateOperationsInput | string
    score?: IntFieldUpdateOperationsInput | number
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RatingUncheckedUpdateManyWithoutMechanicInput = {
    id?: StringFieldUpdateOperationsInput | string
    producerId?: StringFieldUpdateOperationsInput | string
    solicitacaoServicoId?: StringFieldUpdateOperationsInput | string
    score?: IntFieldUpdateOperationsInput | number
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AtribuicaoServicosCreateManySolicitacaoServicoInput = {
    id?: string
    mechanicId: string
    status?: $Enums.StatusAtribuicao
    decidedAt?: Date | string | null
    createdAt?: Date | string
  }

  export type MessageCreateManySolicitacaoServicoInput = {
    id?: string
    senderId: string
    content: string
    createdAt?: Date | string
  }

  export type RatingCreateManySolicitacaoServicoInput = {
    id?: string
    mechanicId: string
    producerId: string
    score: number
    comment?: string | null
    createdAt?: Date | string
  }

  export type AtribuicaoServicosUpdateWithoutSolicitacaoServicoInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumStatusAtribuicaoFieldUpdateOperationsInput | $Enums.StatusAtribuicao
    decidedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    mechanic?: UsersUpdateOneRequiredWithoutAtribuicaoServicosNestedInput
  }

  export type AtribuicaoServicosUncheckedUpdateWithoutSolicitacaoServicoInput = {
    id?: StringFieldUpdateOperationsInput | string
    mechanicId?: StringFieldUpdateOperationsInput | string
    status?: EnumStatusAtribuicaoFieldUpdateOperationsInput | $Enums.StatusAtribuicao
    decidedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AtribuicaoServicosUncheckedUpdateManyWithoutSolicitacaoServicoInput = {
    id?: StringFieldUpdateOperationsInput | string
    mechanicId?: StringFieldUpdateOperationsInput | string
    status?: EnumStatusAtribuicaoFieldUpdateOperationsInput | $Enums.StatusAtribuicao
    decidedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MessageUpdateWithoutSolicitacaoServicoInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sender?: UsersUpdateOneRequiredWithoutMessageNestedInput
  }

  export type MessageUncheckedUpdateWithoutSolicitacaoServicoInput = {
    id?: StringFieldUpdateOperationsInput | string
    senderId?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MessageUncheckedUpdateManyWithoutSolicitacaoServicoInput = {
    id?: StringFieldUpdateOperationsInput | string
    senderId?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RatingUpdateWithoutSolicitacaoServicoInput = {
    id?: StringFieldUpdateOperationsInput | string
    score?: IntFieldUpdateOperationsInput | number
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    mechanic?: MechanicUpdateOneRequiredWithoutRatingsNestedInput
    producer?: UsersUpdateOneRequiredWithoutRatingsComoProdutorNestedInput
  }

  export type RatingUncheckedUpdateWithoutSolicitacaoServicoInput = {
    id?: StringFieldUpdateOperationsInput | string
    mechanicId?: StringFieldUpdateOperationsInput | string
    producerId?: StringFieldUpdateOperationsInput | string
    score?: IntFieldUpdateOperationsInput | number
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RatingUncheckedUpdateManyWithoutSolicitacaoServicoInput = {
    id?: StringFieldUpdateOperationsInput | string
    mechanicId?: StringFieldUpdateOperationsInput | string
    producerId?: StringFieldUpdateOperationsInput | string
    score?: IntFieldUpdateOperationsInput | number
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}